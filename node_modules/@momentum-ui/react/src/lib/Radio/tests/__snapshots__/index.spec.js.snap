// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`tests for <Radio /> should match SnapShot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Radio
    checked={false}
    className=""
    disabled={false}
    htmlId="test123"
    inputRef={null}
    label=""
    name=""
    nestedLevel={0}
    onChange={[Function]}
    required={false}
    tabIndex={0}
    value=""
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <input
          checked={false}
          className="md-input md-radio__input"
          disabled={false}
          id="test123"
          name=""
          onChange={[Function]}
          required={false}
          tabIndex={0}
          type="radio"
          value=""
        />,
        <Label
          className="md-radio__label"
          htmlFor="test123"
          label=""
          theme=""
        />,
        null,
      ],
      "className": "md-input-container md-radio ",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "checked": false,
          "className": "md-input md-radio__input",
          "disabled": false,
          "id": "test123",
          "name": "",
          "onChange": [Function],
          "required": false,
          "tabIndex": 0,
          "type": "radio",
          "value": "",
        },
        "ref": null,
        "rendered": null,
        "type": "input",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": null,
          "className": "md-radio__label",
          "htmlFor": "test123",
          "label": "",
          "theme": "",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      null,
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <input
            checked={false}
            className="md-input md-radio__input"
            disabled={false}
            id="test123"
            name=""
            onChange={[Function]}
            required={false}
            tabIndex={0}
            type="radio"
            value=""
          />,
          <Label
            className="md-radio__label"
            htmlFor="test123"
            label=""
            theme=""
          />,
          null,
        ],
        "className": "md-input-container md-radio ",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "checked": false,
            "className": "md-input md-radio__input",
            "disabled": false,
            "id": "test123",
            "name": "",
            "onChange": [Function],
            "required": false,
            "tabIndex": 0,
            "type": "radio",
            "value": "",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": null,
            "className": "md-radio__label",
            "htmlFor": "test123",
            "label": "",
            "theme": "",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        null,
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Map {},
}
`;
