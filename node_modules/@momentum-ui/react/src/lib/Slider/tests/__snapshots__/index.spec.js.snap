// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`tests for <Slider /> should match SnapShot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Slider
    canCross={false}
    className=""
    disabled={false}
    max={100}
    min={0}
    onChange={null}
    step={1}
    tick={0}
    translateFn={null}
    value={
      Object {
        "high": 40,
        "low": 20,
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "aria-valuemax": 100,
      "aria-valuemin": 0,
      "aria-valuenow": undefined,
      "aria-valuetext": "Low is 20, high is 40",
      "children": Array [
        <span
          className="md-slider__bar"
        />,
        <span
          className="md-slider__selection"
          style={
            Object {
              "left": "20%",
              "width": "20%",
            }
          }
        />,
        <SliderPointer
          onMove={[Function]}
          position={20}
        />,
        <SliderPointer
          onMove={[Function]}
          position={40}
        />,
        <div>
          <span
            className="md-slider__hashlabel"
          >
            0
          </span>
          <span
            className="md-slider__hashlabel"
          >
            100
          </span>
        </div>,
      ],
      "className": "md-slider",
      "role": "slider",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "className": "md-slider__bar",
        },
        "ref": [Function],
        "rendered": null,
        "type": "span",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "className": "md-slider__selection",
          "style": Object {
            "left": "20%",
            "width": "20%",
          },
        },
        "ref": null,
        "rendered": null,
        "type": "span",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "onMove": [Function],
          "position": 20,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "onMove": [Function],
          "position": 40,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <span
              className="md-slider__hashlabel"
            >
              0
            </span>,
            <span
              className="md-slider__hashlabel"
            >
              100
            </span>,
          ],
        },
        "ref": [Function],
        "rendered": Array [
          Object {
            "instance": null,
            "key": "tick-0",
            "nodeType": "host",
            "props": Object {
              "children": 0,
              "className": "md-slider__hashlabel",
            },
            "ref": null,
            "rendered": 0,
            "type": "span",
          },
          Object {
            "instance": null,
            "key": "tick-1",
            "nodeType": "host",
            "props": Object {
              "children": 100,
              "className": "md-slider__hashlabel",
            },
            "ref": null,
            "rendered": 100,
            "type": "span",
          },
        ],
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "aria-valuemax": 100,
        "aria-valuemin": 0,
        "aria-valuenow": undefined,
        "aria-valuetext": "Low is 20, high is 40",
        "children": Array [
          <span
            className="md-slider__bar"
          />,
          <span
            className="md-slider__selection"
            style={
              Object {
                "left": "20%",
                "width": "20%",
              }
            }
          />,
          <SliderPointer
            onMove={[Function]}
            position={20}
          />,
          <SliderPointer
            onMove={[Function]}
            position={40}
          />,
          <div>
            <span
              className="md-slider__hashlabel"
            >
              0
            </span>
            <span
              className="md-slider__hashlabel"
            >
              100
            </span>
          </div>,
        ],
        "className": "md-slider",
        "role": "slider",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "md-slider__bar",
          },
          "ref": [Function],
          "rendered": null,
          "type": "span",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "md-slider__selection",
            "style": Object {
              "left": "20%",
              "width": "20%",
            },
          },
          "ref": null,
          "rendered": null,
          "type": "span",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "onMove": [Function],
            "position": 20,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "onMove": [Function],
            "position": 40,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <span
                className="md-slider__hashlabel"
              >
                0
              </span>,
              <span
                className="md-slider__hashlabel"
              >
                100
              </span>,
            ],
          },
          "ref": [Function],
          "rendered": Array [
            Object {
              "instance": null,
              "key": "tick-0",
              "nodeType": "host",
              "props": Object {
                "children": 0,
                "className": "md-slider__hashlabel",
              },
              "ref": null,
              "rendered": 0,
              "type": "span",
            },
            Object {
              "instance": null,
              "key": "tick-1",
              "nodeType": "host",
              "props": Object {
                "children": 100,
                "className": "md-slider__hashlabel",
              },
              "ref": null,
              "rendered": 100,
              "type": "span",
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Map {},
  Symbol(enzyme.__childContext__): null,
}
`;
