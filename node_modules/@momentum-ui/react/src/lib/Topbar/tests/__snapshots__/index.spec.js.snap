// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Topbar /> should render a Topbar 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Topbar
    anchor={null}
    brandAnchorElement={null}
    className=""
    color="dark"
    fixed={false}
    icon="icon-cisco-logo"
    image={null}
    title=""
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <div
        className="md-top-bar__container"
      >
        <div
          className="md-top-bar__brand"
        >
          <a
            className="md-brand"
            href={null}
          >
            <div
              className="md-brand__logo"
            >
              <i
                className="icon icon-cisco-logo"
              />
            </div>
            
          </a>
        </div>
      </div>,
      "className": "md-top-bar md-top-bar--dark",
      "role": "navigation",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="md-top-bar__brand"
          >
            <a
              className="md-brand"
              href={null}
            >
              <div
                className="md-brand__logo"
              >
                <i
                  className="icon icon-cisco-logo"
                />
              </div>
              
            </a>
          </div>,
          null,
        ],
        "className": "md-top-bar__container",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <a
              className="md-brand"
              href={null}
            >
              <div
                className="md-brand__logo"
              >
                <i
                  className="icon icon-cisco-logo"
                />
              </div>
              
            </a>,
            "className": "md-top-bar__brand",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <div
                  className="md-brand__logo"
                >
                  <i
                    className="icon icon-cisco-logo"
                  />
                </div>,
                "",
              ],
              "className": "md-brand",
              "href": null,
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": "md-brand__logo",
                "nodeType": "host",
                "props": Object {
                  "children": <i
                    className="icon icon-cisco-logo"
                  />,
                  "className": "md-brand__logo",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "className": "icon icon-cisco-logo",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "i",
                },
                "type": "div",
              },
              "",
            ],
            "type": "a",
          },
          "type": "div",
        },
        null,
      ],
      "type": "div",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="md-top-bar__container"
        >
          <div
            className="md-top-bar__brand"
          >
            <a
              className="md-brand"
              href={null}
            >
              <div
                className="md-brand__logo"
              >
                <i
                  className="icon icon-cisco-logo"
                />
              </div>
              
            </a>
          </div>
        </div>,
        "className": "md-top-bar md-top-bar--dark",
        "role": "navigation",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="md-top-bar__brand"
            >
              <a
                className="md-brand"
                href={null}
              >
                <div
                  className="md-brand__logo"
                >
                  <i
                    className="icon icon-cisco-logo"
                  />
                </div>
                
              </a>
            </div>,
            null,
          ],
          "className": "md-top-bar__container",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <a
                className="md-brand"
                href={null}
              >
                <div
                  className="md-brand__logo"
                >
                  <i
                    className="icon icon-cisco-logo"
                  />
                </div>
                
              </a>,
              "className": "md-top-bar__brand",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <div
                    className="md-brand__logo"
                  >
                    <i
                      className="icon icon-cisco-logo"
                    />
                  </div>,
                  "",
                ],
                "className": "md-brand",
                "href": null,
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": "md-brand__logo",
                  "nodeType": "host",
                  "props": Object {
                    "children": <i
                      className="icon icon-cisco-logo"
                    />,
                    "className": "md-brand__logo",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "className": "icon icon-cisco-logo",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": "i",
                  },
                  "type": "div",
                },
                "",
              ],
              "type": "a",
            },
            "type": "div",
          },
          null,
        ],
        "type": "div",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Map {},
  Symbol(enzyme.__childContext__): null,
}
`;
