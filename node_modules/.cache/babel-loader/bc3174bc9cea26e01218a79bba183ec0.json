{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = undefined;\n\nvar _isNan = require('babel-runtime/core-js/number/is-nan');\n\nvar _isNan2 = _interopRequireDefault(_isNan);\n\nvar _promise = require('babel-runtime/core-js/promise');\n\nvar _promise2 = _interopRequireDefault(_promise);\n\nvar _stringify = require('babel-runtime/core-js/json/stringify');\n\nvar _stringify2 = _interopRequireDefault(_stringify);\n\nvar _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');\n\nvar _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _class, _temp, _initialiseProps;\n\nvar _webexCore = require('@webex/webex-core');\n\nvar _constants = require('../constants');\n\nvar _loggerProxy = require('../common/logs/logger-proxy');\n\nvar _loggerProxy2 = _interopRequireDefault(_loggerProxy);\n\nvar _util = require('../meeting/util');\n\nvar _util2 = _interopRequireDefault(_util);\n\nvar _handler = require('./handler');\n\nvar _handler2 = _interopRequireDefault(_handler);\n\nvar _request = require('./request');\n\nvar _request2 = _interopRequireDefault(_request);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * Roap options\n * @typedef {Object} RoapOptions\n * @property {String} sdp\n * @property {Meeting} meeting\n * @property {Number} roapSeq\n */\n\n/**\n  * @typedef {Object} SeqOptions\n  * @property {String} correlationId\n  * @property {String} mediaId\n  * @property {Number} seq\n  */\n\n/**\n * @class Roap\n * @export\n * @private\n */\n\n\nvar Roap = (_temp = _class = function (_StatelessWebexPlugin) {\n  (0, _inherits3.default)(Roap, _StatelessWebexPlugin);\n  /**\n   *\n   * @param {Object} attrs\n   * @param {Object} options\n   */\n\n  function Roap(attrs, options) {\n    (0, _classCallCheck3.default)(this, Roap);\n    /**\n     * @instance\n     * @type {Object}\n     * @private\n     * @memberof Roap\n     */\n\n    var _this = (0, _possibleConstructorReturn3.default)(this, (Roap.__proto__ || (0, _getPrototypeOf2.default)(Roap)).call(this, {}, options));\n\n    _initialiseProps.call(_this);\n\n    _this.attrs = attrs;\n    /**\n     * @instance\n     * @type {Object}\n     * @private\n     * @memberof Roap\n     */\n\n    _this.options = options;\n    /**\n     * The Roap Process State Handler\n     * @instance\n     * @type {RoapHandler}\n     * @private\n     * @memberof Roap\n     */\n\n    _this.roapHandler = new _handler2.default(_this.attrs, _this.options, _this.sendRoapOK.bind(_this), _this.sendRoapAnswer.bind(_this));\n    /**\n     * The Roap Request Server Proxy Object\n     * @instance\n     * @type {RoapRequest}\n     * @private\n     * @memberof Roap\n     */\n\n    _this.roapRequest = new _request2.default({}, options);\n    /**\n     * The last roap offer sent to server and acked\n     * @instance\n     * @type {Object}\n     * @private\n     * @memberof Roap\n     */\n\n    _this.lastRoapOffer = {};\n    return _this;\n  }\n  /**\n   * Starts listening to mercury events for Roap messages\n   * @param {object} data event object\n   * @returns {Promise}\n   * @private\n   * @memberof Roap\n   */\n\n\n  (0, _createClass3.default)(Roap, [{\n    key: 'roapEvent',\n    value: function roapEvent(data) {\n      var msg = data.message;\n      var correlationId = data.correlationId;\n\n      _loggerProxy2.default.logger.log('Roap->roapEvent#Received Roap Message [' + (0, _stringify2.default)(msg, null, 2) + ']');\n\n      this.roapHandler.submit({\n        type: _constants.ROAP.RECEIVE_ROAP_MSG,\n        msg: msg,\n        correlationId: correlationId\n      });\n    }\n    /**\n     *\n     * @param {String} correlationId correlation id of a meeting\n     * @param {Number} seq ROAP sequence number\n     * @returns {Promise}\n     * @private\n     * @memberof Roap\n     */\n\n  }, {\n    key: 'stop',\n    value: function stop(correlationId, seq) {\n      this.roapHandler.submit({\n        type: _constants.ROAP.RECEIVE_CALL_LEAVE,\n        seq: seq,\n        correlationId: correlationId\n      });\n      return _promise2.default.resolve();\n    }\n    /**\n     *\n     * @param {SeqOptions} options\n     * @returns {null}\n     * @private\n     * @memberof Roap\n     */\n\n  }, {\n    key: 'sendRoapOK',\n    value: function sendRoapOK(options) {\n      var _this2 = this;\n\n      return _promise2.default.resolve().then(function () {\n        var meeting = _this2.webex.meetings.meetingCollection.get(options.correlationId);\n\n        var roapMessage = {\n          messageType: _constants.ROAP.ROAP_TYPES.OK,\n          version: _constants.ROAP.ROAP_VERSION,\n          seq: options.seq\n        };\n\n        _loggerProxy2.default.logger.log('Roap->sendRoapOK#ROAP OK sending with seq ' + options.seq);\n\n        return _this2.roapRequest.sendRoap({\n          roapMessage: roapMessage,\n          locusSelfUrl: meeting.selfUrl,\n          mediaId: options.mediaId,\n          correlationId: options.correlationId,\n          audioMuted: meeting.isAudioMuted(),\n          videoMuted: meeting.isVideoMuted(),\n          meetingId: meeting.id\n        }).then(function () {\n          _this2.roapHandler.submit({\n            type: _constants.ROAP.SEND_ROAP_MSG,\n            msg: roapMessage,\n            correlationId: options.correlationId\n          });\n\n          _loggerProxy2.default.logger.log('Roap->sendRoapOK#ROAP OK sent with seq ' + options.seq);\n\n          meeting.setRoapSeq(options.seq);\n        });\n      });\n    } // eslint-disable-next-line no-warning-comments\n    // TODO: try to merge sendRoapOk and roapAnswer\n\n    /**\n     * Sends a ROAP answer...\n     * @param {SeqOptions} options\n     * @param {Boolean} options.audioMuted\n     * @param {Boolean} options.videoMuted\n     * @returns {Promise}\n     * @private\n     * @memberof Roap\n     */\n\n  }, {\n    key: 'sendRoapAnswer',\n    value: function sendRoapAnswer(options) {\n      var _this3 = this;\n\n      var meeting = this.webex.meetings.meetingCollection.get(options.correlationId);\n      var roapMessage = {\n        messageType: _constants.ROAP.ROAP_TYPES.ANSWER,\n        sdps: options.sdps,\n        version: _constants.ROAP.ROAP_VERSION,\n        seq: options.seq\n      };\n      return this.roapRequest.sendRoap({\n        roapMessage: roapMessage,\n        locusSelfUrl: meeting.selfUrl,\n        mediaId: options.mediaId,\n        correlationId: options.correlationId,\n        audioMuted: options.audioMuted,\n        videoMuted: options.videoMuted,\n        meetingId: meeting.id\n      }).then(function () {\n        meeting.setRoapSeq(options.seq);\n\n        _this3.roapHandler.submit({\n          type: _constants.ROAP.SEND_ROAP_MSG,\n          msg: roapMessage,\n          correlationId: options.correlationId\n        });\n      });\n    }\n    /**\n     * Sends a ROAP error...\n     * @param {Object} session\n     * @param {Object} locus\n     * @param {String} errorType\n     * @returns {Promise}\n     * @private\n     * @memberof Roap\n     */\n\n  }, {\n    key: 'sendRoapError',\n    value: function sendRoapError(session, locus, errorType) {\n      var msg = {\n        messageType: _constants.ROAP.ROAP_TYPES.ERROR,\n        version: _constants.ROAP.ROAP_VERSION,\n        errorType: errorType,\n        seq: session.OFFER.seq\n      };\n      return this.roapRequest.sendRoap(msg, locus);\n    }\n    /**\n     * sends a roap media request\n     * @param {RoapOptions} options\n     * @returns {Promise}\n     * @private\n     * @memberof Roap\n     */\n\n  }, {\n    key: 'sendRoapMediaRequest',\n    value: function sendRoapMediaRequest(options) {\n      var _this4 = this;\n\n      var meeting = options.meeting;\n      var roapMessage = {\n        messageType: _constants.ROAP.ROAP_TYPES.OFFER,\n        sdps: [options.sdp],\n        // sdps: [options.sdp],\n        version: _constants.ROAP.ROAP_VERSION,\n        seq: typeof options.roapSeq !== 'number' && (0, _isNan2.default)(parseFloat(options.roapSeq)) ? 0 : options.roapSeq + 1,\n        tieBreaker: 4294967294 // Math.floor(Math.random() * (2 ** 32) - 1) // TODO: Handle the roap  conflict scenario\n\n      };\n      this.roapHandler.submit({\n        type: _constants.ROAP.SEND_ROAP_MSG,\n        msg: roapMessage,\n        correlationId: meeting.correlationId\n      });\n      return this.roapRequest.sendRoap({\n        roapMessage: roapMessage,\n        correlationId: meeting.correlationId,\n        locusSelfUrl: meeting.selfUrl,\n        mediaId: meeting.mediaId,\n        audioMuted: meeting.isAudioMuted(),\n        videoMuted: meeting.isVideoMuted(),\n        meetingId: meeting.id\n      }).then(function (locus) {\n        _this4.roapHandler.submit({\n          type: _constants.ROAP.SEND_ROAP_MSG_SUCCESS,\n          seq: roapMessage.seq,\n          correlationId: meeting.correlationId\n        });\n\n        meeting.setRoapSeq(roapMessage.seq); // eslint-disable-next-line no-warning-comments\n        // TODO: we need to attach peerconenction to locus not sure if we need to pass everything here\n\n        return locus; // eslint-disable-next-line no-warning-comments\n        // TODO: check where to update the sequence number\n      });\n    }\n    /**\n     * sends a roap media request\n     * @param {RoapOptions} options\n     * @returns {Promise}\n     * @private\n     * @memberof Roap\n     */\n\n  }]);\n  return Roap;\n}(_webexCore.StatelessWebexPlugin), _initialiseProps = function _initialiseProps() {\n  var _this5 = this;\n\n  this.sendRoapCallRequest = function (options) {\n    var meeting = options.meeting;\n    var roapMessage = {\n      messageType: _constants.ROAP.ROAP_TYPES.OFFER,\n      sdps: [options.sdp],\n      version: _constants.ROAP.ROAP_VERSION,\n      seq: typeof options.roapSeq !== 'number' && (0, _isNan2.default)(parseFloat(options.roapSeq)) ? 0 : options.roapSeq + 1,\n      tieBreaker: 4294967294 // Math.floor(Math.random() * (2 ** 32) - 1) // TODO: Handle the roap  conflict scenario\n\n    };\n\n    _this5.roapHandler.submit({\n      type: _constants.ROAP.SEND_ROAP_MSG,\n      msg: roapMessage,\n      correlationId: meeting.correlationId\n    });\n\n    var roapBody = {\n      localMedias: [{\n        localSdp: (0, _stringify2.default)(_this5.roapRequest.attachRechabilityData({\n          roapMessage: roapMessage,\n          // eslint-disable-next-line no-warning-comments\n          // TODO: check whats the need for video and audiomute\n          audioMuted: !!meeting.isAudioMuted(),\n          videoMuted: !!meeting.isVideoMuted()\n        })) // mediaId: meeting.mediaId\n\n      }]\n    };\n    return _util2.default.joinMeetingOptions(meeting, {\n      roapMessage: roapBody\n    }).then(function (locus) {\n      _this5.roapHandler.submit({\n        type: _constants.ROAP.SEND_ROAP_MSG_SUCCESS,\n        seq: roapMessage.seq,\n        correlationId: meeting.correlationId\n      });\n\n      meeting.setRoapSeq(roapMessage.seq); // eslint-disable-next-line no-warning-comments\n      // TODO: we need to attach peerconenction to locus not sure if we need to pass everything here\n\n      return locus; // eslint-disable-next-line no-warning-comments\n      // TODO: check where to update the sequence number\n    });\n  };\n}, _temp);\nexports.default = Roap;","map":{"version":3,"sources":["index.js"],"names":["Roap","StatelessWebexPlugin","RoapHandler","RoapRequest","data","msg","correlationId","LoggerProxy","type","ROAP","seq","options","meeting","roapMessage","messageType","version","locusSelfUrl","mediaId","audioMuted","videoMuted","meetingId","id","sdps","session","locus","errorType","parseFloat","tieBreaker","sendRoapCallRequest","roapBody","localMedias","localSdp"],"mappings":"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","sourcesContent":["import {StatelessWebexPlugin} from '@webex/webex-core';\n\nimport {ROAP} from '../constants';\nimport LoggerProxy from '../common/logs/logger-proxy';\nimport MeetingUtil from '../meeting/util';\n\nimport RoapHandler from './handler';\nimport RoapRequest from './request';\n\n/**\n * Roap options\n * @typedef {Object} RoapOptions\n * @property {String} sdp\n * @property {Meeting} meeting\n * @property {Number} roapSeq\n */\n\n/**\n  * @typedef {Object} SeqOptions\n  * @property {String} correlationId\n  * @property {String} mediaId\n  * @property {Number} seq\n  */\n\n/**\n * @class Roap\n * @export\n * @private\n */\nexport default class Roap extends StatelessWebexPlugin {\n  /**\n   *\n   * @param {Object} attrs\n   * @param {Object} options\n   */\n  constructor(attrs, options) {\n    super({}, options);\n    /**\n     * @instance\n     * @type {Object}\n     * @private\n     * @memberof Roap\n     */\n    this.attrs = attrs;\n    /**\n     * @instance\n     * @type {Object}\n     * @private\n     * @memberof Roap\n     */\n    this.options = options;\n    /**\n     * The Roap Process State Handler\n     * @instance\n     * @type {RoapHandler}\n     * @private\n     * @memberof Roap\n     */\n    this.roapHandler = new RoapHandler(this.attrs, this.options, this.sendRoapOK.bind(this), this.sendRoapAnswer.bind(this));\n    /**\n     * The Roap Request Server Proxy Object\n     * @instance\n     * @type {RoapRequest}\n     * @private\n     * @memberof Roap\n     */\n    this.roapRequest = new RoapRequest({}, options);\n    /**\n     * The last roap offer sent to server and acked\n     * @instance\n     * @type {Object}\n     * @private\n     * @memberof Roap\n     */\n    this.lastRoapOffer = {};\n  }\n\n  /**\n   * Starts listening to mercury events for Roap messages\n   * @param {object} data event object\n   * @returns {Promise}\n   * @private\n   * @memberof Roap\n   */\n  roapEvent(data) {\n    const msg = data.message;\n    const {correlationId} = data;\n\n    LoggerProxy.logger.log(`Roap->roapEvent#Received Roap Message [${JSON.stringify(msg, null, 2)}]`);\n    this.roapHandler.submit({\n      type: ROAP.RECEIVE_ROAP_MSG,\n      msg,\n      correlationId\n    });\n  }\n\n  /**\n   *\n   * @param {String} correlationId correlation id of a meeting\n   * @param {Number} seq ROAP sequence number\n   * @returns {Promise}\n   * @private\n   * @memberof Roap\n   */\n  stop(correlationId, seq) {\n    this.roapHandler.submit({\n      type: ROAP.RECEIVE_CALL_LEAVE,\n      seq,\n      correlationId\n    });\n\n    return Promise.resolve();\n  }\n\n  /**\n   *\n   * @param {SeqOptions} options\n   * @returns {null}\n   * @private\n   * @memberof Roap\n   */\n  sendRoapOK(options) {\n    return Promise.resolve().then(() => {\n      const meeting = this.webex.meetings.meetingCollection.get(options.correlationId);\n      const roapMessage = {\n        messageType: ROAP.ROAP_TYPES.OK,\n        version: ROAP.ROAP_VERSION,\n        seq: options.seq\n      };\n\n      LoggerProxy.logger.log(`Roap->sendRoapOK#ROAP OK sending with seq ${options.seq}`);\n\n      return this.roapRequest\n        .sendRoap({\n          roapMessage,\n          locusSelfUrl: meeting.selfUrl,\n          mediaId: options.mediaId,\n          correlationId: options.correlationId,\n          audioMuted: meeting.isAudioMuted(),\n          videoMuted: meeting.isVideoMuted(),\n          meetingId: meeting.id\n        })\n        .then(() => {\n          this.roapHandler.submit({\n            type: ROAP.SEND_ROAP_MSG,\n            msg: roapMessage,\n            correlationId: options.correlationId\n          });\n          LoggerProxy.logger.log(`Roap->sendRoapOK#ROAP OK sent with seq ${options.seq}`);\n          meeting.setRoapSeq(options.seq);\n        });\n    });\n  }\n\n  // eslint-disable-next-line no-warning-comments\n  // TODO: try to merge sendRoapOk and roapAnswer\n  /**\n   * Sends a ROAP answer...\n   * @param {SeqOptions} options\n   * @param {Boolean} options.audioMuted\n   * @param {Boolean} options.videoMuted\n   * @returns {Promise}\n   * @private\n   * @memberof Roap\n   */\n  sendRoapAnswer(options) {\n    const meeting = this.webex.meetings.meetingCollection.get(options.correlationId);\n    const roapMessage = {\n      messageType: ROAP.ROAP_TYPES.ANSWER,\n      sdps: options.sdps,\n      version: ROAP.ROAP_VERSION,\n      seq: options.seq\n    };\n\n    return this.roapRequest\n      .sendRoap({\n        roapMessage,\n        locusSelfUrl: meeting.selfUrl,\n        mediaId: options.mediaId,\n        correlationId: options.correlationId,\n        audioMuted: options.audioMuted,\n        videoMuted: options.videoMuted,\n        meetingId: meeting.id\n      })\n      .then(() => {\n        meeting.setRoapSeq(options.seq);\n        this.roapHandler.submit({\n          type: ROAP.SEND_ROAP_MSG,\n          msg: roapMessage,\n          correlationId: options.correlationId\n        });\n      });\n  }\n\n  /**\n   * Sends a ROAP error...\n   * @param {Object} session\n   * @param {Object} locus\n   * @param {String} errorType\n   * @returns {Promise}\n   * @private\n   * @memberof Roap\n   */\n  sendRoapError(session, locus, errorType) {\n    const msg = {\n      messageType: ROAP.ROAP_TYPES.ERROR,\n      version: ROAP.ROAP_VERSION,\n      errorType,\n      seq: session.OFFER.seq\n    };\n\n    return this.roapRequest.sendRoap(msg, locus);\n  }\n\n  /**\n   * sends a roap media request\n   * @param {RoapOptions} options\n   * @returns {Promise}\n   * @private\n   * @memberof Roap\n   */\n  sendRoapMediaRequest(options) {\n    const {meeting} = options;\n    const roapMessage = {\n      messageType: ROAP.ROAP_TYPES.OFFER,\n      sdps: [options.sdp],\n      // sdps: [options.sdp],\n      version: ROAP.ROAP_VERSION,\n      seq: typeof options.roapSeq !== 'number' && Number.isNaN(parseFloat(options.roapSeq)) ? 0 : options.roapSeq + 1,\n      tieBreaker: 4294967294 // Math.floor(Math.random() * (2 ** 32) - 1) // TODO: Handle the roap  conflict scenario\n    };\n\n    this.roapHandler.submit({\n      type: ROAP.SEND_ROAP_MSG,\n      msg: roapMessage,\n      correlationId: meeting.correlationId\n    });\n\n    return this.roapRequest\n      .sendRoap({\n        roapMessage,\n        correlationId: meeting.correlationId,\n        locusSelfUrl: meeting.selfUrl,\n        mediaId: meeting.mediaId,\n        audioMuted: meeting.isAudioMuted(),\n        videoMuted: meeting.isVideoMuted(),\n        meetingId: meeting.id\n      })\n      .then((locus) => {\n        this.roapHandler.submit({\n          type: ROAP.SEND_ROAP_MSG_SUCCESS,\n          seq: roapMessage.seq,\n          correlationId: meeting.correlationId\n        });\n        meeting.setRoapSeq(roapMessage.seq);\n\n        // eslint-disable-next-line no-warning-comments\n        // TODO: we need to attach peerconenction to locus not sure if we need to pass everything here\n        return locus;\n        // eslint-disable-next-line no-warning-comments\n        // TODO: check where to update the sequence number\n      });\n  }\n\n  /**\n   * sends a roap media request\n   * @param {RoapOptions} options\n   * @returns {Promise}\n   * @private\n   * @memberof Roap\n   */\nsendRoapCallRequest = (options) => {\n  const {meeting} = options;\n  const roapMessage = {\n    messageType: ROAP.ROAP_TYPES.OFFER,\n    sdps: [options.sdp],\n    version: ROAP.ROAP_VERSION,\n    seq: typeof options.roapSeq !== 'number' && Number.isNaN(parseFloat(options.roapSeq)) ? 0 : options.roapSeq + 1,\n    tieBreaker: 4294967294 // Math.floor(Math.random() * (2 ** 32) - 1) // TODO: Handle the roap  conflict scenario\n  };\n\n  this.roapHandler.submit({\n    type: ROAP.SEND_ROAP_MSG,\n    msg: roapMessage,\n    correlationId: meeting.correlationId\n  });\n\n  const roapBody = {\n    localMedias: [\n      {\n        localSdp: JSON.stringify(this.roapRequest.attachRechabilityData({\n          roapMessage,\n          // eslint-disable-next-line no-warning-comments\n          // TODO: check whats the need for video and audiomute\n          audioMuted: !!meeting.isAudioMuted(),\n          videoMuted: !!meeting.isVideoMuted()\n        }))\n        // mediaId: meeting.mediaId\n      }\n    ]\n  };\n\n  return MeetingUtil.joinMeetingOptions(meeting, {roapMessage: roapBody})\n    .then((locus) => {\n      this.roapHandler.submit({\n        type: ROAP.SEND_ROAP_MSG_SUCCESS,\n        seq: roapMessage.seq,\n        correlationId: meeting.correlationId\n      });\n      meeting.setRoapSeq(roapMessage.seq);\n\n      // eslint-disable-next-line no-warning-comments\n      // TODO: we need to attach peerconenction to locus not sure if we need to pass everything here\n      return locus;\n      // eslint-disable-next-line no-warning-comments\n      // TODO: check where to update the sequence number\n    });\n};\n}\n"]},"metadata":{},"sourceType":"script"}