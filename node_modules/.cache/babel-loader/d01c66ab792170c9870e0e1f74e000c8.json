{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n/** @component alert-call */\n\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { UIDReset } from 'react-uid';\nimport DeviceListCall from \"../DeviceListCall\";\nimport { Avatar, Button, Icon } from \"./..\";\n\nvar AlertCall = function AlertCall(props) {\n  var avatar = props.avatar,\n      avatarProps = props.avatarProps,\n      caller = props.caller,\n      defaultSelectedDevice = props.defaultSelectedDevice,\n      deviceListHeader = props.deviceListHeader,\n      deviceListProps = props.deviceListProps,\n      devices = props.devices,\n      onAnswerShare = props.onAnswerShare,\n      onAnswerVideo = props.onAnswerVideo,\n      onAnswerVoice = props.onAnswerVoice,\n      onDeviceSelect = props.onDeviceSelect,\n      onReject = props.onReject,\n      rejectAriaLabel = props.rejectAriaLabel,\n      rejectBtnProps = props.rejectBtnProps,\n      shareAriaLabel = props.shareAriaLabel,\n      shareBtnProps = props.shareBtnProps,\n      show = props.show,\n      title = props.title,\n      videoAriaLabel = props.videoAriaLabel,\n      videoBtnProps = props.videoBtnProps,\n      voiceAriaLabel = props.voiceAriaLabel,\n      voiceBtnProps = props.voiceBtnProps,\n      otherProps = _objectWithoutPropertiesLoose(props, [\"avatar\", \"avatarProps\", \"caller\", \"defaultSelectedDevice\", \"deviceListHeader\", \"deviceListProps\", \"devices\", \"onAnswerShare\", \"onAnswerVideo\", \"onAnswerVoice\", \"onDeviceSelect\", \"onReject\", \"rejectAriaLabel\", \"rejectBtnProps\", \"shareAriaLabel\", \"shareBtnProps\", \"show\", \"title\", \"videoAriaLabel\", \"videoBtnProps\", \"voiceAriaLabel\", \"voiceBtnProps\"]);\n\n  var getAvatar = function getAvatar() {\n    if (avatar) {\n      return avatar;\n    } else {\n      switch (caller.type) {\n        case 'number':\n          return React.createElement(Avatar, _extends({\n            alt: caller.title,\n            size: \"xlarge\",\n            title: \"#\"\n          }, avatarProps));\n\n        case 'device':\n          return React.createElement(Avatar, _extends({\n            alt: caller.title,\n            icon: React.createElement(Icon, {\n              name: \"spark-board_32\"\n            }),\n            size: \"xlarge\"\n          }, avatarProps));\n\n        default:\n          return React.createElement(Avatar, _extends({\n            alt: caller.title,\n            size: \"xlarge\",\n            title: caller.title\n          }, avatarProps));\n      }\n    }\n  };\n\n  var getDeviceList = function getDeviceList() {\n    return devices.length > 0 && React.createElement(DeviceListCall, _extends({\n      defaultSelected: defaultSelectedDevice,\n      devices: devices,\n      header: deviceListHeader,\n      onSelect: onDeviceSelect\n    }, deviceListProps));\n  };\n\n  return show && React.createElement(\"div\", _extends({\n    className: \"md-alert md-alert--call\"\n  }, otherProps), React.createElement(\"div\", {\n    className: \"md-alert__title\"\n  }, title), React.createElement(\"div\", {\n    className: \"md-alert__caller\"\n  }, getAvatar(), React.createElement(\"div\", {\n    className: \"md-alert__caller-title\"\n  }, caller.title), React.createElement(\"div\", {\n    className: \"md-alert__caller-subtitle\"\n  }, caller.alt)), React.createElement(UIDReset, null, getDeviceList()), React.createElement(\"div\", {\n    className: \"md-alert--call--buttons\"\n  }, onAnswerShare && React.createElement(Button, _extends({\n    ariaLabel: shareAriaLabel,\n    circle: true,\n    color: \"blue\",\n    onClick: onAnswerShare,\n    size: 44\n  }, shareBtnProps), React.createElement(Icon, {\n    name: \"share-screen_24\"\n  })), onAnswerVideo && React.createElement(Button, _extends({\n    ariaLabel: videoAriaLabel,\n    circle: true,\n    color: \"green\",\n    onClick: onAnswerVideo,\n    size: 44\n  }, videoBtnProps), React.createElement(Icon, {\n    name: \"camera_24\"\n  })), onAnswerVoice && React.createElement(Button, _extends({\n    ariaLabel: voiceAriaLabel,\n    circle: true,\n    color: \"green\",\n    onClick: onAnswerVoice,\n    size: 44\n  }, voiceBtnProps), React.createElement(Icon, {\n    name: \"handset_24\"\n  })), React.createElement(Button, _extends({\n    ariaLabel: rejectAriaLabel,\n    circle: true,\n    color: \"red\",\n    onClick: onReject,\n    size: 44\n  }, rejectBtnProps), React.createElement(Icon, {\n    name: \"cancel_24\"\n  }))));\n};\n\nAlertCall.defaultProps = {\n  avatar: null,\n  avatarProps: null,\n  caller: null,\n  defaultSelectedDevice: 0,\n  deviceListHeader: 'Device selection',\n  deviceListProps: null,\n  devices: [],\n  onAnswerShare: null,\n  onAnswerVideo: null,\n  onAnswerVoice: null,\n  onDeviceSelect: null,\n  onReject: null,\n  rejectAriaLabel: 'reject call',\n  rejectBtnProps: null,\n  shareAriaLabel: 'answer call with share',\n  shareBtnProps: null,\n  title: '',\n  videoAriaLabel: 'answer call with video',\n  videoBtnProps: null,\n  voiceAriaLabel: 'answer call with voice',\n  voiceBtnProps: null\n};\nAlertCall.propTypes = {\n  /** @prop Optional avatar prop | null */\n  avatar: PropTypes.node,\n\n  /** @prop Props to be passed to avatar | null */\n  avatarProps: PropTypes.object,\n\n  /** @prop Required caller object */\n  caller: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    alt: PropTypes.string,\n    src: PropTypes.string,\n    type: PropTypes.oneOf(['', 'number', 'device'])\n  }).isRequired,\n\n  /** @prop Optional default selected device by index value or eventKey | 0 */\n  defaultSelectedDevice: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /** @prop Props to be passed to device button | null */\n  deviceBtnProps: PropTypes.object,\n\n  /** @prop Optional header string for device selection list | 'Device selection' */\n  deviceListHeader: PropTypes.string,\n\n  /** @prop Optional list of devices to answer call with | [] */\n  devices: PropTypes.array,\n\n  /** @prop Callback function invoked when the share button is clicked | null */\n  onAnswerShare: PropTypes.func,\n\n  /** @prop Callback function invoked when the video button is clicked | null */\n  onAnswerVideo: PropTypes.func,\n\n  /** @prop Callback function invoked when the handset button is clicked | null */\n  onAnswerVoice: PropTypes.func,\n\n  /** @prop Optional callback function when device is selected | null */\n  onDeviceSelect: PropTypes.func,\n\n  /** @prop Callback function invoked when the reject button is clicked | null */\n  onReject: PropTypes.func,\n\n  /** @prop Optional aria-label reject message | 'reject call' */\n  rejectAriaLabel: PropTypes.string,\n\n  /** @prop Props to be passed to reject button | null */\n  rejectBtnProps: PropTypes.object,\n\n  /** @prop Optional aria-label share | 'answer call with share' */\n  shareAriaLabel: PropTypes.string,\n\n  /** @prop Props to be passed to share button | null */\n  shareBtnProps: PropTypes.object,\n\n  /** @prop Required AlertCall visitibility setting */\n  show: PropTypes.bool.isRequired,\n\n  /** @prop Optional title of AlertCall | '' */\n  title: PropTypes.string,\n\n  /** @prop Optional aria-label video | 'answer call with video' */\n  videoAriaLabel: PropTypes.string,\n\n  /** @prop Props to be passed to video button | null */\n  videoBtnProps: PropTypes.object,\n\n  /** @prop Optional aria-label voice | 'answer call with voice only' */\n  voiceAriaLabel: PropTypes.string,\n\n  /** @prop Props to be passed to voice button | null */\n  voiceBtnProps: PropTypes.object\n};\nAlertCall.displayName = 'AlertCall';\nexport default AlertCall;","map":{"version":3,"sources":["/Users/stcox2/Documents/CODE/VirtualClassroom-dev/node_modules/@momentum-ui/react/es/AlertCall/index.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","_objectWithoutPropertiesLoose","excluded","sourceKeys","keys","indexOf","React","PropTypes","UIDReset","DeviceListCall","Avatar","Button","Icon","AlertCall","props","avatar","avatarProps","caller","defaultSelectedDevice","deviceListHeader","deviceListProps","devices","onAnswerShare","onAnswerVideo","onAnswerVoice","onDeviceSelect","onReject","rejectAriaLabel","rejectBtnProps","shareAriaLabel","shareBtnProps","show","title","videoAriaLabel","videoBtnProps","voiceAriaLabel","voiceBtnProps","otherProps","getAvatar","type","createElement","alt","size","icon","name","getDeviceList","defaultSelected","header","onSelect","className","ariaLabel","circle","color","onClick","defaultProps","propTypes","node","object","shape","string","isRequired","src","oneOf","oneOfType","number","deviceBtnProps","array","func","bool","displayName"],"mappings":"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","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/** @component alert-call */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { UIDReset } from 'react-uid';\nimport DeviceListCall from \"../DeviceListCall\";\nimport { Avatar, Button, Icon } from \"./..\";\n\nvar AlertCall = function AlertCall(props) {\n  var avatar = props.avatar,\n      avatarProps = props.avatarProps,\n      caller = props.caller,\n      defaultSelectedDevice = props.defaultSelectedDevice,\n      deviceListHeader = props.deviceListHeader,\n      deviceListProps = props.deviceListProps,\n      devices = props.devices,\n      onAnswerShare = props.onAnswerShare,\n      onAnswerVideo = props.onAnswerVideo,\n      onAnswerVoice = props.onAnswerVoice,\n      onDeviceSelect = props.onDeviceSelect,\n      onReject = props.onReject,\n      rejectAriaLabel = props.rejectAriaLabel,\n      rejectBtnProps = props.rejectBtnProps,\n      shareAriaLabel = props.shareAriaLabel,\n      shareBtnProps = props.shareBtnProps,\n      show = props.show,\n      title = props.title,\n      videoAriaLabel = props.videoAriaLabel,\n      videoBtnProps = props.videoBtnProps,\n      voiceAriaLabel = props.voiceAriaLabel,\n      voiceBtnProps = props.voiceBtnProps,\n      otherProps = _objectWithoutPropertiesLoose(props, [\"avatar\", \"avatarProps\", \"caller\", \"defaultSelectedDevice\", \"deviceListHeader\", \"deviceListProps\", \"devices\", \"onAnswerShare\", \"onAnswerVideo\", \"onAnswerVoice\", \"onDeviceSelect\", \"onReject\", \"rejectAriaLabel\", \"rejectBtnProps\", \"shareAriaLabel\", \"shareBtnProps\", \"show\", \"title\", \"videoAriaLabel\", \"videoBtnProps\", \"voiceAriaLabel\", \"voiceBtnProps\"]);\n\n  var getAvatar = function getAvatar() {\n    if (avatar) {\n      return avatar;\n    } else {\n      switch (caller.type) {\n        case 'number':\n          return React.createElement(Avatar, _extends({\n            alt: caller.title,\n            size: \"xlarge\",\n            title: \"#\"\n          }, avatarProps));\n\n        case 'device':\n          return React.createElement(Avatar, _extends({\n            alt: caller.title,\n            icon: React.createElement(Icon, {\n              name: \"spark-board_32\"\n            }),\n            size: \"xlarge\"\n          }, avatarProps));\n\n        default:\n          return React.createElement(Avatar, _extends({\n            alt: caller.title,\n            size: \"xlarge\",\n            title: caller.title\n          }, avatarProps));\n      }\n    }\n  };\n\n  var getDeviceList = function getDeviceList() {\n    return devices.length > 0 && React.createElement(DeviceListCall, _extends({\n      defaultSelected: defaultSelectedDevice,\n      devices: devices,\n      header: deviceListHeader,\n      onSelect: onDeviceSelect\n    }, deviceListProps));\n  };\n\n  return show && React.createElement(\"div\", _extends({\n    className: \"md-alert md-alert--call\"\n  }, otherProps), React.createElement(\"div\", {\n    className: \"md-alert__title\"\n  }, title), React.createElement(\"div\", {\n    className: \"md-alert__caller\"\n  }, getAvatar(), React.createElement(\"div\", {\n    className: \"md-alert__caller-title\"\n  }, caller.title), React.createElement(\"div\", {\n    className: \"md-alert__caller-subtitle\"\n  }, caller.alt)), React.createElement(UIDReset, null, getDeviceList()), React.createElement(\"div\", {\n    className: \"md-alert--call--buttons\"\n  }, onAnswerShare && React.createElement(Button, _extends({\n    ariaLabel: shareAriaLabel,\n    circle: true,\n    color: \"blue\",\n    onClick: onAnswerShare,\n    size: 44\n  }, shareBtnProps), React.createElement(Icon, {\n    name: \"share-screen_24\"\n  })), onAnswerVideo && React.createElement(Button, _extends({\n    ariaLabel: videoAriaLabel,\n    circle: true,\n    color: \"green\",\n    onClick: onAnswerVideo,\n    size: 44\n  }, videoBtnProps), React.createElement(Icon, {\n    name: \"camera_24\"\n  })), onAnswerVoice && React.createElement(Button, _extends({\n    ariaLabel: voiceAriaLabel,\n    circle: true,\n    color: \"green\",\n    onClick: onAnswerVoice,\n    size: 44\n  }, voiceBtnProps), React.createElement(Icon, {\n    name: \"handset_24\"\n  })), React.createElement(Button, _extends({\n    ariaLabel: rejectAriaLabel,\n    circle: true,\n    color: \"red\",\n    onClick: onReject,\n    size: 44\n  }, rejectBtnProps), React.createElement(Icon, {\n    name: \"cancel_24\"\n  }))));\n};\n\nAlertCall.defaultProps = {\n  avatar: null,\n  avatarProps: null,\n  caller: null,\n  defaultSelectedDevice: 0,\n  deviceListHeader: 'Device selection',\n  deviceListProps: null,\n  devices: [],\n  onAnswerShare: null,\n  onAnswerVideo: null,\n  onAnswerVoice: null,\n  onDeviceSelect: null,\n  onReject: null,\n  rejectAriaLabel: 'reject call',\n  rejectBtnProps: null,\n  shareAriaLabel: 'answer call with share',\n  shareBtnProps: null,\n  title: '',\n  videoAriaLabel: 'answer call with video',\n  videoBtnProps: null,\n  voiceAriaLabel: 'answer call with voice',\n  voiceBtnProps: null\n};\nAlertCall.propTypes = {\n  /** @prop Optional avatar prop | null */\n  avatar: PropTypes.node,\n\n  /** @prop Props to be passed to avatar | null */\n  avatarProps: PropTypes.object,\n\n  /** @prop Required caller object */\n  caller: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    alt: PropTypes.string,\n    src: PropTypes.string,\n    type: PropTypes.oneOf(['', 'number', 'device'])\n  }).isRequired,\n\n  /** @prop Optional default selected device by index value or eventKey | 0 */\n  defaultSelectedDevice: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /** @prop Props to be passed to device button | null */\n  deviceBtnProps: PropTypes.object,\n\n  /** @prop Optional header string for device selection list | 'Device selection' */\n  deviceListHeader: PropTypes.string,\n\n  /** @prop Optional list of devices to answer call with | [] */\n  devices: PropTypes.array,\n\n  /** @prop Callback function invoked when the share button is clicked | null */\n  onAnswerShare: PropTypes.func,\n\n  /** @prop Callback function invoked when the video button is clicked | null */\n  onAnswerVideo: PropTypes.func,\n\n  /** @prop Callback function invoked when the handset button is clicked | null */\n  onAnswerVoice: PropTypes.func,\n\n  /** @prop Optional callback function when device is selected | null */\n  onDeviceSelect: PropTypes.func,\n\n  /** @prop Callback function invoked when the reject button is clicked | null */\n  onReject: PropTypes.func,\n\n  /** @prop Optional aria-label reject message | 'reject call' */\n  rejectAriaLabel: PropTypes.string,\n\n  /** @prop Props to be passed to reject button | null */\n  rejectBtnProps: PropTypes.object,\n\n  /** @prop Optional aria-label share | 'answer call with share' */\n  shareAriaLabel: PropTypes.string,\n\n  /** @prop Props to be passed to share button | null */\n  shareBtnProps: PropTypes.object,\n\n  /** @prop Required AlertCall visitibility setting */\n  show: PropTypes.bool.isRequired,\n\n  /** @prop Optional title of AlertCall | '' */\n  title: PropTypes.string,\n\n  /** @prop Optional aria-label video | 'answer call with video' */\n  videoAriaLabel: PropTypes.string,\n\n  /** @prop Props to be passed to video button | null */\n  videoBtnProps: PropTypes.object,\n\n  /** @prop Optional aria-label voice | 'answer call with voice only' */\n  voiceAriaLabel: PropTypes.string,\n\n  /** @prop Props to be passed to voice button | null */\n  voiceBtnProps: PropTypes.object\n};\nAlertCall.displayName = 'AlertCall';\nexport default AlertCall;"]},"metadata":{},"sourceType":"module"}