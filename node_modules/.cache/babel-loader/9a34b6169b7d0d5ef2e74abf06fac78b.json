{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _constants = require('../constants');\n\nvar FullState = {};\n\nFullState.parse = function (fullState) {\n  return {\n    type: fullState.type || _constants.FULL_STATE.UNKNOWN,\n    meetingState: fullState.state,\n    locked: fullState.locked\n  };\n};\n\nFullState.getFullState = function (oldFullState, newFullState) {\n  var previous = oldFullState && FullState.parse(oldFullState);\n  var current = newFullState && FullState.parse(newFullState);\n  return {\n    previous: previous,\n    current: current,\n    updates: {\n      isMeetingEnded: FullState.isMeetingEnded(previous, current),\n      isMeetingTerminating: FullState.isMeetingTerminating(previous, current),\n      meetingTypeChangedTo: FullState.isTypeChanged(previous, current),\n      meetingStateChangedTo: FullState.meetingStateChange(previous, current)\n    }\n  };\n};\n\nFullState.isMeetingEnded = function (previous, current) {\n  if (current.state === _constants.FULL_STATE.INACTIVE && previous && (previous.state === _constants.FULL_STATE.ACTIVE || previous.state === _constants.FULL_STATE.INITIALIZING || previous.state === _constants.FULL_STATE.TERMINATING)) {\n    return true;\n  }\n\n  return false;\n};\n\nFullState.isMeetingTerminating = function (previous, current) {\n  if (current.state === _constants.FULL_STATE.TERMINATING && previous && (previous.state === _constants.FULL_STATE.ACTIVE || previous.state === _constants.FULL_STATE.INITIALIZING)) {\n    return true;\n  }\n\n  return false;\n};\n\nFullState.isTypeChanged = function (previous, current) {\n  if (!previous || current.type !== previous.type) {\n    return current && current.type;\n  }\n\n  return null;\n};\n\nFullState.meetingStateChange = function (previous, current) {\n  if (!previous || current.meetingState !== previous.meetingState) {\n    return current && current.meetingState;\n  }\n\n  return null;\n};\n\nexports.default = FullState;","map":{"version":3,"sources":["fullState.js"],"names":["FullState","type","fullState","FULL_STATE","meetingState","locked","previous","oldFullState","current","newFullState","updates","isMeetingEnded","isMeetingTerminating","meetingTypeChangedTo","meetingStateChangedTo"],"mappings":"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","sourcesContent":["import {FULL_STATE} from '../constants';\n\nconst FullState = {};\n\nFullState.parse = (fullState) => ({\n  type: fullState.type || FULL_STATE.UNKNOWN,\n  meetingState: fullState.state,\n  locked: fullState.locked\n});\n\n\nFullState.getFullState = (oldFullState, newFullState) => {\n  const previous = oldFullState && FullState.parse(oldFullState);\n  const current = newFullState && FullState.parse(newFullState);\n\n  return {\n    previous,\n    current,\n    updates: {\n      isMeetingEnded: FullState.isMeetingEnded(previous, current),\n      isMeetingTerminating: FullState.isMeetingTerminating(previous, current),\n      meetingTypeChangedTo: FullState.isTypeChanged(previous, current),\n      meetingStateChangedTo: FullState.meetingStateChange(previous, current)\n    }\n  };\n};\n\nFullState.isMeetingEnded = (previous, current) => {\n  if (current.state === FULL_STATE.INACTIVE && previous &&\n   (previous.state === FULL_STATE.ACTIVE ||\n    previous.state === FULL_STATE.INITIALIZING ||\n    previous.state === FULL_STATE.TERMINATING)) {\n    return true;\n  }\n\n  return false;\n};\n\nFullState.isMeetingTerminating = (previous, current) => {\n  if (current.state === FULL_STATE.TERMINATING && previous &&\n  (previous.state === FULL_STATE.ACTIVE ||\n    previous.state === FULL_STATE.INITIALIZING)) {\n    return true;\n  }\n\n  return false;\n};\n\nFullState.isTypeChanged = (previous, current) => {\n  if (!previous || current.type !== previous.type) {\n    return current && current.type;\n  }\n\n  return null;\n};\n\nFullState.meetingStateChange = (previous, current) => {\n  if (!previous || current.meetingState !== previous.meetingState) {\n    return current && current.meetingState;\n  }\n\n  return null;\n};\n\nexport default FullState;\n"]},"metadata":{},"sourceType":"script"}