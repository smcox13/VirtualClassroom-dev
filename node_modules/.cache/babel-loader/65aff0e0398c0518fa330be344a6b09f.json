{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = undefined;\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _constants = require('../constants');\n\nvar _util = require('./util');\n\nvar _util2 = _interopRequireDefault(_util);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * @class MediaProperties\n */\n\n\nvar MediaProperties = function () {\n  /**\n   * @param {Object} [options] -- to auto construct\n   * @returns {MediaProperties}\n   */\n  function MediaProperties() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    (0, _classCallCheck3.default)(this, MediaProperties);\n    this.namespace = _constants.MEETINGS;\n    this.peerConnection = _util2.default.createPeerConnection();\n    this.mediaDirection = options.mediaDirection;\n    this.videoTrack = options.videoTrack;\n    this.audioTrack = options.audioTrack;\n    this.shareTrack = options.shareTrack;\n    this.remoteStream = options.remoteStream;\n    this.remoteShare = options.remoteShare;\n    this.mediaSettings = {};\n  }\n\n  (0, _createClass3.default)(MediaProperties, [{\n    key: 'setMediaDirection',\n    value: function setMediaDirection(mediaDirection) {\n      this.mediaDirection = mediaDirection;\n    }\n  }, {\n    key: 'setMediaSettings',\n    value: function setMediaSettings(type, values) {\n      this.mediaSettings[type] = values;\n    }\n  }, {\n    key: 'setMediaPeerConnection',\n    value: function setMediaPeerConnection(peerConnection) {\n      this.peerConnection = peerConnection;\n    }\n  }, {\n    key: 'setLocalVideoTrack',\n    value: function setLocalVideoTrack(videoTrack) {\n      this.videoTrack = videoTrack;\n    }\n  }, {\n    key: 'setLocalAudioTrack',\n    value: function setLocalAudioTrack(audioTrack) {\n      this.audioTrack = audioTrack;\n    }\n  }, {\n    key: 'setLocalShareTrack',\n    value: function setLocalShareTrack(shareTrack) {\n      this.shareTrack = shareTrack;\n    }\n  }, {\n    key: 'setRemoteStream',\n    value: function setRemoteStream(remoteStream) {\n      this.remoteStream = remoteStream;\n    }\n  }, {\n    key: 'setRemoteShare',\n    value: function setRemoteShare(remoteShare) {\n      this.remoteShare = remoteShare;\n    }\n  }, {\n    key: 'unsetPeerConnection',\n    value: function unsetPeerConnection() {\n      this.peerConnection = null;\n    }\n  }, {\n    key: 'reInitiatePeerconnection',\n    value: function reInitiatePeerconnection() {\n      this.peerConnection = _util2.default.createPeerConnection();\n    }\n  }, {\n    key: 'unsetLocalVideoTrack',\n    value: function unsetLocalVideoTrack() {\n      this.videoTrack = null;\n    }\n  }, {\n    key: 'unsetLocalShareTrack',\n    value: function unsetLocalShareTrack() {\n      this.shareTrack = null;\n    }\n  }, {\n    key: 'unsetLocalAudioTrack',\n    value: function unsetLocalAudioTrack() {\n      this.audioTrack = null;\n    }\n  }, {\n    key: 'unsetRemoteStream',\n    value: function unsetRemoteStream() {\n      this.remoteStream = null;\n    }\n  }, {\n    key: 'unsetRemoteShare',\n    value: function unsetRemoteShare() {\n      this.remoteShare = null;\n    }\n  }, {\n    key: 'unsetLocalVideoTracks',\n    value: function unsetLocalVideoTracks() {\n      this.unsetLocalVideoTrack();\n      this.unsetLocalShareTrack();\n    }\n  }, {\n    key: 'unsetRemoteStreams',\n    value: function unsetRemoteStreams() {\n      this.unsetRemoteStream();\n      this.unsetRemoteShare();\n    }\n  }, {\n    key: 'unsetShareStreams',\n    value: function unsetShareStreams() {\n      this.unsetLocalShareTrack();\n      this.unsetRemoteShare();\n    }\n  }, {\n    key: 'unsetMediaStreams',\n    value: function unsetMediaStreams() {\n      this.unsetLocalVideoTrack();\n      this.unsetRemoteStream();\n    }\n  }]);\n  return MediaProperties;\n}();\n\nexports.default = MediaProperties;","map":{"version":3,"sources":["properties.js"],"names":["MediaProperties","namespace","MEETINGS","options","MediaUtil","mediaDirection","type","values","peerConnection","videoTrack","audioTrack","shareTrack","remoteStream","remoteShare"],"mappings":";;;;;;;;;;;;;;;AAAA,IAAA,UAAA,GAAA,OAAA,CAAA,cAAA,CAAA;;AAIA,IAAA,KAAA,GAAA,OAAA,CAAA,QAAA,CAAA;;;;;;;;;AAEA;;;;;IAGqBA,e;AAGnB;;;;AAIA,WAAA,eAAA,GAA0B;AAAA,QAAdG,OAAc,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAAJ,EAAI;AAAA,KAAA,GAAA,gBAAA,CAAA,OAAA,EAAA,IAAA,EAAA,eAAA;AAAA,SAN1BF,SAM0B,GANdC,UAAAA,CAAAA,QAMc;AACxB,SAAA,cAAA,GAAsBE,MAAAA,CAAAA,OAAAA,CAAtB,oBAAsBA,EAAtB;AACA,SAAA,cAAA,GAAsBD,OAAAA,CAAtB,cAAA;AACA,SAAA,UAAA,GAAkBA,OAAAA,CAAlB,UAAA;AACA,SAAA,UAAA,GAAkBA,OAAAA,CAAlB,UAAA;AACA,SAAA,UAAA,GAAkBA,OAAAA,CAAlB,UAAA;AACA,SAAA,YAAA,GAAoBA,OAAAA,CAApB,YAAA;AACA,SAAA,WAAA,GAAmBA,OAAAA,CAAnB,WAAA;AACA,SAAA,aAAA,GAAA,EAAA;AACD;;;;sCAEiBE,c,EAAgB;AAChC,WAAA,cAAA,GAAA,cAAA;AACD;;;qCAEgBC,I,EAAMC,M,EAAQ;AAC7B,WAAA,aAAA,CAAA,IAAA,IAAA,MAAA;AACD;;;2CAEsBC,c,EAAgB;AACrC,WAAA,cAAA,GAAA,cAAA;AACD;;;uCAEkBC,U,EAAY;AAC7B,WAAA,UAAA,GAAA,UAAA;AACD;;;uCAEkBC,U,EAAY;AAC7B,WAAA,UAAA,GAAA,UAAA;AACD;;;uCAEkBC,U,EAAY;AAC7B,WAAA,UAAA,GAAA,UAAA;AACD;;;oCAEeC,Y,EAAc;AAC5B,WAAA,YAAA,GAAA,YAAA;AACD;;;mCAEcC,W,EAAa;AAC1B,WAAA,WAAA,GAAA,WAAA;AACD;;;0CAEqB;AACpB,WAAA,cAAA,GAAA,IAAA;AACD;;;+CAE0B;AACzB,WAAA,cAAA,GAAsBT,MAAAA,CAAAA,OAAAA,CAAtB,oBAAsBA,EAAtB;AACD;;;2CAEsB;AACrB,WAAA,UAAA,GAAA,IAAA;AACD;;;2CAEsB;AACrB,WAAA,UAAA,GAAA,IAAA;AACD;;;2CAEsB;AACrB,WAAA,UAAA,GAAA,IAAA;AACD;;;wCAEmB;AAClB,WAAA,YAAA,GAAA,IAAA;AACD;;;uCAEkB;AACjB,WAAA,WAAA,GAAA,IAAA;AACD;;;4CAEuB;AACtB,WAAA,oBAAA;AACA,WAAA,oBAAA;AACD;;;yCAEoB;AACnB,WAAA,iBAAA;AACA,WAAA,gBAAA;AACD;;;wCAEmB;AAClB,WAAA,oBAAA;AACA,WAAA,gBAAA;AACD;;;wCAEmB;AAClB,WAAA,oBAAA;AACA,WAAA,iBAAA;AACD;;;;;kBAhGkBJ,e","sourcesContent":["import {\n  MEETINGS\n} from '../constants';\n\nimport MediaUtil from './util';\n\n/**\n * @class MediaProperties\n */\nexport default class MediaProperties {\n  namespace = MEETINGS;\n\n  /**\n   * @param {Object} [options] -- to auto construct\n   * @returns {MediaProperties}\n   */\n  constructor(options = {}) {\n    this.peerConnection = MediaUtil.createPeerConnection();\n    this.mediaDirection = options.mediaDirection;\n    this.videoTrack = options.videoTrack;\n    this.audioTrack = options.audioTrack;\n    this.shareTrack = options.shareTrack;\n    this.remoteStream = options.remoteStream;\n    this.remoteShare = options.remoteShare;\n    this.mediaSettings = {};\n  }\n\n  setMediaDirection(mediaDirection) {\n    this.mediaDirection = mediaDirection;\n  }\n\n  setMediaSettings(type, values) {\n    this.mediaSettings[type] = values;\n  }\n\n  setMediaPeerConnection(peerConnection) {\n    this.peerConnection = peerConnection;\n  }\n\n  setLocalVideoTrack(videoTrack) {\n    this.videoTrack = videoTrack;\n  }\n\n  setLocalAudioTrack(audioTrack) {\n    this.audioTrack = audioTrack;\n  }\n\n  setLocalShareTrack(shareTrack) {\n    this.shareTrack = shareTrack;\n  }\n\n  setRemoteStream(remoteStream) {\n    this.remoteStream = remoteStream;\n  }\n\n  setRemoteShare(remoteShare) {\n    this.remoteShare = remoteShare;\n  }\n\n  unsetPeerConnection() {\n    this.peerConnection = null;\n  }\n\n  reInitiatePeerconnection() {\n    this.peerConnection = MediaUtil.createPeerConnection();\n  }\n\n  unsetLocalVideoTrack() {\n    this.videoTrack = null;\n  }\n\n  unsetLocalShareTrack() {\n    this.shareTrack = null;\n  }\n\n  unsetLocalAudioTrack() {\n    this.audioTrack = null;\n  }\n\n  unsetRemoteStream() {\n    this.remoteStream = null;\n  }\n\n  unsetRemoteShare() {\n    this.remoteShare = null;\n  }\n\n  unsetLocalVideoTracks() {\n    this.unsetLocalVideoTrack();\n    this.unsetLocalShareTrack();\n  }\n\n  unsetRemoteStreams() {\n    this.unsetRemoteStream();\n    this.unsetRemoteShare();\n  }\n\n  unsetShareStreams() {\n    this.unsetLocalShareTrack();\n    this.unsetRemoteShare();\n  }\n\n  unsetMediaStreams() {\n    this.unsetLocalVideoTrack();\n    this.unsetRemoteStream();\n  }\n}\n"]},"metadata":{},"sourceType":"script"}