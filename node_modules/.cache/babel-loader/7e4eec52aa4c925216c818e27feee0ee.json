{"ast":null,"code":"/*!\n * algorithms/pbes2.js - Password-Based Encryption (v2) Algorithms\n *\n * Copyright (c) 2015 Cisco Systems, Inc.  See LICENSE file.\n */\n\"use strict\";\n\nvar forge = require(\"../deps/forge.js\"),\n    util = require(\"../util\"),\n    helpers = require(\"./helpers.js\"),\n    CONSTANTS = require(\"./constants.js\"),\n    KW = require(\"./aes-kw.js\");\n\nvar NULL_BUFFER = new Buffer([0]);\n\nfunction fixSalt(hmac, kw, salt) {\n  var alg = \"PBES2-\" + hmac + \"+\" + kw;\n  var output = [new Buffer(alg, \"utf8\"), NULL_BUFFER, salt];\n  return Buffer.concat(output);\n}\n\nfunction pbkdf2Fn(hash) {\n  function prepareProps(props) {\n    props = props || {};\n    var keyLen = props.length || 0;\n    var salt = util.asBuffer(props.salt || new Buffer(0), \"base64u4l\"),\n        itrs = props.iterations || 0;\n\n    if (0 >= keyLen) {\n      throw new Error(\"invalid key length\");\n    }\n\n    if (0 >= itrs) {\n      throw new Error(\"invalid iteration count\");\n    }\n\n    props.length = keyLen;\n    props.salt = salt;\n    props.iterations = itrs;\n    return props;\n  }\n\n  var fallback = function (key, props) {\n    try {\n      props = prepareProps(props);\n    } catch (err) {\n      return Promise.reject(err);\n    }\n\n    var keyLen = props.length,\n        salt = props.salt,\n        itrs = props.iterations;\n    var promise = new Promise(function (resolve, reject) {\n      var md = forge.md[hash.replace(\"-\", \"\").toLowerCase()].create();\n\n      var cb = function (err, dk) {\n        if (err) {\n          reject(err);\n        } else {\n          dk = new Buffer(dk, \"binary\");\n          resolve(dk);\n        }\n      };\n\n      forge.pkcs5.pbkdf2(key.toString(\"binary\"), salt.toString(\"binary\"), itrs, keyLen, md, cb);\n    });\n    return promise;\n  };\n\n  var webcrypto = function (key, props) {\n    try {\n      props = prepareProps(props);\n    } catch (err) {\n      return Promise.reject(err);\n    }\n\n    var keyLen = props.length,\n        salt = props.salt,\n        itrs = props.iterations;\n    var promise = Promise.resolve(key);\n    promise = promise.then(function (keyval) {\n      return helpers.subtleCrypto.importKey(\"raw\", keyval, \"PBKDF2\", false, [\"deriveBits\"]);\n    });\n    promise = promise.then(function (key) {\n      var mainAlgo = {\n        name: \"PBKDF2\",\n        salt: salt,\n        iterations: itrs,\n        hash: hash\n      };\n      return helpers.subtleCrypto.deriveBits(mainAlgo, key, keyLen * 8);\n    });\n    promise = promise.then(function (result) {\n      return util.asBuffer(result);\n    });\n    return promise;\n  };\n\n  var nodejs = function (key, props) {\n    if (6 > helpers.nodeCrypto.pbkdf2.length) {\n      throw new Error(\"unsupported algorithm: PBES2-\" + hmac + \"+\" + kw);\n    }\n\n    try {\n      props = prepareProps(props);\n    } catch (err) {\n      return Promise.reject(err);\n    }\n\n    var keyLen = props.length,\n        salt = props.salt,\n        itrs = props.iterations;\n    var md = hash.replace(\"-\", \"\");\n    var promise = new Promise(function (resolve, reject) {\n      function cb(err, dk) {\n        if (err) {\n          reject(err);\n        } else {\n          resolve(dk);\n        }\n      }\n\n      helpers.nodeCrypto.pbkdf2(key, salt, itrs, keyLen, md, cb);\n    });\n    return promise;\n  };\n\n  return helpers.setupFallback(nodejs, webcrypto, fallback);\n}\n\nfunction pbes2EncryptFN(hmac, kw) {\n  var keyLen = CONSTANTS.KEYLENGTH[kw] / 8;\n\n  var fallback = function (key, pdata, props) {\n    props = props || {};\n    var salt = util.asBuffer(props.p2s || new Buffer(0), \"base64url\"),\n        itrs = props.p2c || 0;\n\n    if (0 >= itrs) {\n      throw new Error(\"invalid iteration count\");\n    }\n\n    if (8 > salt.length) {\n      throw new Error(\"salt too small\");\n    }\n\n    salt = fixSalt(hmac, kw, salt);\n    var promise; // STEP 1: derive shared key\n\n    promise = new Promise(function (resolve, reject) {\n      var md = forge.md[hmac.replace(\"HS\", \"SHA\").toLowerCase()].create();\n\n      var cb = function (err, dk) {\n        if (err) {\n          reject(err);\n        } else {\n          dk = new Buffer(dk, \"binary\");\n          resolve(dk);\n        }\n      };\n\n      forge.pkcs5.pbkdf2(key.toString(\"binary\"), salt.toString(\"binary\"), itrs, keyLen, md, cb);\n    }); // STEP 2: encrypt cek\n\n    promise = promise.then(function (dk) {\n      return KW[kw].encrypt(dk, pdata);\n    });\n    return promise;\n  };\n\n  var webcrypto = function (key, pdata, props) {\n    props = props || {};\n    var salt = util.asBuffer(props.p2s || new Buffer(0), \"base64url\"),\n        itrs = props.p2c || 0;\n\n    if (0 >= itrs) {\n      throw new Error(\"invalid iteration count\");\n    }\n\n    if (8 > salt.length) {\n      throw new Error(\"salt too small\");\n    }\n\n    salt = fixSalt(hmac, kw, salt);\n    var promise; // STEP 1: derive shared key\n\n    var hash = hmac.replace(\"HS\", \"SHA-\");\n    promise = Promise.resolve(key);\n    promise = promise.then(function (keyval) {\n      return helpers.subtleCrypto.importKey(\"raw\", keyval, \"PBKDF2\", false, [\"deriveKey\"]);\n    });\n    promise = promise.then(function (key) {\n      var mainAlgo = {\n        name: \"PBKDF2\",\n        salt: salt,\n        iterations: itrs,\n        hash: hash\n      };\n      var deriveAlgo = {\n        name: \"AES-KW\",\n        length: keyLen * 8\n      };\n      return helpers.subtleCrypto.deriveKey(mainAlgo, key, deriveAlgo, true, [\"wrapKey\", \"unwrapKey\"]);\n    }); // STEP 2: encrypt cek\n\n    promise = promise.then(function (dk) {\n      // assume subtleCrypto for keywrap\n      return Promise.all([helpers.subtleCrypto.importKey(\"raw\", pdata, {\n        name: \"HMAC\",\n        hash: \"SHA-256\"\n      }, true, [\"sign\"]), dk]);\n    });\n    promise = promise.then(function (keys) {\n      return helpers.subtleCrypto.wrapKey(\"raw\", keys[0], // key\n      keys[1], // wrappingKey\n      \"AES-KW\");\n    });\n    promise = promise.then(function (result) {\n      result = new Buffer(result);\n      return {\n        data: result\n      };\n    });\n    return promise;\n  };\n\n  var nodejs = function (key, pdata, props) {\n    if (6 > helpers.nodeCrypto.pbkdf2.length) {\n      throw new Error(\"unsupported algorithm: PBES2-\" + hmac + \"+\" + kw);\n    }\n\n    props = props || {};\n    var salt = util.asBuffer(props.p2s || new Buffer(0), \"base64url\"),\n        itrs = props.p2c || 0;\n\n    if (0 >= itrs) {\n      throw new Error(\"invalid iteration count\");\n    }\n\n    if (8 > salt.length) {\n      throw new Error(\"salt too small\");\n    }\n\n    salt = fixSalt(hmac, kw, salt);\n    var promise; // STEP 1: derive shared key\n\n    var hash = hmac.replace(\"HS\", \"SHA\");\n    promise = new Promise(function (resolve, reject) {\n      function cb(err, dk) {\n        if (err) {\n          reject(err);\n        } else {\n          resolve(dk);\n        }\n      }\n\n      helpers.nodeCrypto.pbkdf2(key, salt, itrs, keyLen, hash, cb);\n    }); // STEP 2: encrypt cek\n\n    promise = promise.then(function (dk) {\n      return KW[kw].encrypt(dk, pdata);\n    });\n    return promise;\n  };\n\n  return helpers.setupFallback(nodejs, webcrypto, fallback);\n}\n\nfunction pbes2DecryptFN(hmac, kw) {\n  var keyLen = CONSTANTS.KEYLENGTH[kw] / 8;\n\n  var fallback = function (key, cdata, props) {\n    props = props || {};\n    var salt = util.asBuffer(props.p2s || new Buffer(0), \"base64url\"),\n        itrs = props.p2c || 0;\n\n    if (0 >= itrs) {\n      return Promise.reject(new Error(\"invalid iteration count\"));\n    }\n\n    if (8 > salt.length) {\n      return Promise.reject(new Error(\"salt too small\"));\n    }\n\n    salt = fixSalt(hmac, kw, salt);\n    var promise; // STEP 1: derived shared key\n\n    promise = new Promise(function (resolve, reject) {\n      var md = forge.md[hmac.replace(\"HS\", \"SHA\").toLowerCase()].create();\n\n      var cb = function (err, dk) {\n        if (err) {\n          reject(err);\n        } else {\n          dk = new Buffer(dk, \"binary\");\n          resolve(dk);\n        }\n      };\n\n      forge.pkcs5.pbkdf2(key.toString(\"binary\"), salt.toString(\"binary\"), itrs, keyLen, md, cb);\n    }); // STEP 2: decrypt cek\n\n    promise = promise.then(function (dk) {\n      return KW[kw].decrypt(dk, cdata);\n    });\n    return promise;\n  };\n\n  var webcrypto = function (key, cdata, props) {\n    props = props || {};\n    var salt = util.asBuffer(props.p2s || new Buffer(0), \"base64url\"),\n        itrs = props.p2c || 0;\n\n    if (0 >= itrs) {\n      return Promise.reject(new Error(\"invalid iteration count\"));\n    }\n\n    if (8 > salt.length) {\n      return Promise.reject(new Error(\"salt too small\"));\n    }\n\n    salt = fixSalt(hmac, kw, salt);\n    var hash = hmac.replace(\"HS\", \"SHA-\");\n    var promise;\n    promise = Promise.resolve(key);\n    promise = promise.then(function (keyval) {\n      return helpers.subtleCrypto.importKey(\"raw\", keyval, \"PBKDF2\", false, [\"deriveKey\"]);\n    });\n    promise = promise.then(function (key) {\n      var mainAlgo = {\n        name: \"PBKDF2\",\n        salt: salt,\n        iterations: itrs,\n        hash: hash\n      };\n      var deriveAlgo = {\n        name: \"AES-KW\",\n        length: keyLen * 8\n      };\n      return helpers.subtleCrypto.deriveKey(mainAlgo, key, deriveAlgo, true, [\"wrapKey\", \"unwrapKey\"]);\n    }); // STEP 2: decrypt cek\n\n    promise = promise.then(function (key) {\n      return helpers.subtleCrypto.unwrapKey(\"raw\", cdata, key, \"AES-KW\", {\n        name: \"HMAC\",\n        hash: \"SHA-256\"\n      }, true, [\"sign\"]);\n    });\n    promise = promise.then(function (result) {\n      // unwrapped CryptoKey -- extract raw\n      return helpers.subtleCrypto.exportKey(\"raw\", result);\n    });\n    promise = promise.then(function (result) {\n      result = new Buffer(result);\n      return result;\n    });\n    return promise;\n  };\n\n  var nodejs = function (key, cdata, props) {\n    if (6 > helpers.nodeCrypto.pbkdf2.length) {\n      throw new Error(\"unsupported algorithm: PBES2-\" + hmac + \"+\" + kw);\n    }\n\n    props = props || {};\n    var salt = util.asBuffer(props.p2s || new Buffer(0), \"base64url\"),\n        itrs = props.p2c || 0;\n\n    if (0 >= itrs) {\n      return Promise.reject(new Error(\"invalid iteration count\"));\n    }\n\n    if (8 > salt.length) {\n      return Promise.reject(new Error(\"salt too small\"));\n    }\n\n    salt = fixSalt(hmac, kw, salt);\n    var promise; // STEP 1: derive shared key\n\n    var hash = hmac.replace(\"HS\", \"SHA\");\n    promise = new Promise(function (resolve, reject) {\n      function cb(err, dk) {\n        if (err) {\n          reject(err);\n        } else {\n          resolve(dk);\n        }\n      }\n\n      helpers.nodeCrypto.pbkdf2(key, salt, itrs, keyLen, hash, cb);\n    }); // STEP 2: decrypt cek\n\n    promise = promise.then(function (dk) {\n      return KW[kw].decrypt(dk, cdata);\n    });\n    return promise;\n  };\n\n  return helpers.setupFallback(nodejs, webcrypto, fallback);\n} // ### Public API\n\n\nvar pbes2 = {}; // * [name].derive\n\n[\"PBKDF2-SHA-256\", \"PBKDF2-SHA-384\", \"PBKDF2-SHA-512\"].forEach(function (alg) {\n  var hash = alg.replace(\"PBKDF2-\", \"\");\n  pbes2[alg] = {\n    derive: pbkdf2Fn(hash)\n  };\n}); // [name].encrypt\n// [name].decrypt\n\n[\"PBES2-HS256+A128KW\", \"PBES2-HS384+A192KW\", \"PBES2-HS512+A256KW\"].forEach(function (alg) {\n  var parts = /PBES2-(HS\\d+)\\+(A\\d+KW)/g.exec(alg);\n  var hmac = parts[1],\n      kw = parts[2];\n  pbes2[alg] = {\n    encrypt: pbes2EncryptFN(hmac, kw),\n    decrypt: pbes2DecryptFN(hmac, kw)\n  };\n});\nmodule.exports = pbes2;","map":{"version":3,"sources":["/Users/pratison/Work/Cisco/Education/React/education-webex/node_modules/node-jose/lib/algorithms/pbes2.js"],"names":["forge","require","util","helpers","CONSTANTS","KW","NULL_BUFFER","Buffer","fixSalt","hmac","kw","salt","alg","output","concat","pbkdf2Fn","hash","prepareProps","props","keyLen","length","asBuffer","itrs","iterations","Error","fallback","key","err","Promise","reject","promise","resolve","md","replace","toLowerCase","create","cb","dk","pkcs5","pbkdf2","toString","webcrypto","then","keyval","subtleCrypto","importKey","mainAlgo","name","deriveBits","result","nodejs","nodeCrypto","setupFallback","pbes2EncryptFN","KEYLENGTH","pdata","p2s","p2c","encrypt","deriveAlgo","deriveKey","all","keys","wrapKey","data","pbes2DecryptFN","cdata","decrypt","unwrapKey","exportKey","pbes2","forEach","derive","parts","exec","module","exports"],"mappings":"AAAA;;;;;AAKA;;AAEA,IAAIA,KAAK,GAAGC,OAAO,CAAC,kBAAD,CAAnB;AAAA,IACIC,IAAI,GAAGD,OAAO,CAAC,SAAD,CADlB;AAAA,IAEIE,OAAO,GAAGF,OAAO,CAAC,cAAD,CAFrB;AAAA,IAGIG,SAAS,GAAGH,OAAO,CAAC,gBAAD,CAHvB;AAAA,IAIII,EAAE,GAAGJ,OAAO,CAAC,aAAD,CAJhB;;AAMA,IAAIK,WAAW,GAAG,IAAIC,MAAJ,CAAW,CAAC,CAAD,CAAX,CAAlB;;AAEA,SAASC,OAAT,CAAiBC,IAAjB,EAAuBC,EAAvB,EAA2BC,IAA3B,EAAiC;AAC/B,MAAIC,GAAG,GAAG,WAAWH,IAAX,GAAkB,GAAlB,GAAwBC,EAAlC;AACA,MAAIG,MAAM,GAAG,CACX,IAAIN,MAAJ,CAAWK,GAAX,EAAgB,MAAhB,CADW,EAEXN,WAFW,EAGXK,IAHW,CAAb;AAKA,SAAOJ,MAAM,CAACO,MAAP,CAAcD,MAAd,CAAP;AACD;;AAED,SAASE,QAAT,CAAkBC,IAAlB,EAAwB;AACtB,WAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAC3BA,IAAAA,KAAK,GAAGA,KAAK,IAAI,EAAjB;AACA,QAAIC,MAAM,GAAGD,KAAK,CAACE,MAAN,IAAgB,CAA7B;AACA,QAAIT,IAAI,GAAGT,IAAI,CAACmB,QAAL,CAAcH,KAAK,CAACP,IAAN,IAAc,IAAIJ,MAAJ,CAAW,CAAX,CAA5B,EAA2C,WAA3C,CAAX;AAAA,QACIe,IAAI,GAAGJ,KAAK,CAACK,UAAN,IAAoB,CAD/B;;AAGA,QAAI,KAAKJ,MAAT,EAAiB;AACf,YAAM,IAAIK,KAAJ,CAAU,oBAAV,CAAN;AACD;;AACD,QAAI,KAAKF,IAAT,EAAe;AACb,YAAM,IAAIE,KAAJ,CAAU,yBAAV,CAAN;AACD;;AAEDN,IAAAA,KAAK,CAACE,MAAN,GAAeD,MAAf;AACAD,IAAAA,KAAK,CAACP,IAAN,GAAaA,IAAb;AACAO,IAAAA,KAAK,CAACK,UAAN,GAAmBD,IAAnB;AAEA,WAAOJ,KAAP;AACD;;AAED,MAAIO,QAAQ,GAAG,UAASC,GAAT,EAAcR,KAAd,EAAqB;AAClC,QAAI;AACFA,MAAAA,KAAK,GAAGD,YAAY,CAACC,KAAD,CAApB;AACD,KAFD,CAEE,OAAOS,GAAP,EAAY;AACZ,aAAOC,OAAO,CAACC,MAAR,CAAeF,GAAf,CAAP;AACD;;AAED,QAAIR,MAAM,GAAGD,KAAK,CAACE,MAAnB;AAAA,QACIT,IAAI,GAAGO,KAAK,CAACP,IADjB;AAAA,QAEIW,IAAI,GAAGJ,KAAK,CAACK,UAFjB;AAIA,QAAIO,OAAO,GAAG,IAAIF,OAAJ,CAAY,UAASG,OAAT,EAAkBF,MAAlB,EAA0B;AAClD,UAAIG,EAAE,GAAGhC,KAAK,CAACgC,EAAN,CAAShB,IAAI,CAACiB,OAAL,CAAa,GAAb,EAAkB,EAAlB,EAAsBC,WAAtB,EAAT,EAA8CC,MAA9C,EAAT;;AACA,UAAIC,EAAE,GAAG,UAAST,GAAT,EAAcU,EAAd,EAAkB;AACzB,YAAIV,GAAJ,EAAS;AACPE,UAAAA,MAAM,CAACF,GAAD,CAAN;AACD,SAFD,MAEO;AACLU,UAAAA,EAAE,GAAG,IAAI9B,MAAJ,CAAW8B,EAAX,EAAe,QAAf,CAAL;AACAN,UAAAA,OAAO,CAACM,EAAD,CAAP;AACD;AACF,OAPD;;AASArC,MAAAA,KAAK,CAACsC,KAAN,CAAYC,MAAZ,CAAmBb,GAAG,CAACc,QAAJ,CAAa,QAAb,CAAnB,EACmB7B,IAAI,CAAC6B,QAAL,CAAc,QAAd,CADnB,EAEmBlB,IAFnB,EAGmBH,MAHnB,EAImBa,EAJnB,EAKmBI,EALnB;AAMD,KAjBa,CAAd;AAkBA,WAAON,OAAP;AACD,GA9BD;;AA+BA,MAAIW,SAAS,GAAG,UAASf,GAAT,EAAcR,KAAd,EAAqB;AACnC,QAAI;AACFA,MAAAA,KAAK,GAAGD,YAAY,CAACC,KAAD,CAApB;AACD,KAFD,CAEE,OAAOS,GAAP,EAAY;AACZ,aAAOC,OAAO,CAACC,MAAR,CAAeF,GAAf,CAAP;AACD;;AAED,QAAIR,MAAM,GAAGD,KAAK,CAACE,MAAnB;AAAA,QACIT,IAAI,GAAGO,KAAK,CAACP,IADjB;AAAA,QAEIW,IAAI,GAAGJ,KAAK,CAACK,UAFjB;AAIA,QAAIO,OAAO,GAAGF,OAAO,CAACG,OAAR,CAAgBL,GAAhB,CAAd;AACAI,IAAAA,OAAO,GAAGA,OAAO,CAACY,IAAR,CAAa,UAASC,MAAT,EAAiB;AACtC,aAAOxC,OAAO,CAACyC,YAAR,CAAqBC,SAArB,CAA+B,KAA/B,EAAsCF,MAAtC,EAA8C,QAA9C,EAAwD,KAAxD,EAA+D,CAAC,YAAD,CAA/D,CAAP;AACD,KAFS,CAAV;AAGAb,IAAAA,OAAO,GAAGA,OAAO,CAACY,IAAR,CAAa,UAAShB,GAAT,EAAc;AACnC,UAAIoB,QAAQ,GAAG;AACbC,QAAAA,IAAI,EAAE,QADO;AAEbpC,QAAAA,IAAI,EAAEA,IAFO;AAGbY,QAAAA,UAAU,EAAED,IAHC;AAIbN,QAAAA,IAAI,EAAEA;AAJO,OAAf;AAOA,aAAOb,OAAO,CAACyC,YAAR,CAAqBI,UAArB,CAAgCF,QAAhC,EAA0CpB,GAA1C,EAA+CP,MAAM,GAAG,CAAxD,CAAP;AACD,KATS,CAAV;AAUAW,IAAAA,OAAO,GAAGA,OAAO,CAACY,IAAR,CAAa,UAASO,MAAT,EAAiB;AACtC,aAAO/C,IAAI,CAACmB,QAAL,CAAc4B,MAAd,CAAP;AACD,KAFS,CAAV;AAGA,WAAOnB,OAAP;AACD,GA7BD;;AA8BA,MAAIoB,MAAM,GAAG,UAASxB,GAAT,EAAcR,KAAd,EAAqB;AAChC,QAAI,IAAIf,OAAO,CAACgD,UAAR,CAAmBZ,MAAnB,CAA0BnB,MAAlC,EAA0C;AACxC,YAAM,IAAII,KAAJ,CAAU,kCAAkCf,IAAlC,GAAyC,GAAzC,GAA+CC,EAAzD,CAAN;AACD;;AAED,QAAI;AACFQ,MAAAA,KAAK,GAAGD,YAAY,CAACC,KAAD,CAApB;AACD,KAFD,CAEE,OAAOS,GAAP,EAAY;AACZ,aAAOC,OAAO,CAACC,MAAR,CAAeF,GAAf,CAAP;AACD;;AAED,QAAIR,MAAM,GAAGD,KAAK,CAACE,MAAnB;AAAA,QACIT,IAAI,GAAGO,KAAK,CAACP,IADjB;AAAA,QAEIW,IAAI,GAAGJ,KAAK,CAACK,UAFjB;AAII,QAAIS,EAAE,GAAGhB,IAAI,CAACiB,OAAL,CAAa,GAAb,EAAkB,EAAlB,CAAT;AACJ,QAAIH,OAAO,GAAG,IAAIF,OAAJ,CAAY,UAASG,OAAT,EAAkBF,MAAlB,EAA0B;AAClD,eAASO,EAAT,CAAYT,GAAZ,EAAiBU,EAAjB,EAAqB;AACnB,YAAIV,GAAJ,EAAS;AACPE,UAAAA,MAAM,CAACF,GAAD,CAAN;AACD,SAFD,MAEO;AACLI,UAAAA,OAAO,CAACM,EAAD,CAAP;AACD;AACF;;AACDlC,MAAAA,OAAO,CAACgD,UAAR,CAAmBZ,MAAnB,CAA0Bb,GAA1B,EAA+Bf,IAA/B,EAAqCW,IAArC,EAA2CH,MAA3C,EAAmDa,EAAnD,EAAuDI,EAAvD;AACD,KATa,CAAd;AAUA,WAAON,OAAP;AACD,GA3BD;;AA6BA,SAAO3B,OAAO,CAACiD,aAAR,CAAsBF,MAAtB,EAA8BT,SAA9B,EAAyChB,QAAzC,CAAP;AACD;;AAED,SAAS4B,cAAT,CAAwB5C,IAAxB,EAA8BC,EAA9B,EAAkC;AAChC,MAAIS,MAAM,GAAGf,SAAS,CAACkD,SAAV,CAAoB5C,EAApB,IAA0B,CAAvC;;AAEA,MAAIe,QAAQ,GAAG,UAASC,GAAT,EAAc6B,KAAd,EAAqBrC,KAArB,EAA4B;AACzCA,IAAAA,KAAK,GAAGA,KAAK,IAAI,EAAjB;AAEA,QAAIP,IAAI,GAAGT,IAAI,CAACmB,QAAL,CAAcH,KAAK,CAACsC,GAAN,IAAa,IAAIjD,MAAJ,CAAW,CAAX,CAA3B,EAA0C,WAA1C,CAAX;AAAA,QACIe,IAAI,GAAGJ,KAAK,CAACuC,GAAN,IAAa,CADxB;;AAGA,QAAI,KAAKnC,IAAT,EAAe;AACb,YAAM,IAAIE,KAAJ,CAAU,yBAAV,CAAN;AACD;;AACD,QAAI,IAAIb,IAAI,CAACS,MAAb,EAAqB;AACnB,YAAM,IAAII,KAAJ,CAAU,gBAAV,CAAN;AACD;;AACDb,IAAAA,IAAI,GAAGH,OAAO,CAACC,IAAD,EAAOC,EAAP,EAAWC,IAAX,CAAd;AAEA,QAAImB,OAAJ,CAdyC,CAgBzC;;AACAA,IAAAA,OAAO,GAAG,IAAIF,OAAJ,CAAY,UAASG,OAAT,EAAkBF,MAAlB,EAA0B;AAC9C,UAAIG,EAAE,GAAGhC,KAAK,CAACgC,EAAN,CAASvB,IAAI,CAACwB,OAAL,CAAa,IAAb,EAAmB,KAAnB,EAA0BC,WAA1B,EAAT,EAAkDC,MAAlD,EAAT;;AACA,UAAIC,EAAE,GAAG,UAAST,GAAT,EAAcU,EAAd,EAAkB;AACzB,YAAIV,GAAJ,EAAS;AACPE,UAAAA,MAAM,CAACF,GAAD,CAAN;AACD,SAFD,MAEO;AACLU,UAAAA,EAAE,GAAG,IAAI9B,MAAJ,CAAW8B,EAAX,EAAe,QAAf,CAAL;AACAN,UAAAA,OAAO,CAACM,EAAD,CAAP;AACD;AACF,OAPD;;AASArC,MAAAA,KAAK,CAACsC,KAAN,CAAYC,MAAZ,CAAmBb,GAAG,CAACc,QAAJ,CAAa,QAAb,CAAnB,EACmB7B,IAAI,CAAC6B,QAAL,CAAc,QAAd,CADnB,EAEmBlB,IAFnB,EAGmBH,MAHnB,EAImBa,EAJnB,EAKmBI,EALnB;AAMD,KAjBS,CAAV,CAjByC,CAoCzC;;AACAN,IAAAA,OAAO,GAAGA,OAAO,CAACY,IAAR,CAAa,UAASL,EAAT,EAAa;AAClC,aAAOhC,EAAE,CAACK,EAAD,CAAF,CAAOgD,OAAP,CAAerB,EAAf,EAAmBkB,KAAnB,CAAP;AACD,KAFS,CAAV;AAGA,WAAOzB,OAAP;AACD,GAzCD;;AA2CA,MAAIW,SAAS,GAAG,UAASf,GAAT,EAAc6B,KAAd,EAAqBrC,KAArB,EAA4B;AAC1CA,IAAAA,KAAK,GAAGA,KAAK,IAAI,EAAjB;AAEA,QAAIP,IAAI,GAAGT,IAAI,CAACmB,QAAL,CAAcH,KAAK,CAACsC,GAAN,IAAa,IAAIjD,MAAJ,CAAW,CAAX,CAA3B,EAA0C,WAA1C,CAAX;AAAA,QACIe,IAAI,GAAGJ,KAAK,CAACuC,GAAN,IAAa,CADxB;;AAGA,QAAI,KAAKnC,IAAT,EAAe;AACb,YAAM,IAAIE,KAAJ,CAAU,yBAAV,CAAN;AACD;;AACD,QAAI,IAAIb,IAAI,CAACS,MAAb,EAAqB;AACnB,YAAM,IAAII,KAAJ,CAAU,gBAAV,CAAN;AACD;;AACDb,IAAAA,IAAI,GAAGH,OAAO,CAACC,IAAD,EAAOC,EAAP,EAAWC,IAAX,CAAd;AAEA,QAAImB,OAAJ,CAd0C,CAgB1C;;AACA,QAAId,IAAI,GAAGP,IAAI,CAACwB,OAAL,CAAa,IAAb,EAAmB,MAAnB,CAAX;AACAH,IAAAA,OAAO,GAAGF,OAAO,CAACG,OAAR,CAAgBL,GAAhB,CAAV;AACAI,IAAAA,OAAO,GAAGA,OAAO,CAACY,IAAR,CAAa,UAASC,MAAT,EAAiB;AACtC,aAAOxC,OAAO,CAACyC,YAAR,CAAqBC,SAArB,CAA+B,KAA/B,EAAsCF,MAAtC,EAA8C,QAA9C,EAAwD,KAAxD,EAA+D,CAAC,WAAD,CAA/D,CAAP;AACD,KAFS,CAAV;AAGAb,IAAAA,OAAO,GAAGA,OAAO,CAACY,IAAR,CAAa,UAAShB,GAAT,EAAc;AACnC,UAAIoB,QAAQ,GAAG;AACbC,QAAAA,IAAI,EAAE,QADO;AAEbpC,QAAAA,IAAI,EAAEA,IAFO;AAGbY,QAAAA,UAAU,EAAED,IAHC;AAIbN,QAAAA,IAAI,EAAEA;AAJO,OAAf;AAMA,UAAI2C,UAAU,GAAG;AACfZ,QAAAA,IAAI,EAAE,QADS;AAEf3B,QAAAA,MAAM,EAAED,MAAM,GAAG;AAFF,OAAjB;AAKA,aAAOhB,OAAO,CAACyC,YAAR,CAAqBgB,SAArB,CAA+Bd,QAA/B,EAAyCpB,GAAzC,EAA8CiC,UAA9C,EAA0D,IAA1D,EAAgE,CAAC,SAAD,EAAY,WAAZ,CAAhE,CAAP;AACD,KAbS,CAAV,CAtB0C,CAoC1C;;AACA7B,IAAAA,OAAO,GAAGA,OAAO,CAACY,IAAR,CAAa,UAASL,EAAT,EAAa;AAClC;AACA,aAAOT,OAAO,CAACiC,GAAR,CAAY,CACjB1D,OAAO,CAACyC,YAAR,CAAqBC,SAArB,CAA+B,KAA/B,EAAsCU,KAAtC,EAA6C;AAAER,QAAAA,IAAI,EAAE,MAAR;AAAgB/B,QAAAA,IAAI,EAAE;AAAtB,OAA7C,EAAgF,IAAhF,EAAsF,CAAC,MAAD,CAAtF,CADiB,EAEjBqB,EAFiB,CAAZ,CAAP;AAID,KANS,CAAV;AAOAP,IAAAA,OAAO,GAAGA,OAAO,CAACY,IAAR,CAAa,UAASoB,IAAT,EAAe;AACpC,aAAO3D,OAAO,CAACyC,YAAR,CAAqBmB,OAArB,CAA6B,KAA7B,EAC6BD,IAAI,CAAC,CAAD,CADjC,EACsC;AACTA,MAAAA,IAAI,CAAC,CAAD,CAFjC,EAEsC;AACT,cAH7B,CAAP;AAID,KALS,CAAV;AAMAhC,IAAAA,OAAO,GAAGA,OAAO,CAACY,IAAR,CAAa,UAASO,MAAT,EAAiB;AACtCA,MAAAA,MAAM,GAAG,IAAI1C,MAAJ,CAAW0C,MAAX,CAAT;AAEA,aAAO;AACLe,QAAAA,IAAI,EAAEf;AADD,OAAP;AAGD,KANS,CAAV;AAOA,WAAOnB,OAAP;AACD,GA1DD;;AA4DA,MAAIoB,MAAM,GAAG,UAASxB,GAAT,EAAc6B,KAAd,EAAqBrC,KAArB,EAA4B;AACvC,QAAI,IAAIf,OAAO,CAACgD,UAAR,CAAmBZ,MAAnB,CAA0BnB,MAAlC,EAA0C;AACxC,YAAM,IAAII,KAAJ,CAAU,kCAAkCf,IAAlC,GAAyC,GAAzC,GAA+CC,EAAzD,CAAN;AACD;;AAEDQ,IAAAA,KAAK,GAAGA,KAAK,IAAI,EAAjB;AAEA,QAAIP,IAAI,GAAGT,IAAI,CAACmB,QAAL,CAAcH,KAAK,CAACsC,GAAN,IAAa,IAAIjD,MAAJ,CAAW,CAAX,CAA3B,EAA0C,WAA1C,CAAX;AAAA,QACIe,IAAI,GAAGJ,KAAK,CAACuC,GAAN,IAAa,CADxB;;AAGA,QAAI,KAAKnC,IAAT,EAAe;AACb,YAAM,IAAIE,KAAJ,CAAU,yBAAV,CAAN;AACD;;AACD,QAAI,IAAIb,IAAI,CAACS,MAAb,EAAqB;AACnB,YAAM,IAAII,KAAJ,CAAU,gBAAV,CAAN;AACD;;AACDb,IAAAA,IAAI,GAAGH,OAAO,CAACC,IAAD,EAAOC,EAAP,EAAWC,IAAX,CAAd;AAEA,QAAImB,OAAJ,CAlBuC,CAoBvC;;AACA,QAAId,IAAI,GAAGP,IAAI,CAACwB,OAAL,CAAa,IAAb,EAAmB,KAAnB,CAAX;AACAH,IAAAA,OAAO,GAAG,IAAIF,OAAJ,CAAY,UAASG,OAAT,EAAkBF,MAAlB,EAA0B;AAC9C,eAASO,EAAT,CAAYT,GAAZ,EAAiBU,EAAjB,EAAqB;AACnB,YAAIV,GAAJ,EAAS;AACPE,UAAAA,MAAM,CAACF,GAAD,CAAN;AACD,SAFD,MAEO;AACLI,UAAAA,OAAO,CAACM,EAAD,CAAP;AACD;AACF;;AACDlC,MAAAA,OAAO,CAACgD,UAAR,CAAmBZ,MAAnB,CAA0Bb,GAA1B,EAA+Bf,IAA/B,EAAqCW,IAArC,EAA2CH,MAA3C,EAAmDH,IAAnD,EAAyDoB,EAAzD;AACD,KATS,CAAV,CAtBuC,CAiCvC;;AACAN,IAAAA,OAAO,GAAGA,OAAO,CAACY,IAAR,CAAa,UAASL,EAAT,EAAa;AAClC,aAAOhC,EAAE,CAACK,EAAD,CAAF,CAAOgD,OAAP,CAAerB,EAAf,EAAmBkB,KAAnB,CAAP;AACD,KAFS,CAAV;AAIA,WAAOzB,OAAP;AACD,GAvCD;;AAyCA,SAAO3B,OAAO,CAACiD,aAAR,CAAsBF,MAAtB,EAA8BT,SAA9B,EAAyChB,QAAzC,CAAP;AACD;;AAED,SAASwC,cAAT,CAAwBxD,IAAxB,EAA8BC,EAA9B,EAAkC;AAChC,MAAIS,MAAM,GAAGf,SAAS,CAACkD,SAAV,CAAoB5C,EAApB,IAA0B,CAAvC;;AAEA,MAAIe,QAAQ,GAAG,UAASC,GAAT,EAAcwC,KAAd,EAAqBhD,KAArB,EAA4B;AACzCA,IAAAA,KAAK,GAAGA,KAAK,IAAI,EAAjB;AAEA,QAAIP,IAAI,GAAGT,IAAI,CAACmB,QAAL,CAAcH,KAAK,CAACsC,GAAN,IAAa,IAAIjD,MAAJ,CAAW,CAAX,CAA3B,EAA0C,WAA1C,CAAX;AAAA,QACIe,IAAI,GAAGJ,KAAK,CAACuC,GAAN,IAAa,CADxB;;AAGA,QAAI,KAAKnC,IAAT,EAAe;AACb,aAAOM,OAAO,CAACC,MAAR,CAAe,IAAIL,KAAJ,CAAU,yBAAV,CAAf,CAAP;AACD;;AAED,QAAI,IAAIb,IAAI,CAACS,MAAb,EAAqB;AACnB,aAAOQ,OAAO,CAACC,MAAR,CAAe,IAAIL,KAAJ,CAAU,gBAAV,CAAf,CAAP;AACD;;AACDb,IAAAA,IAAI,GAAGH,OAAO,CAACC,IAAD,EAAOC,EAAP,EAAWC,IAAX,CAAd;AAEA,QAAImB,OAAJ,CAfyC,CAiBzC;;AACAA,IAAAA,OAAO,GAAG,IAAIF,OAAJ,CAAY,UAASG,OAAT,EAAkBF,MAAlB,EAA0B;AAC9C,UAAIG,EAAE,GAAGhC,KAAK,CAACgC,EAAN,CAASvB,IAAI,CAACwB,OAAL,CAAa,IAAb,EAAmB,KAAnB,EAA0BC,WAA1B,EAAT,EAAkDC,MAAlD,EAAT;;AACA,UAAIC,EAAE,GAAG,UAAST,GAAT,EAAcU,EAAd,EAAkB;AACzB,YAAIV,GAAJ,EAAS;AACPE,UAAAA,MAAM,CAACF,GAAD,CAAN;AACD,SAFD,MAEO;AACLU,UAAAA,EAAE,GAAG,IAAI9B,MAAJ,CAAW8B,EAAX,EAAe,QAAf,CAAL;AACAN,UAAAA,OAAO,CAACM,EAAD,CAAP;AACD;AACF,OAPD;;AASArC,MAAAA,KAAK,CAACsC,KAAN,CAAYC,MAAZ,CAAmBb,GAAG,CAACc,QAAJ,CAAa,QAAb,CAAnB,EACmB7B,IAAI,CAAC6B,QAAL,CAAc,QAAd,CADnB,EAEmBlB,IAFnB,EAGmBH,MAHnB,EAImBa,EAJnB,EAKmBI,EALnB;AAMD,KAjBS,CAAV,CAlByC,CAqCzC;;AACAN,IAAAA,OAAO,GAAGA,OAAO,CAACY,IAAR,CAAa,UAASL,EAAT,EAAa;AAClC,aAAOhC,EAAE,CAACK,EAAD,CAAF,CAAOyD,OAAP,CAAe9B,EAAf,EAAmB6B,KAAnB,CAAP;AACD,KAFS,CAAV;AAGA,WAAOpC,OAAP;AACD,GA1CD;;AA4CA,MAAIW,SAAS,GAAG,UAASf,GAAT,EAAcwC,KAAd,EAAqBhD,KAArB,EAA4B;AAC1CA,IAAAA,KAAK,GAAGA,KAAK,IAAI,EAAjB;AAEA,QAAIP,IAAI,GAAGT,IAAI,CAACmB,QAAL,CAAcH,KAAK,CAACsC,GAAN,IAAa,IAAIjD,MAAJ,CAAW,CAAX,CAA3B,EAA0C,WAA1C,CAAX;AAAA,QACIe,IAAI,GAAGJ,KAAK,CAACuC,GAAN,IAAa,CADxB;;AAGA,QAAI,KAAKnC,IAAT,EAAe;AACb,aAAOM,OAAO,CAACC,MAAR,CAAe,IAAIL,KAAJ,CAAU,yBAAV,CAAf,CAAP;AACD;;AAED,QAAI,IAAIb,IAAI,CAACS,MAAb,EAAqB;AACnB,aAAOQ,OAAO,CAACC,MAAR,CAAe,IAAIL,KAAJ,CAAU,gBAAV,CAAf,CAAP;AACD;;AACDb,IAAAA,IAAI,GAAGH,OAAO,CAACC,IAAD,EAAOC,EAAP,EAAWC,IAAX,CAAd;AAEA,QAAIK,IAAI,GAAGP,IAAI,CAACwB,OAAL,CAAa,IAAb,EAAmB,MAAnB,CAAX;AACA,QAAIH,OAAJ;AACAA,IAAAA,OAAO,GAAGF,OAAO,CAACG,OAAR,CAAgBL,GAAhB,CAAV;AACAI,IAAAA,OAAO,GAAGA,OAAO,CAACY,IAAR,CAAa,UAASC,MAAT,EAAiB;AACtC,aAAOxC,OAAO,CAACyC,YAAR,CAAqBC,SAArB,CAA+B,KAA/B,EAAsCF,MAAtC,EAA8C,QAA9C,EAAwD,KAAxD,EAA+D,CAAC,WAAD,CAA/D,CAAP;AACD,KAFS,CAAV;AAGAb,IAAAA,OAAO,GAAGA,OAAO,CAACY,IAAR,CAAa,UAAShB,GAAT,EAAc;AACnC,UAAIoB,QAAQ,GAAG;AACbC,QAAAA,IAAI,EAAE,QADO;AAEbpC,QAAAA,IAAI,EAAEA,IAFO;AAGbY,QAAAA,UAAU,EAAED,IAHC;AAIbN,QAAAA,IAAI,EAAEA;AAJO,OAAf;AAMA,UAAI2C,UAAU,GAAG;AACfZ,QAAAA,IAAI,EAAE,QADS;AAEf3B,QAAAA,MAAM,EAAED,MAAM,GAAG;AAFF,OAAjB;AAKA,aAAOhB,OAAO,CAACyC,YAAR,CAAqBgB,SAArB,CAA+Bd,QAA/B,EAAyCpB,GAAzC,EAA8CiC,UAA9C,EAA0D,IAA1D,EAAgE,CAAC,SAAD,EAAY,WAAZ,CAAhE,CAAP;AACD,KAbS,CAAV,CArB0C,CAmC1C;;AACA7B,IAAAA,OAAO,GAAGA,OAAO,CAACY,IAAR,CAAa,UAAShB,GAAT,EAAc;AACnC,aAAOvB,OAAO,CAACyC,YAAR,CAAqBwB,SAArB,CAA+B,KAA/B,EAAsCF,KAAtC,EAA6CxC,GAA7C,EAAkD,QAAlD,EAA4D;AAACqB,QAAAA,IAAI,EAAE,MAAP;AAAe/B,QAAAA,IAAI,EAAE;AAArB,OAA5D,EAA6F,IAA7F,EAAmG,CAAC,MAAD,CAAnG,CAAP;AACD,KAFS,CAAV;AAGAc,IAAAA,OAAO,GAAGA,OAAO,CAACY,IAAR,CAAa,UAASO,MAAT,EAAiB;AACtC;AACA,aAAO9C,OAAO,CAACyC,YAAR,CAAqByB,SAArB,CAA+B,KAA/B,EAAsCpB,MAAtC,CAAP;AACD,KAHS,CAAV;AAIAnB,IAAAA,OAAO,GAAGA,OAAO,CAACY,IAAR,CAAa,UAASO,MAAT,EAAiB;AACtCA,MAAAA,MAAM,GAAG,IAAI1C,MAAJ,CAAW0C,MAAX,CAAT;AACA,aAAOA,MAAP;AACD,KAHS,CAAV;AAIA,WAAOnB,OAAP;AACD,GAhDD;;AAkDA,MAAIoB,MAAM,GAAG,UAASxB,GAAT,EAAcwC,KAAd,EAAqBhD,KAArB,EAA4B;AACvC,QAAI,IAAIf,OAAO,CAACgD,UAAR,CAAmBZ,MAAnB,CAA0BnB,MAAlC,EAA0C;AACxC,YAAM,IAAII,KAAJ,CAAU,kCAAkCf,IAAlC,GAAyC,GAAzC,GAA+CC,EAAzD,CAAN;AACD;;AAEDQ,IAAAA,KAAK,GAAGA,KAAK,IAAI,EAAjB;AAEA,QAAIP,IAAI,GAAGT,IAAI,CAACmB,QAAL,CAAcH,KAAK,CAACsC,GAAN,IAAa,IAAIjD,MAAJ,CAAW,CAAX,CAA3B,EAA0C,WAA1C,CAAX;AAAA,QACIe,IAAI,GAAGJ,KAAK,CAACuC,GAAN,IAAa,CADxB;;AAGA,QAAI,KAAKnC,IAAT,EAAe;AACb,aAAOM,OAAO,CAACC,MAAR,CAAe,IAAIL,KAAJ,CAAU,yBAAV,CAAf,CAAP;AACD;;AAED,QAAI,IAAIb,IAAI,CAACS,MAAb,EAAqB;AACnB,aAAOQ,OAAO,CAACC,MAAR,CAAe,IAAIL,KAAJ,CAAU,gBAAV,CAAf,CAAP;AACD;;AACDb,IAAAA,IAAI,GAAGH,OAAO,CAACC,IAAD,EAAOC,EAAP,EAAWC,IAAX,CAAd;AAEA,QAAImB,OAAJ,CAnBuC,CAqBvC;;AACA,QAAId,IAAI,GAAGP,IAAI,CAACwB,OAAL,CAAa,IAAb,EAAmB,KAAnB,CAAX;AACAH,IAAAA,OAAO,GAAG,IAAIF,OAAJ,CAAY,UAASG,OAAT,EAAkBF,MAAlB,EAA0B;AAC9C,eAASO,EAAT,CAAYT,GAAZ,EAAiBU,EAAjB,EAAqB;AACnB,YAAIV,GAAJ,EAAS;AACPE,UAAAA,MAAM,CAACF,GAAD,CAAN;AACD,SAFD,MAEO;AACLI,UAAAA,OAAO,CAACM,EAAD,CAAP;AACD;AACF;;AACDlC,MAAAA,OAAO,CAACgD,UAAR,CAAmBZ,MAAnB,CAA0Bb,GAA1B,EAA+Bf,IAA/B,EAAqCW,IAArC,EAA2CH,MAA3C,EAAmDH,IAAnD,EAAyDoB,EAAzD;AACD,KATS,CAAV,CAvBuC,CAkCvC;;AACAN,IAAAA,OAAO,GAAGA,OAAO,CAACY,IAAR,CAAa,UAASL,EAAT,EAAa;AAClC,aAAOhC,EAAE,CAACK,EAAD,CAAF,CAAOyD,OAAP,CAAe9B,EAAf,EAAmB6B,KAAnB,CAAP;AACD,KAFS,CAAV;AAIA,WAAOpC,OAAP;AACD,GAxCD;;AA0CA,SAAO3B,OAAO,CAACiD,aAAR,CAAsBF,MAAtB,EAA8BT,SAA9B,EAAyChB,QAAzC,CAAP;AACD,C,CAED;;;AACA,IAAI6C,KAAK,GAAG,EAAZ,C,CAEA;;AACA,CACE,gBADF,EAEE,gBAFF,EAGE,gBAHF,EAIEC,OAJF,CAIU,UAAS3D,GAAT,EAAc;AACtB,MAAII,IAAI,GAAGJ,GAAG,CAACqB,OAAJ,CAAY,SAAZ,EAAuB,EAAvB,CAAX;AACAqC,EAAAA,KAAK,CAAC1D,GAAD,CAAL,GAAa;AACX4D,IAAAA,MAAM,EAAEzD,QAAQ,CAACC,IAAD;AADL,GAAb;AAGD,CATD,E,CAWA;AACA;;AACA,CACE,oBADF,EAEE,oBAFF,EAGE,oBAHF,EAIEuD,OAJF,CAIU,UAAS3D,GAAT,EAAc;AACtB,MAAI6D,KAAK,GAAG,2BAA2BC,IAA3B,CAAgC9D,GAAhC,CAAZ;AACA,MAAIH,IAAI,GAAGgE,KAAK,CAAC,CAAD,CAAhB;AAAA,MACI/D,EAAE,GAAG+D,KAAK,CAAC,CAAD,CADd;AAEAH,EAAAA,KAAK,CAAC1D,GAAD,CAAL,GAAa;AACX8C,IAAAA,OAAO,EAAEL,cAAc,CAAC5C,IAAD,EAAOC,EAAP,CADZ;AAEXyD,IAAAA,OAAO,EAAEF,cAAc,CAACxD,IAAD,EAAOC,EAAP;AAFZ,GAAb;AAID,CAZD;AAcAiE,MAAM,CAACC,OAAP,GAAiBN,KAAjB","sourcesContent":["/*!\n * algorithms/pbes2.js - Password-Based Encryption (v2) Algorithms\n *\n * Copyright (c) 2015 Cisco Systems, Inc.  See LICENSE file.\n */\n\"use strict\";\n\nvar forge = require(\"../deps/forge.js\"),\n    util = require(\"../util\"),\n    helpers = require(\"./helpers.js\"),\n    CONSTANTS = require(\"./constants.js\"),\n    KW = require(\"./aes-kw.js\");\n\nvar NULL_BUFFER = new Buffer([0]);\n\nfunction fixSalt(hmac, kw, salt) {\n  var alg = \"PBES2-\" + hmac + \"+\" + kw;\n  var output = [\n    new Buffer(alg, \"utf8\"),\n    NULL_BUFFER,\n    salt\n  ];\n  return Buffer.concat(output);\n}\n\nfunction pbkdf2Fn(hash) {\n  function prepareProps(props) {\n    props = props || {};\n    var keyLen = props.length || 0;\n    var salt = util.asBuffer(props.salt || new Buffer(0), \"base64u4l\"),\n        itrs = props.iterations || 0;\n\n    if (0 >= keyLen) {\n      throw new Error(\"invalid key length\");\n    }\n    if (0 >= itrs) {\n      throw new Error(\"invalid iteration count\");\n    }\n\n    props.length = keyLen;\n    props.salt = salt;\n    props.iterations = itrs;\n\n    return props;\n  }\n\n  var fallback = function(key, props) {\n    try {\n      props = prepareProps(props);\n    } catch (err) {\n      return Promise.reject(err);\n    }\n\n    var keyLen = props.length,\n        salt = props.salt,\n        itrs = props.iterations;\n\n    var promise = new Promise(function(resolve, reject) {\n      var md = forge.md[hash.replace(\"-\", \"\").toLowerCase()].create();\n      var cb = function(err, dk) {\n        if (err) {\n          reject(err);\n        } else {\n          dk = new Buffer(dk, \"binary\");\n          resolve(dk);\n        }\n      };\n\n      forge.pkcs5.pbkdf2(key.toString(\"binary\"),\n                         salt.toString(\"binary\"),\n                         itrs,\n                         keyLen,\n                         md,\n                         cb);\n    });\n    return promise;\n  };\n  var webcrypto = function(key, props) {\n    try {\n      props = prepareProps(props);\n    } catch (err) {\n      return Promise.reject(err);\n    }\n\n    var keyLen = props.length,\n        salt = props.salt,\n        itrs = props.iterations;\n\n    var promise = Promise.resolve(key);\n    promise = promise.then(function(keyval) {\n      return helpers.subtleCrypto.importKey(\"raw\", keyval, \"PBKDF2\", false, [\"deriveBits\"]);\n    });\n    promise = promise.then(function(key) {\n      var mainAlgo = {\n        name: \"PBKDF2\",\n        salt: salt,\n        iterations: itrs,\n        hash: hash\n      };\n\n      return helpers.subtleCrypto.deriveBits(mainAlgo, key, keyLen * 8);\n    });\n    promise = promise.then(function(result) {\n      return util.asBuffer(result);\n    });\n    return promise;\n  };\n  var nodejs = function(key, props) {\n    if (6 > helpers.nodeCrypto.pbkdf2.length) {\n      throw new Error(\"unsupported algorithm: PBES2-\" + hmac + \"+\" + kw);\n    }\n\n    try {\n      props = prepareProps(props);\n    } catch (err) {\n      return Promise.reject(err);\n    }\n\n    var keyLen = props.length,\n        salt = props.salt,\n        itrs = props.iterations;\n\n        var md = hash.replace(\"-\", \"\");\n    var promise = new Promise(function(resolve, reject) {\n      function cb(err, dk) {\n        if (err) {\n          reject(err);\n        } else {\n          resolve(dk);\n        }\n      }\n      helpers.nodeCrypto.pbkdf2(key, salt, itrs, keyLen, md, cb);\n    });\n    return promise;\n  };\n\n  return helpers.setupFallback(nodejs, webcrypto, fallback);\n}\n\nfunction pbes2EncryptFN(hmac, kw) {\n  var keyLen = CONSTANTS.KEYLENGTH[kw] / 8;\n\n  var fallback = function(key, pdata, props) {\n    props = props || {};\n\n    var salt = util.asBuffer(props.p2s || new Buffer(0), \"base64url\"),\n        itrs = props.p2c || 0;\n\n    if (0 >= itrs) {\n      throw new Error(\"invalid iteration count\");\n    }\n    if (8 > salt.length) {\n      throw new Error(\"salt too small\");\n    }\n    salt = fixSalt(hmac, kw, salt);\n\n    var promise;\n\n    // STEP 1: derive shared key\n    promise = new Promise(function(resolve, reject) {\n      var md = forge.md[hmac.replace(\"HS\", \"SHA\").toLowerCase()].create();\n      var cb = function(err, dk) {\n        if (err) {\n          reject(err);\n        } else {\n          dk = new Buffer(dk, \"binary\");\n          resolve(dk);\n        }\n      };\n\n      forge.pkcs5.pbkdf2(key.toString(\"binary\"),\n                         salt.toString(\"binary\"),\n                         itrs,\n                         keyLen,\n                         md,\n                         cb);\n    });\n\n    // STEP 2: encrypt cek\n    promise = promise.then(function(dk) {\n      return KW[kw].encrypt(dk, pdata);\n    });\n    return promise;\n  };\n\n  var webcrypto = function(key, pdata, props) {\n    props = props || {};\n\n    var salt = util.asBuffer(props.p2s || new Buffer(0), \"base64url\"),\n        itrs = props.p2c || 0;\n\n    if (0 >= itrs) {\n      throw new Error(\"invalid iteration count\");\n    }\n    if (8 > salt.length) {\n      throw new Error(\"salt too small\");\n    }\n    salt = fixSalt(hmac, kw, salt);\n\n    var promise;\n\n    // STEP 1: derive shared key\n    var hash = hmac.replace(\"HS\", \"SHA-\");\n    promise = Promise.resolve(key);\n    promise = promise.then(function(keyval) {\n      return helpers.subtleCrypto.importKey(\"raw\", keyval, \"PBKDF2\", false, [\"deriveKey\"]);\n    });\n    promise = promise.then(function(key) {\n      var mainAlgo = {\n        name: \"PBKDF2\",\n        salt: salt,\n        iterations: itrs,\n        hash: hash\n      };\n      var deriveAlgo = {\n        name: \"AES-KW\",\n        length: keyLen * 8\n      };\n\n      return helpers.subtleCrypto.deriveKey(mainAlgo, key, deriveAlgo, true, [\"wrapKey\", \"unwrapKey\"]);\n    });\n    // STEP 2: encrypt cek\n    promise = promise.then(function(dk) {\n      // assume subtleCrypto for keywrap\n      return Promise.all([\n        helpers.subtleCrypto.importKey(\"raw\", pdata, { name: \"HMAC\", hash: \"SHA-256\" }, true, [\"sign\"]),\n        dk\n      ]);\n    });\n    promise = promise.then(function(keys) {\n      return helpers.subtleCrypto.wrapKey(\"raw\",\n                                          keys[0], // key\n                                          keys[1], // wrappingKey\n                                          \"AES-KW\");\n    });\n    promise = promise.then(function(result) {\n      result = new Buffer(result);\n\n      return {\n        data: result\n      };\n    });\n    return promise;\n  };\n\n  var nodejs = function(key, pdata, props) {\n    if (6 > helpers.nodeCrypto.pbkdf2.length) {\n      throw new Error(\"unsupported algorithm: PBES2-\" + hmac + \"+\" + kw);\n    }\n\n    props = props || {};\n\n    var salt = util.asBuffer(props.p2s || new Buffer(0), \"base64url\"),\n        itrs = props.p2c || 0;\n\n    if (0 >= itrs) {\n      throw new Error(\"invalid iteration count\");\n    }\n    if (8 > salt.length) {\n      throw new Error(\"salt too small\");\n    }\n    salt = fixSalt(hmac, kw, salt);\n\n    var promise;\n\n    // STEP 1: derive shared key\n    var hash = hmac.replace(\"HS\", \"SHA\");\n    promise = new Promise(function(resolve, reject) {\n      function cb(err, dk) {\n        if (err) {\n          reject(err);\n        } else {\n          resolve(dk);\n        }\n      }\n      helpers.nodeCrypto.pbkdf2(key, salt, itrs, keyLen, hash, cb);\n    });\n\n    // STEP 2: encrypt cek\n    promise = promise.then(function(dk) {\n      return KW[kw].encrypt(dk, pdata);\n    });\n\n    return promise;\n  };\n\n  return helpers.setupFallback(nodejs, webcrypto, fallback);\n}\n\nfunction pbes2DecryptFN(hmac, kw) {\n  var keyLen = CONSTANTS.KEYLENGTH[kw] / 8;\n\n  var fallback = function(key, cdata, props) {\n    props = props || {};\n\n    var salt = util.asBuffer(props.p2s || new Buffer(0), \"base64url\"),\n        itrs = props.p2c || 0;\n\n    if (0 >= itrs) {\n      return Promise.reject(new Error(\"invalid iteration count\"));\n    }\n\n    if (8 > salt.length) {\n      return Promise.reject(new Error(\"salt too small\"));\n    }\n    salt = fixSalt(hmac, kw, salt);\n\n    var promise;\n\n    // STEP 1: derived shared key\n    promise = new Promise(function(resolve, reject) {\n      var md = forge.md[hmac.replace(\"HS\", \"SHA\").toLowerCase()].create();\n      var cb = function(err, dk) {\n        if (err) {\n          reject(err);\n        } else {\n          dk = new Buffer(dk, \"binary\");\n          resolve(dk);\n        }\n      };\n\n      forge.pkcs5.pbkdf2(key.toString(\"binary\"),\n                         salt.toString(\"binary\"),\n                         itrs,\n                         keyLen,\n                         md,\n                         cb);\n    });\n\n    // STEP 2: decrypt cek\n    promise = promise.then(function(dk) {\n      return KW[kw].decrypt(dk, cdata);\n    });\n    return promise;\n  };\n\n  var webcrypto = function(key, cdata, props) {\n    props = props || {};\n\n    var salt = util.asBuffer(props.p2s || new Buffer(0), \"base64url\"),\n        itrs = props.p2c || 0;\n\n    if (0 >= itrs) {\n      return Promise.reject(new Error(\"invalid iteration count\"));\n    }\n\n    if (8 > salt.length) {\n      return Promise.reject(new Error(\"salt too small\"));\n    }\n    salt = fixSalt(hmac, kw, salt);\n\n    var hash = hmac.replace(\"HS\", \"SHA-\");\n    var promise;\n    promise = Promise.resolve(key);\n    promise = promise.then(function(keyval) {\n      return helpers.subtleCrypto.importKey(\"raw\", keyval, \"PBKDF2\", false, [\"deriveKey\"]);\n    });\n    promise = promise.then(function(key) {\n      var mainAlgo = {\n        name: \"PBKDF2\",\n        salt: salt,\n        iterations: itrs,\n        hash: hash\n      };\n      var deriveAlgo = {\n        name: \"AES-KW\",\n        length: keyLen * 8\n      };\n\n      return helpers.subtleCrypto.deriveKey(mainAlgo, key, deriveAlgo, true, [\"wrapKey\", \"unwrapKey\"]);\n    });\n    // STEP 2: decrypt cek\n    promise = promise.then(function(key) {\n      return helpers.subtleCrypto.unwrapKey(\"raw\", cdata, key, \"AES-KW\", {name: \"HMAC\", hash: \"SHA-256\"}, true, [\"sign\"]);\n    });\n    promise = promise.then(function(result) {\n      // unwrapped CryptoKey -- extract raw\n      return helpers.subtleCrypto.exportKey(\"raw\", result);\n    });\n    promise = promise.then(function(result) {\n      result = new Buffer(result);\n      return result;\n    });\n    return promise;\n  };\n\n  var nodejs = function(key, cdata, props) {\n    if (6 > helpers.nodeCrypto.pbkdf2.length) {\n      throw new Error(\"unsupported algorithm: PBES2-\" + hmac + \"+\" + kw);\n    }\n\n    props = props || {};\n\n    var salt = util.asBuffer(props.p2s || new Buffer(0), \"base64url\"),\n        itrs = props.p2c || 0;\n\n    if (0 >= itrs) {\n      return Promise.reject(new Error(\"invalid iteration count\"));\n    }\n\n    if (8 > salt.length) {\n      return Promise.reject(new Error(\"salt too small\"));\n    }\n    salt = fixSalt(hmac, kw, salt);\n\n    var promise;\n\n    // STEP 1: derive shared key\n    var hash = hmac.replace(\"HS\", \"SHA\");\n    promise = new Promise(function(resolve, reject) {\n      function cb(err, dk) {\n        if (err) {\n          reject(err);\n        } else {\n          resolve(dk);\n        }\n      }\n      helpers.nodeCrypto.pbkdf2(key, salt, itrs, keyLen, hash, cb);\n    });\n\n    // STEP 2: decrypt cek\n    promise = promise.then(function(dk) {\n      return KW[kw].decrypt(dk, cdata);\n    });\n\n    return promise;\n  };\n\n  return helpers.setupFallback(nodejs, webcrypto, fallback);\n}\n\n// ### Public API\nvar pbes2 = {};\n\n// * [name].derive\n[\n  \"PBKDF2-SHA-256\",\n  \"PBKDF2-SHA-384\",\n  \"PBKDF2-SHA-512\"\n].forEach(function(alg) {\n  var hash = alg.replace(\"PBKDF2-\", \"\");\n  pbes2[alg] = {\n    derive: pbkdf2Fn(hash)\n  };\n});\n\n// [name].encrypt\n// [name].decrypt\n[\n  \"PBES2-HS256+A128KW\",\n  \"PBES2-HS384+A192KW\",\n  \"PBES2-HS512+A256KW\"\n].forEach(function(alg) {\n  var parts = /PBES2-(HS\\d+)\\+(A\\d+KW)/g.exec(alg);\n  var hmac = parts[1],\n      kw = parts[2];\n  pbes2[alg] = {\n    encrypt: pbes2EncryptFN(hmac, kw),\n    decrypt: pbes2DecryptFN(hmac, kw)\n  };\n});\n\nmodule.exports = pbes2;\n"]},"metadata":{},"sourceType":"script"}