{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _ampersandState = require('ampersand-state');\n\nvar _ampersandState2 = _interopRequireDefault(_ampersandState);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n} // The credentials config which includes the CI server info and derived\n// URL properties from them for the various CI services.  The URL's\n// will be updated when the CI changes.\n\n\nvar CredentialsConfig = _ampersandState2.default.extend({\n  // we need to allow extra props for dynamic props like jwtRefreshCallback\n  extraProperties: 'allow',\n  props: {\n    /**\n     * The idbroker base host name\n     * @returns {object}\n     */\n    idbroker: ['object', false, function () {\n      return {\n        url: process.env.IDBROKER_BASE_URL || 'https://idbroker.webex.com'\n      };\n    }],\n\n    /**\n     * The identity base host name\n     * @returns {object}\n     */\n    identity: ['object', false, function () {\n      return {\n        url: process.env.IDENTITY_BASE_URL || 'https://identity.webex.com'\n      };\n    }],\n\n    /**\n      * This is the authorization url displayed on the\n      * {@link developer portal|https://developer.webex.com}\n      * @type {string}\n      */\n    authorizationString: ['string', false, process.env.WEBEX_AUTHORIZATION_STRING || process.env.AUTHORIZATION_STRING],\n\n    /**\n      * {@see https://tools.ietf.org/html/rfc6749#section-4.1.4}\n      * @type {string}\n      */\n    client_id: ['string', false, process.env.WEBEX_CLIENT_ID || process.env.COMMON_IDENTITY_CLIENT_ID || process.env.CLIENT_ID],\n\n    /**\n      * {@see https://tools.ietf.org/html/rfc6749#section-4.1.4}\n      * @type {string}\n      */\n    client_secret: ['string', false, process.env.WEBEX_CLIENT_SECRET || process.env.COMMON_IDENTITY_CLIENT_SECRET || process.env.CLIENT_SECRET],\n\n    /**\n      * {@see https://tools.ietf.org/html/rfc6749#section-4.1.4}\n      * @type {string}\n      */\n    redirect_uri: ['string', false, process.env.WEBEX_REDIRECT_URI || process.env.COMMON_IDENTITY_REDIRECT_URI || process.env.REDIRECT_URI],\n\n    /**\n      * {@see https://tools.ietf.org/html/rfc6749#section-4.1.4}\n      * @type {string}\n      */\n    scope: ['string', false, process.env.WEBEX_SCOPE || process.env.WEBEX_SCOPES || process.env.COMMON_IDENTITY_SCOPE || process.env.SCOPE],\n\n    /**\n      * Controls the UI of the CI login page.\n      * @private\n      * @type {string}\n      */\n    cisService: ['string', false, 'webex']\n  },\n  derived: {\n    /**\n      * User activation URL\n      * {@link config.credentials.activationUrl}\n      * @type {string}\n      */\n    activationUrl: {\n      deps: ['idbroker.url'],\n      fn: function fn() {\n        return (this.idbroker.url || 'https://idbroker.webex.com') + '/idb/token/v1/actions/UserActivation/invoke';\n      },\n      cache: false\n    },\n\n    /**\n      * Authorization URL which prompts for user's password. Inferred from\n      * {@link config.credentials.authorizationString}\n      * @type {string}\n      */\n    authorizeUrl: {\n      deps: ['idbroker.url'],\n      fn: function fn() {\n        return process.env.AUTHORIZE_URL || this.idbroker.url + '/idb/oauth2/v1/authorize';\n      },\n      cache: false\n    },\n    // TODO does hydra also have an access_token endpoint?\n\n    /**\n      * Token URL used for token refresh and auth code exchange\n      * @type {string}\n      */\n    tokenUrl: {\n      deps: ['idbroker.url'],\n      fn: function fn() {\n        return process.env.TOKEN_URL || this.idbroker.url + '/idb/oauth2/v1/access_token';\n      },\n      cache: false\n    },\n\n    /**\n      * URL to revoke token\n      * @type {string}\n      */\n    revokeUrl: {\n      deps: ['idbroker.url'],\n      fn: function fn() {\n        return process.env.REVOKE_URL || this.idbroker.url + '/idb/oauth2/v1/revoke';\n      },\n      cache: false\n    },\n\n    /**\n      * URL to load when the app logs out\n      * @type {string}\n      */\n    logoutUrl: {\n      deps: ['idbroker.url'],\n      fn: function fn() {\n        return this.idbroker.url + '/idb/oauth2/v1/logout';\n      },\n      cache: false\n    },\n\n    /**\n      * Set password URL\n      * @type {string}\n      */\n    setPasswordUrl: {\n      deps: ['identity.url'],\n      fn: function fn() {\n        return (this.identity.url || 'https://identity.webex.com') + '/identity/scim/v1/Users';\n      },\n      cache: false\n    }\n  }\n});\n\nexports.default = CredentialsConfig;","map":{"version":3,"sources":["credentials-config.js"],"names":["CredentialsConfig","extraProperties","props","idbroker","url","process","identity","authorizationString","client_id","client_secret","redirect_uri","scope","cisService","derived","activationUrl","deps","fn","cache","authorizeUrl","tokenUrl","revokeUrl","logoutUrl","setPasswordUrl"],"mappings":"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","sourcesContent":["import AmpState from 'ampersand-state';\n\n// The credentials config which includes the CI server info and derived\n// URL properties from them for the various CI services.  The URL's\n// will be updated when the CI changes.\nconst CredentialsConfig = AmpState.extend({\n\n  // we need to allow extra props for dynamic props like jwtRefreshCallback\n  extraProperties: 'allow',\n\n  props: {\n    /**\n     * The idbroker base host name\n     * @returns {object}\n     */\n    idbroker: ['object', false, (() => ({\n      url: process.env.IDBROKER_BASE_URL || 'https://idbroker.webex.com'\n    }))],\n\n    /**\n     * The identity base host name\n     * @returns {object}\n     */\n    identity: ['object', false, (() => ({\n      url: process.env.IDENTITY_BASE_URL || 'https://identity.webex.com'\n    }))],\n\n    /**\n      * This is the authorization url displayed on the\n      * {@link developer portal|https://developer.webex.com}\n      * @type {string}\n      */\n    authorizationString: ['string', false, process.env.WEBEX_AUTHORIZATION_STRING || process.env.AUTHORIZATION_STRING],\n\n    /**\n      * {@see https://tools.ietf.org/html/rfc6749#section-4.1.4}\n      * @type {string}\n      */\n    client_id: ['string', false, process.env.WEBEX_CLIENT_ID || process.env.COMMON_IDENTITY_CLIENT_ID || process.env.CLIENT_ID],\n\n    /**\n      * {@see https://tools.ietf.org/html/rfc6749#section-4.1.4}\n      * @type {string}\n      */\n    client_secret: ['string', false, process.env.WEBEX_CLIENT_SECRET || process.env.COMMON_IDENTITY_CLIENT_SECRET || process.env.CLIENT_SECRET],\n\n    /**\n      * {@see https://tools.ietf.org/html/rfc6749#section-4.1.4}\n      * @type {string}\n      */\n    redirect_uri: ['string', false, process.env.WEBEX_REDIRECT_URI || process.env.COMMON_IDENTITY_REDIRECT_URI || process.env.REDIRECT_URI],\n\n    /**\n      * {@see https://tools.ietf.org/html/rfc6749#section-4.1.4}\n      * @type {string}\n      */\n    scope: ['string', false, process.env.WEBEX_SCOPE || process.env.WEBEX_SCOPES || process.env.COMMON_IDENTITY_SCOPE || process.env.SCOPE],\n\n    /**\n      * Controls the UI of the CI login page.\n      * @private\n      * @type {string}\n      */\n    cisService: ['string', false, 'webex']\n  },\n\n  derived: {\n    /**\n      * User activation URL\n      * {@link config.credentials.activationUrl}\n      * @type {string}\n      */\n    activationUrl: {\n      deps: ['idbroker.url'],\n      fn() {\n        return `${this.idbroker.url || 'https://idbroker.webex.com'}/idb/token/v1/actions/UserActivation/invoke`;\n      },\n      cache: false\n    },\n\n\n    /**\n      * Authorization URL which prompts for user's password. Inferred from\n      * {@link config.credentials.authorizationString}\n      * @type {string}\n      */\n    authorizeUrl: {\n      deps: ['idbroker.url'],\n      fn() {\n        return process.env.AUTHORIZE_URL || `${this.idbroker.url}/idb/oauth2/v1/authorize`;\n      },\n      cache: false\n\n    },\n\n    // TODO does hydra also have an access_token endpoint?\n    /**\n      * Token URL used for token refresh and auth code exchange\n      * @type {string}\n      */\n    tokenUrl: {\n      deps: ['idbroker.url'],\n      fn() {\n        return process.env.TOKEN_URL || `${this.idbroker.url}/idb/oauth2/v1/access_token`;\n      },\n      cache: false\n    },\n\n    /**\n      * URL to revoke token\n      * @type {string}\n      */\n    revokeUrl: {\n      deps: ['idbroker.url'],\n      fn() {\n        return process.env.REVOKE_URL || `${this.idbroker.url}/idb/oauth2/v1/revoke`;\n      },\n      cache: false\n    },\n\n    /**\n      * URL to load when the app logs out\n      * @type {string}\n      */\n    logoutUrl: {\n      deps: ['idbroker.url'],\n      fn() {\n        return `${this.idbroker.url}/idb/oauth2/v1/logout`;\n      },\n      cache: false\n    },\n\n    /**\n      * Set password URL\n      * @type {string}\n      */\n    setPasswordUrl: {\n      deps: ['identity.url'],\n      fn() {\n        return `${this.identity.url || 'https://identity.webex.com'}/identity/scim/v1/Users`;\n      },\n      cache: false\n    }\n\n  }\n\n});\n\nexport default CredentialsConfig;\n"]},"metadata":{},"sourceType":"script"}