{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _promise = require('babel-runtime/core-js/promise');\n\nvar _promise2 = _interopRequireDefault(_promise);\n\nexports.escape = escape;\nexports.escapeSync = escapeSync;\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/*!\n * Copyright (c) 2015-2019 Cisco Systems, Inc. See LICENSE file.\n */\n\n\nvar escapeMe = /(<|>|&)/g; // escape and escapeSync probably don't both need to exist, but it seemed like a\n// good idea in case we ever want to for the future.\n\n/**\n * Escapes HTML\n * @param {[type]} html\n * @returns {[type]}\n */\n\nfunction escape(html) {\n  return new _promise2.default(function (resolve) {\n    return resolve(escapeSync(html));\n  });\n}\n/**\n * Synchronously escape HTML\n * @param {[type]} html\n * @returns {[type]}\n */\n\n\nfunction escapeSync(html) {\n  return html.replace(escapeMe, entityReplacer);\n}\n/**\n * @param {string} char\n * @private\n * @returns {string}\n */\n\n\nfunction entityReplacer(char) {\n  switch (char) {\n    case '<':\n      return '&lt;';\n\n    case '>':\n      return '&gt;';\n\n    case '&':\n      return '&amp;';\n\n    default:\n      return char;\n  }\n}","map":{"version":3,"sources":["html-base.js"],"names":["escapeMe","escape","resolve","escapeSync","html"],"mappings":";;;;;;;;;;QAcgBC,M,GAAAA,M;QASAE,U,GAAAA,U;;;;;;;AAvBhB;;;;;AAIA,IAAMH,QAAAA,GAAN,UAAA,C,CAEA;AACA;;AAEA;;;;;;AAKO,SAAA,MAAA,CAAA,IAAA,EAAsB;AAC3B,SAAO,IAAA,SAAA,CAAA,OAAA,CAAY,UAAA,OAAA,EAAA;AAAA,WAAaE,OAAAA,CAAQC,UAAAA,CAArB,IAAqBA,CAARD,CAAb;AAAnB,GAAO,CAAP;AACD;AAED;;;;;;;AAKO,SAAA,UAAA,CAAA,IAAA,EAA0B;AAC/B,SAAOE,IAAAA,CAAAA,OAAAA,CAAAA,QAAAA,EAAP,cAAOA,CAAP;AACD;AAED;;;;;;;AAKA,SAAA,cAAA,CAAA,IAAA,EAA8B;AAC5B,UAAA,IAAA;AACE,SAAA,GAAA;AACE,aAAA,MAAA;;AACF,SAAA,GAAA;AACE,aAAA,MAAA;;AACF,SAAA,GAAA;AACE,aAAA,OAAA;;AACF;AACE,aAAA,IAAA;AARJ;AAUD","sourcesContent":["/*!\n * Copyright (c) 2015-2019 Cisco Systems, Inc. See LICENSE file.\n */\n\nconst escapeMe = /(<|>|&)/g;\n\n// escape and escapeSync probably don't both need to exist, but it seemed like a\n// good idea in case we ever want to for the future.\n\n/**\n * Escapes HTML\n * @param {[type]} html\n * @returns {[type]}\n */\nexport function escape(html) {\n  return new Promise((resolve) => resolve(escapeSync(html)));\n}\n\n/**\n * Synchronously escape HTML\n * @param {[type]} html\n * @returns {[type]}\n */\nexport function escapeSync(html) {\n  return html.replace(escapeMe, entityReplacer);\n}\n\n/**\n * @param {string} char\n * @private\n * @returns {string}\n */\nfunction entityReplacer(char) {\n  switch (char) {\n    case '<':\n      return '&lt;';\n    case '>':\n      return '&gt;';\n    case '&':\n      return '&amp;';\n    default:\n      return char;\n  }\n}\n"]},"metadata":{},"sourceType":"script"}