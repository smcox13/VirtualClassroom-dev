{"ast":null,"code":"var _jsxFileName = \"/Users/pratison/Work/Cisco/Education/React/education-webex/src/pages/FileUpload.js\";\nimport React from 'react';\nimport { Button } from '@momentum-ui/react';\nimport readXlsxFile from 'read-excel-file';\n\nclass FileUpload extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      uploadedFile: null\n    };\n    this.uploadClicked = this.uploadClicked.bind(this);\n    this.onSelectFile = this.onSelectFile.bind(this);\n  }\n\n  uploadClicked(e) {\n    this.refs.fileUploader.click();\n  }\n\n  onSelectFile(e) {\n    e.stopPropagation();\n    e.preventDefault();\n    var file = e.target.files[0];\n    this.setState({\n      uploadedFile: file\n    });\n    const schema = {\n      'First Name': {\n        prop: 'firstName',\n        type: String,\n        required: true\n      },\n      'Last Name': {\n        prop: 'lastName',\n        type: String,\n        required: true\n      },\n      'Email': {\n        prop: 'email',\n        type: String,\n        required: true\n      }\n    };\n    readXlsxFile(file, {\n      schema\n    }).then(({\n      rows,\n      errors\n    }) => {});\n  }\n\n  downloadClicked(e) {\n    window.location.href = `${process.env.PUBLIC_URL}/studentList.xlsx`;\n  }\n\n  deleteClicked(e) {}\n\n  cancelClick(e) {}\n\n  saveClick(e) {}\n\n  render() {\n    const hideGrid = {\n      marginTop: 20\n    };\n    const FileName = /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }\n    }, \"FileName\"));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"grid\",\n      style: {\n        paddingTop: 20\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"columns large-6\",\n      style: hideGrid,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      style: {\n        marginLeft: 10\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        fontSize: 16\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 29\n      }\n    }, \"Upload Students information from an excel file (.XLS or .XLSX). Files must adhere to the format shown to the right.\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      style: {\n        marginTop: 30,\n        marginLeft: 10\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 25\n      }\n    }, this.state.uploadedFile === null ? null : /*#__PURE__*/React.createElement(\"fileName\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 72\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"file\",\n      id: \"file\",\n      ref: \"fileUploader\",\n      style: {\n        display: \"none\"\n      },\n      onChange: this.onSelectFile,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      children: \"Upload from File\",\n      color: \"blue\",\n      onClick: this.uploadClicked,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      children: \"Download Template\",\n      color: \"blue-outline\",\n      onClick: this.downloadClicked,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 31\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"columns large-6\",\n      style: hideGrid,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      alt: \"fileImageHolder\",\n      src: \"fileImageHolder.png\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      style: {\n        marginTop: 40,\n        marginLeft: 10\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"large-2 columns\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      children: \"Back\",\n      color: \"blue-outline\",\n      onClick: this.cancelClick,\n      style: {\n        color: 'blue',\n        borderRadius: 5\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"large-2 columns\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      children: \"Save and Continue\",\n      color: \"blue\",\n      onClick: this.saveClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 25\n      }\n    }))));\n  }\n\n}\n\nexport default FileUpload;","map":{"version":3,"sources":["/Users/pratison/Work/Cisco/Education/React/education-webex/src/pages/FileUpload.js"],"names":["React","Button","readXlsxFile","FileUpload","Component","constructor","state","uploadedFile","uploadClicked","bind","onSelectFile","e","refs","fileUploader","click","stopPropagation","preventDefault","file","target","files","setState","schema","prop","type","String","required","then","rows","errors","downloadClicked","window","location","href","process","env","PUBLIC_URL","deleteClicked","cancelClick","saveClick","render","hideGrid","marginTop","FileName","paddingTop","marginLeft","fontSize","display","color","borderRadius"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Button } from '@momentum-ui/react';\nimport readXlsxFile from 'read-excel-file'\n\nclass FileUpload extends React.Component {\n    constructor() {\n        super();\n\n        this.state = {\n            uploadedFile: null,\n        }\n        this.uploadClicked = this.uploadClicked.bind(this);\n        this.onSelectFile = this.onSelectFile.bind(this);\n    }\n\n    uploadClicked(e) {\n        this.refs.fileUploader.click();\n    }\n\n    onSelectFile(e) {\n        e.stopPropagation();\n        e.preventDefault();\n        var file = e.target.files[0];\n        this.setState({\n            uploadedFile: file\n        });\n        const schema = {\n                        'First Name': {\n                            prop: 'firstName',\n                            type: String,\n                            required: true\n                        },\n                        'Last Name': {\n                            prop: 'lastName',\n                            type: String,\n                            required: true\n                        },\n                        'Email': {\n                            prop: 'email',\n                            type: String,\n                            required: true\n                        },\n                    }\n\n        readXlsxFile(file, { schema }).then(({ rows, errors }) => {\n        })\n    }\n\n    downloadClicked(e) {\n        window.location.href=`${process.env.PUBLIC_URL}/studentList.xlsx`;\n    }\n\n    deleteClicked(e) {\n\n    }\n\n    cancelClick(e) {\n\n    }\n\n    saveClick(e) {\n\n    }\n\n    render() {\n        const hideGrid = {\n            marginTop: 20\n        };\n\n        const FileName = (\n            <div>\n                <p>FileName</p>\n            </div>\n        )\n        return (\n            <div className=\"grid\" style={{paddingTop:20}}>\n                <div className=\"row\">\n                    <div className=\"columns large-6\" style={hideGrid}>\n                        <div className=\"row\" style={{marginLeft: 10}}>\n                            <p style={{fontSize:16}}>Upload Students information from an excel file (.XLS or .XLSX). Files\n                            must adhere to the format shown to the right.</p>\n                        </div>\n                        <div className=\"row\" style={{marginTop: 30, marginLeft: 10}}>\n                            {this.state.uploadedFile === null ? null : <fileName/>}\n                            <input type=\"file\" id=\"file\" ref=\"fileUploader\" style={{display: \"none\"}} onChange={this.onSelectFile}/>\n                            <Button\n                                children='Upload from File'\n                                color='blue'\n                                onClick={this.uploadClicked}\n                              />\n                              <Button\n                                  children='Download Template'\n                                  color='blue-outline'\n                                  onClick={this.downloadClicked}\n                                />\n                         </div>\n                    </div>\n                    <div className=\"columns large-6\" style={hideGrid}>\n                        <img  alt=\"fileImageHolder\" src=\"fileImageHolder.png\"/>\n                    </div>\n                </div>\n                <div className=\"row\" style={{marginTop:40, marginLeft:10}}>\n                    <div className=\"large-2 columns\">\n                        <Button\n                            children='Back'\n                            color='blue-outline'\n                            onClick={this.cancelClick}\n                            style={{color:'blue',borderRadius:5}}\n                          />\n                    </div>\n                    <div className=\"large-2 columns\">\n                        <Button\n                            children='Save and Continue'\n                            color='blue'\n                            onClick={this.saveClick}\n                          />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default FileUpload;\n"]},"metadata":{},"sourceType":"module"}