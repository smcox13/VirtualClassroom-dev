{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _slicedToArray2 = require('babel-runtime/helpers/slicedToArray');\n\nvar _slicedToArray3 = _interopRequireDefault(_slicedToArray2);\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _promise = require('babel-runtime/core-js/promise');\n\nvar _promise2 = _interopRequireDefault(_promise);\n\nvar _isEmpty2 = require('lodash/isEmpty');\n\nvar _isEmpty3 = _interopRequireDefault(_isEmpty2);\n\nvar _util = require('../stats/util');\n\nvar _util2 = _interopRequireDefault(_util);\n\nvar _metrics = require('../metrics');\n\nvar _metrics2 = _interopRequireDefault(_metrics);\n\nvar _config = require('../metrics/config');\n\nvar _media = require('../media');\n\nvar _media2 = _interopRequireDefault(_media);\n\nvar _loggerProxy = require('../common/logs/logger-proxy');\n\nvar _loggerProxy2 = _interopRequireDefault(_loggerProxy);\n\nvar _index = require('../stats/index');\n\nvar _index2 = _interopRequireDefault(_index);\n\nvar _constants = require('../constants');\n\nvar _intentToJoin = require('../common/errors/intent-to-join');\n\nvar _intentToJoin2 = _interopRequireDefault(_intentToJoin);\n\nvar _joinMeeting = require('../common/errors/join-meeting');\n\nvar _joinMeeting2 = _interopRequireDefault(_joinMeeting);\n\nvar _parameter = require('../common/errors/parameter');\n\nvar _parameter2 = _interopRequireDefault(_parameter);\n\nvar _permission = require('../common/errors/permission');\n\nvar _permission2 = _interopRequireDefault(_permission);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar MeetingUtil = {};\n\nMeetingUtil.parseLocusJoin = function (response) {\n  var parsed = {}; // First todo: add check for existance\n\n  parsed.locus = response.body.locus;\n  parsed.mediaConnections = response.body.mediaConnections;\n  parsed.locusUrl = parsed.locus.url;\n  parsed.locusId = parsed.locus.url.split('/').pop();\n  parsed.selfId = parsed.locus.self.id; // we need mediaId before making roap calls\n\n  parsed.mediaConnections.forEach(function (mediaConnection) {\n    if (mediaConnection.mediaId) {\n      parsed.mediaId = mediaConnection.mediaId;\n    }\n  });\n  return parsed;\n};\n\nMeetingUtil.remoteUpdateAudioVideo = function (audioMuted, videoMuted, meeting) {\n  if (!meeting) {\n    return _promise2.default.reject(new _parameter2.default('You need a meeting object.'));\n  }\n\n  var localMedias = _media2.default.generateLocalMedias(meeting.mediaId, audioMuted, videoMuted);\n\n  if ((0, _isEmpty3.default)(localMedias)) {\n    return _promise2.default.reject(new _parameter2.default('You need a media id on the meeting to change remote audio.'));\n  }\n\n  _metrics2.default.postEvent({\n    event: _config.eventType.MEDIA_REQUEST,\n    meeting: meeting\n  });\n\n  return meeting.meetingRequest.remoteAudioVideoToggle({\n    locusUrl: meeting.locusUrl,\n    selfId: meeting.selfId,\n    localMedias: localMedias,\n    deviceUrl: meeting.deviceUrl,\n    correlationId: meeting.correlationId\n  }).then(function (response) {\n    _metrics2.default.postEvent({\n      event: _config.eventType.MEDIA_RESPONSE,\n      meeting: meeting\n    });\n\n    meeting.locusInfo.onFullLocus(response.body.locus);\n  });\n};\n\nMeetingUtil.checkShare = function (meeting) {\n  if (meeting.wirelessShare && meeting.isSharing || meeting.isSharing) {\n    return meeting.stopShare();\n  }\n\n  return _promise2.default.resolve();\n}; // TODO: have locus ignore hostPin if they find out it's my claimed PMR\n\n/*\nfor my claimed PMR\npassing an \"undefined\" hostPin was causing the issue.\nif I don't include hostPin in the first request, locus figures out it's my PMR\nand sends a 200 after the first request\nso we must clean up the hostPin to stop the double request\n*/\n\n\nMeetingUtil.cleanOptions = function (options, info, owner, userId) {\n  if (MeetingUtil.hasOwner(info)) {\n    if (MeetingUtil.isOwnerSelf(owner, userId)) {\n      if (options.hostPin) {\n        delete options.hostPin;\n      }\n\n      options.moderator = _constants.MODERATOR_TRUE;\n    } else {\n      options.moderator = _constants.MODERATOR_FALSE;\n    }\n  }\n\n  return options;\n};\n\nMeetingUtil.hasOwner = function (info) {\n  return info && info.owner;\n};\n\nMeetingUtil.isOwnerSelf = function (owner, selfId) {\n  return owner === selfId;\n};\n\nMeetingUtil.isPinOrGuest = function (err) {\n  if (err && err.body && err.body.errorCode === _constants.INTENT_TO_JOIN) {\n    return true;\n  }\n\n  return false;\n};\n\nMeetingUtil.joinMeeting = function (meeting, options) {\n  if (!meeting) {\n    return _promise2.default.reject(new _parameter2.default('You need a meeting object.'));\n  }\n\n  _metrics2.default.postEvent({\n    event: _config.eventType.LOCAL_JOIN_REQUEST,\n    meeting: meeting\n  }); // eslint-disable-next-line no-warning-comments\n  // TODO: check if the meeting is in JOINING state\n  // if Joining state termintate the request as user might click multiple times\n\n\n  return meeting.meetingRequest.joinMeeting({\n    sipUri: meeting.sipUri,\n    deviceUrl: meeting.deviceUrl,\n    locusUrl: meeting.locusUrl,\n    correlationId: meeting.id,\n    roapMessage: options.roapMessage,\n    resourceId: options.resourceId || null,\n    moderator: options.moderator,\n    hostPin: options.hostPin,\n    moveToResource: options.moveToResource\n  }).then(function (res) {\n    _metrics2.default.postEvent({\n      event: _config.eventType.LOCUS_JOIN_RESPONSE,\n      meeting: meeting,\n      data: {\n        trigger: _config.trigger.LOCI_UPDATE,\n        locus: res.body.locus,\n        trackingId: res.headers.trackingid\n      }\n    });\n\n    return MeetingUtil.parseLocusJoin(res);\n  });\n};\n\nMeetingUtil.cleanUp = function (meeting) {\n  return meeting.closeLocalStream().then(function () {\n    return meeting.closeLocalShare();\n  }).then(function () {\n    return meeting.closePeerConnections();\n  }).then(function () {\n    meeting.unsetLocalVideoTrack();\n    meeting.unsetLocalShareTrack();\n    meeting.unsetRemoteStream();\n    meeting.unsetPeerConnections();\n    meeting.cleanMQAInterval();\n  }).then(function () {\n    return meeting.roap.stop(meeting.correlationId, meeting.roapSeq);\n  });\n}; // by default will leave on meeting's resourceId\n// if you explicity want it not to leave on resource id, pass\n// {resourceId: null}\n// TODO: chris, you can modify this however you want\n\n\nMeetingUtil.leaveMeeting = function (meeting) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var defaultOptions = {\n    locusUrl: meeting.locusUrl,\n    selfId: meeting.selfId,\n    correlationId: meeting.correlationId,\n    resourceId: meeting.resourceId,\n    deviceUrl: meeting.deviceUrl\n  };\n  var leaveOptions = (0, _extends3.default)({}, defaultOptions, options);\n  return meeting.meetingRequest.leaveMeeting(leaveOptions).then(function (response) {\n    if (response && response.body && response.body.locus) {\n      // && !options.moveMeeting) {\n      meeting.locusInfo.onFullLocus(response.body.locus);\n    }\n\n    return _promise2.default.resolve();\n  }).then(function () {\n    if (options.moveMeeting) {\n      return _promise2.default.resolve();\n    }\n\n    return MeetingUtil.cleanUp(meeting);\n  }).catch(function (err) {\n    _loggerProxy2.default.logger.error('MeetingUtil->leaveMeeting#An error occured while trying to leave meeting with an id of ' + meeting.id + ', error: ' + err);\n\n    return _promise2.default.reject(err);\n  });\n};\n\nMeetingUtil.declineMeeting = function (meeting, reason) {\n  return meeting.meetingRequest.declineMeeting({\n    locusUrl: meeting.locusUrl,\n    deviceUrl: meeting.deviceUrl,\n    reason: reason\n  });\n};\n\nMeetingUtil.isGuestUnjoined = function (locusInfo) {\n  return locusInfo.parsedLocus && locusInfo.parsedLocus.self && locusInfo.parsedLocus.self.guest && locusInfo.parsedLocus.self.state !== _constants._JOINED_;\n};\n\nMeetingUtil.joinMeetingOptions = function (meeting) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  meeting.resourceId = meeting.resourceId || options.resourceId;\n  meeting.setCorrelationId(meeting.id); // TODO: this should be removed following locus changes.\n\n  options = MeetingUtil.cleanOptions(options, meeting.meetingInfo, meeting.owner, meeting.userId);\n\n  if (options.hostPin) {\n    _metrics2.default.postEvent({\n      event: _config.eventType.PIN_COLLECTED,\n      meeting: meeting\n    });\n  } // normal join meeting, scenario A, D\n\n\n  return MeetingUtil.joinMeeting(meeting, options).then(function (response) {\n    meeting.setLocus(response);\n    return _promise2.default.resolve(response);\n  }).catch(function (err) {\n    // joining a claimed PMR that is not my own, scenario B\n    if (MeetingUtil.isPinOrGuest(err)) {\n      if (MeetingUtil.hasOwner(meeting.meetingInfo)) {\n        return MeetingUtil.joinMeeting(meeting, options).then(function (response) {\n          meeting.setLocus(response);\n          return _promise2.default.resolve();\n        });\n      }\n\n      _metrics2.default.postEvent({\n        event: _config.eventType.PIN_PROMPT,\n        meeting: meeting\n      }); // request host pin or non host for unclaimed PMR, start of Scenario C\n      // see https://sqbu-github.cisco.com/WebExSquared/locus/wiki/Locus-Lobby-and--IVR-Feature\n\n\n      return _promise2.default.reject(new _intentToJoin2.default('Error Joining Meeting', err));\n    }\n\n    _loggerProxy2.default.logger.log('Meeting:index#join --> Error joining the call, ', err);\n\n    return _promise2.default.reject(new _joinMeeting2.default(options, 'Error Joining Meeting', err));\n  });\n};\n\nMeetingUtil.updateTransceiver = function (options, meetingOptions) {\n  var type = options.type,\n      sendTrack = options.sendTrack,\n      receiveTrack = options.receiveTrack,\n      track = options.track,\n      transceiver = options.transceiver,\n      peerConnection = options.peerConnection,\n      previousMediaDirection = options.previousMediaDirection;\n\n  if (sendTrack !== undefined && sendTrack !== previousMediaDirection.sendTrack || receiveTrack !== undefined && receiveTrack !== previousMediaDirection.receiveTrack) {\n    return _media2.default.updateTransceiver(meetingOptions.id, peerConnection, transceiver, {\n      track: track,\n      type: type,\n      receiveTrack: receiveTrack,\n      sendTrack: sendTrack\n    }).then(function () {\n      return meetingOptions.meeting.roap.sendRoapMediaRequest({\n        sdp: meetingOptions.mediaProperties.peerConnection.sdp,\n        roapSeq: meetingOptions.roapSeq,\n        meeting: meetingOptions.meeting // or can pass meeting ID\n\n      });\n    }).catch(function (e) {\n      _loggerProxy2.default.logger.error('Meeting:index->updateTransceiver#Error updating the ' + type + ' streams with error: ' + e);\n    });\n  }\n\n  if (track) {\n    transceiver.sender.replaceTrack(track);\n    return _promise2.default.resolve();\n  }\n\n  return _promise2.default.reject(new _parameter2.default('update Failed: please pass valid parameter'));\n};\n\nMeetingUtil.validateOptions = function (options) {\n  var sendVideo = options.sendVideo,\n      sendAudio = options.sendAudio,\n      sendShare = options.sendShare,\n      localStream = options.localStream,\n      localShare = options.localShare;\n\n  if (sendVideo && !MeetingUtil.getTrack(localStream).videoTrack) {\n    return _promise2.default.reject(new _parameter2.default('please pass valid video streams'));\n  }\n\n  if (sendAudio && !MeetingUtil.getTrack(localStream).audioTrack) {\n    return _promise2.default.reject(new _parameter2.default('please pass valid audio streams'));\n  }\n\n  if (sendShare && !MeetingUtil.getTrack(localShare).videoTrack) {\n    return _promise2.default.reject(new _parameter2.default('please pass valid share streams'));\n  }\n\n  return _promise2.default.resolve();\n};\n\nMeetingUtil.getTrack = function (stream) {\n  var audioTrack = null;\n  var videoTrack = null;\n  var audioTracks = null;\n  var videoTracks = null;\n\n  if (!stream) {\n    return {\n      audioTrack: null,\n      videoTrack: null\n    };\n  }\n\n  if (stream.getAudioTracks) {\n    audioTracks = stream.getAudioTracks();\n  }\n\n  if (stream.getVideoTracks) {\n    videoTracks = stream.getVideoTracks();\n  }\n\n  if (audioTracks && audioTracks.length > 0) {\n    var _audioTracks = audioTracks;\n\n    var _audioTracks2 = (0, _slicedToArray3.default)(_audioTracks, 1);\n\n    audioTrack = _audioTracks2[0];\n  }\n\n  if (videoTracks && videoTracks.length > 0) {\n    var _videoTracks = videoTracks;\n\n    var _videoTracks2 = (0, _slicedToArray3.default)(_videoTracks, 1);\n\n    videoTrack = _videoTracks2[0];\n  }\n\n  return {\n    audioTrack: audioTrack,\n    videoTrack: videoTrack\n  };\n};\n\nMeetingUtil.getModeratorFromLocusInfo = function (locusInfo) {\n  return locusInfo && locusInfo.parsedLocus && locusInfo.parsedLocus.info && locusInfo.parsedLocus.info && locusInfo.parsedLocus.info.moderator;\n};\n\nMeetingUtil.getPolicyFromLocusInfo = function (locusInfo) {\n  return locusInfo && locusInfo.parsedLocus && locusInfo.parsedLocus.info && locusInfo.parsedLocus.info && locusInfo.parsedLocus.info.policy;\n};\n\nMeetingUtil.canUserLock = function (moderator, joined) {\n  if (moderator.LOCK_CONTROL_LOCK && joined.LOCK_STATUS_UNLOCKED) {\n    return true;\n  }\n\n  return false;\n};\n\nMeetingUtil.canUserUnlock = function (moderator, joined) {\n  if (moderator.LOCK_CONTROL_UNLOCK && joined.LOCK_STATUS_LOCKED) {\n    return true;\n  }\n\n  return false;\n};\n\nMeetingUtil.canUserRecord = function (moderator) {\n  return moderator.RECORDING_CONTROL_START;\n};\n\nMeetingUtil.canUserPause = function (moderator) {\n  return moderator.RECORDING_CONTROL_PAUSE;\n};\n\nMeetingUtil.canUserResume = function (moderator) {\n  return moderator.RECORDING_CONTROL_RESUME;\n};\n\nMeetingUtil.canUserStop = function (moderator) {\n  return moderator.RECORDING_CONTROL_STOP;\n};\n\nMeetingUtil.startRecording = function (request, locusUrl, locusInfo) {\n  var moderator = MeetingUtil.getModeratorFromLocusInfo(locusInfo);\n\n  if (moderator && MeetingUtil.canUserRecord(moderator)) {\n    return request.recordMeeting({\n      locusUrl: locusUrl,\n      recording: true,\n      paused: false\n    });\n  }\n\n  return _promise2.default.reject(new _permission2.default('Start recording not allowed, due to moderator property.'));\n};\n\nMeetingUtil.pauseRecording = function (request, locusUrl, locusInfo) {\n  var moderator = MeetingUtil.getModeratorFromLocusInfo(locusInfo);\n\n  if (moderator && MeetingUtil.canUserPause(moderator)) {\n    return request.recordMeeting({\n      locusUrl: locusUrl,\n      recording: true,\n      paused: true\n    });\n  }\n\n  return _promise2.default.reject(new _permission2.default('Pause recording not allowed, due to moderator property.'));\n};\n\nMeetingUtil.resumeRecording = function (request, locusUrl, locusInfo) {\n  var moderator = MeetingUtil.getModeratorFromLocusInfo(locusInfo);\n\n  if (moderator && MeetingUtil.canUserResume(moderator)) {\n    return request.recordMeeting({\n      locusUrl: locusUrl,\n      recording: true,\n      paused: false\n    });\n  }\n\n  return _promise2.default.reject(new _permission2.default('Resume recording not allowed, due to moderator property.'));\n};\n\nMeetingUtil.stopRecording = function (request, locusUrl, locusInfo) {\n  var moderator = MeetingUtil.getModeratorFromLocusInfo(locusInfo);\n\n  if (moderator && MeetingUtil.canUserStop(moderator)) {\n    return request.recordMeeting({\n      locusUrl: locusUrl,\n      recording: false,\n      paused: false\n    });\n  }\n\n  return _promise2.default.reject(new _permission2.default('Stop recording not allowed, due to moderator property.'));\n};\n\nMeetingUtil.lockMeeting = function (actions, request, locusUrl) {\n  if (actions && actions.canLock) {\n    return request.lockMeeting({\n      locusUrl: locusUrl,\n      lock: true\n    });\n  }\n\n  return _promise2.default.reject(new _permission2.default('Lock not allowed, due to joined property.'));\n};\n\nMeetingUtil.unlockMeeting = function (actions, request, locusUrl) {\n  if (actions && actions.canUnlock) {\n    return request.lockMeeting({\n      locusUrl: locusUrl,\n      lock: false\n    });\n  }\n\n  return _promise2.default.reject(new _permission2.default('Unlock not allowed, due to joined property.'));\n};\n\nMeetingUtil.startInternalStats = function (meeting) {\n  if (!meeting.internalStats) {\n    var options = {\n      useConfig: true,\n      senders: [{\n        id: 'mainAudio',\n        correlate: 'audio',\n        history: true,\n        onEvent: function onEvent(event) {\n          // TODO: we don't need checks like this since it comes from the transceiver\n          // refactor event linkage to use callbacks instead of events\n          if (event.kind === 'audio' && event.stat === 'bytesSent') {\n            _metrics2.default.postEvent({\n              event: _config.eventType.SENDING_MEDIA_START,\n              meeting: meeting,\n              data: {\n                mediaType: _config.mediaType.AUDIO\n              }\n            });\n          } else if (event.stop && event.stat === 'bytesSent') {\n            _metrics2.default.postEvent({\n              event: _config.eventType.SENDING_MEDIA_STOP,\n              meeting: meeting,\n              data: {\n                mediaType: _config.mediaType.AUDIO\n              }\n            });\n          }\n        },\n        onData: function onData() {}\n      }, {\n        id: 'mainVideo',\n        correlate: 'video',\n        history: true,\n        onEvent: function onEvent(event) {\n          if (event.kind === 'video' && event.stat === 'bytesSent') {\n            _metrics2.default.postEvent({\n              event: _config.eventType.SENDING_MEDIA_START,\n              meeting: meeting,\n              data: {\n                mediaType: _config.mediaType.VIDEO\n              }\n            });\n          } else if (event.stop && event.stat === 'bytesSent') {\n            _metrics2.default.postEvent({\n              event: _config.eventType.SENDING_MEDIA_STOP,\n              meeting: meeting,\n              data: {\n                mediaType: _config.mediaType.VIDEO\n              }\n            });\n          }\n        },\n        onData: function onData() {}\n      }, {\n        id: 'mainShare',\n        correlate: 'video',\n        onData: function onData() {}\n      }],\n      receivers: [{\n        id: 'mainAudio',\n        correlate: 'audio',\n        history: true,\n        onEvent: function onEvent(event) {\n          if (event.kind === 'audio' && event.stat === 'bytesReceived') {\n            _metrics2.default.postEvent({\n              event: _config.eventType.RECEIVING_MEDIA_START,\n              meeting: meeting,\n              data: {\n                mediaType: _config.mediaType.AUDIO\n              }\n            });\n          } else if (event.stop && event.stat === 'bytesReceived') {\n            _metrics2.default.postEvent({\n              event: _config.eventType.RECEIVING_MEDIA_STOP,\n              meeting: meeting,\n              data: {\n                mediaType: _config.mediaType.AUDIO\n              }\n            });\n          }\n        },\n        onData: function onData() {}\n      }, {\n        id: 'mainVideo',\n        correlate: 'video',\n        history: true,\n        onEvent: function onEvent(event) {\n          if (event.kind === 'video' && event.stat === 'bytesReceived') {\n            _metrics2.default.postEvent({\n              event: _config.eventType.RECEIVING_MEDIA_START,\n              meeting: meeting,\n              data: {\n                mediaType: _config.mediaType.VIDEO\n              }\n            });\n          } else if (event.stop && event.stat === 'bytesReceived') {\n            _metrics2.default.postEvent({\n              event: _config.eventType.RECEIVING_MEDIA_STOP,\n              meeting: meeting,\n              data: {\n                mediaType: _config.mediaType.VIDEO\n              }\n            });\n          }\n        },\n        onData: function onData() {}\n      }, {\n        id: 'mainShare',\n        correlate: 'video',\n        onData: function onData() {}\n      }]\n    };\n\n    _util2.default.generateOptions(options, _constants.STATS.CONFIG, meeting);\n\n    options.config = _constants.STATS.CONFIG; // pass the attrs and options for the webex instance\n\n    meeting.internalStats = new _index2.default(meeting.attrs, meeting.options, options);\n  }\n\n  return meeting.internalStats;\n};\n\nMeetingUtil.setPeerConnectionEvents = function (meeting) {\n  // In case ICE fail\n  var peerConnection = meeting.mediaProperties.peerConnection;\n\n  peerConnection.oniceconnectionstatechange = function () {\n    switch (peerConnection.iceConnectionState) {\n      case _constants.ICE_STATE.CHECKING:\n        _metrics2.default.postEvent({\n          event: _config.eventType.ICE_START,\n          meeting: meeting\n        });\n\n        break;\n\n      case _constants.ICE_STATE.COMPLETED:\n        _metrics2.default.postEvent({\n          event: _config.eventType.ICE_END,\n          meeting: meeting\n        });\n\n        break;\n\n      case _constants.ICE_STATE.CONNECTED:\n        break;\n\n      case _constants.ICE_STATE.CLOSED:\n        break;\n\n      case _constants.ICE_STATE.DISCONNECTED:\n        break;\n\n      case _constants.ICE_STATE.FAILED:\n        // notify of ice failure\n        _metrics2.default.postEvent({\n          event: _config.eventType.ICE_END,\n          meeting: meeting,\n          data: {\n            canProceed: false,\n            errors: [_metrics2.default.generateErrorPayload(2004, false, _config.error.name.MEDIA_ENGINE)]\n          }\n        });\n\n        break;\n\n      default:\n        break;\n    }\n  };\n};\n\nexports.default = MeetingUtil;","map":{"version":3,"sources":["util.js"],"names":["MeetingUtil","parsed","response","mediaConnection","ParameterError","localMedias","Media","meeting","Metrics","event","eventType","locusUrl","selfId","deviceUrl","correlationId","options","MODERATOR_TRUE","MODERATOR_FALSE","info","owner","err","INTENT_TO_JOIN","sipUri","roapMessage","resourceId","moderator","hostPin","moveToResource","data","trigger","locus","res","trackingId","trackingid","defaultOptions","leaveOptions","LoggerProxy","reason","locusInfo","_JOINED_","IntentToJoinError","JoinMeetingError","type","sendTrack","receiveTrack","track","transceiver","peerConnection","previousMediaDirection","meetingOptions","sdp","roapSeq","sendVideo","sendAudio","sendShare","localStream","localShare","audioTrack","videoTrack","audioTracks","videoTracks","stream","joined","request","recording","paused","PermissionError","actions","lock","useConfig","senders","id","correlate","history","onEvent","mediaType","AUDIO","onData","VIDEO","receivers","StatsUtil","STATS","WebRTCStats","ICE_STATE","canProceed","errors","error"],"mappings":"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","sourcesContent":["import {isEmpty} from 'lodash';\n\nimport StatsUtil from '../stats/util';\nimport Metrics from '../metrics';\nimport {eventType, trigger, mediaType, error} from '../metrics/config';\nimport Media from '../media';\nimport LoggerProxy from '../common/logs/logger-proxy';\nimport WebRTCStats from '../stats/index';\nimport {\n  INTENT_TO_JOIN,\n  MODERATOR_TRUE,\n  MODERATOR_FALSE,\n  _JOINED_,\n  ICE_STATE,\n  STATS\n} from '../constants';\nimport IntentToJoinError from '../common/errors/intent-to-join';\nimport JoinMeetingError from '../common/errors/join-meeting';\nimport ParameterError from '../common/errors/parameter';\nimport PermissionError from '../common/errors/permission';\n\nconst MeetingUtil = {};\n\nMeetingUtil.parseLocusJoin = (response) => {\n  const parsed = {};\n\n  // First todo: add check for existance\n  parsed.locus = response.body.locus;\n  parsed.mediaConnections = response.body.mediaConnections;\n  parsed.locusUrl = parsed.locus.url;\n  parsed.locusId = parsed.locus.url.split('/').pop();\n  parsed.selfId = parsed.locus.self.id;\n\n  // we need mediaId before making roap calls\n  parsed.mediaConnections.forEach((mediaConnection) => {\n    if (mediaConnection.mediaId) {\n      parsed.mediaId = mediaConnection.mediaId;\n    }\n  });\n\n  return parsed;\n};\n\nMeetingUtil.remoteUpdateAudioVideo = (audioMuted, videoMuted, meeting) => {\n  if (!meeting) {\n    return Promise.reject(new ParameterError('You need a meeting object.'));\n  }\n  const localMedias = Media.generateLocalMedias(meeting.mediaId, audioMuted, videoMuted);\n\n  if (isEmpty(localMedias)) {\n    return Promise.reject(new ParameterError('You need a media id on the meeting to change remote audio.'));\n  }\n\n  Metrics.postEvent({event: eventType.MEDIA_REQUEST, meeting});\n\n  return meeting.meetingRequest.remoteAudioVideoToggle({\n    locusUrl: meeting.locusUrl,\n    selfId: meeting.selfId,\n    localMedias,\n    deviceUrl: meeting.deviceUrl,\n    correlationId: meeting.correlationId\n  }).then((response) => {\n    Metrics.postEvent({event: eventType.MEDIA_RESPONSE, meeting});\n    meeting.locusInfo.onFullLocus(response.body.locus);\n  });\n};\n\nMeetingUtil.checkShare = (meeting) => {\n  if ((meeting.wirelessShare && meeting.isSharing) || meeting.isSharing) {\n    return meeting.stopShare();\n  }\n\n  return Promise.resolve();\n};\n\n// TODO: have locus ignore hostPin if they find out it's my claimed PMR\n/*\nfor my claimed PMR\npassing an \"undefined\" hostPin was causing the issue.\nif I don't include hostPin in the first request, locus figures out it's my PMR\nand sends a 200 after the first request\nso we must clean up the hostPin to stop the double request\n*/\nMeetingUtil.cleanOptions = (options, info, owner, userId) => {\n  if (MeetingUtil.hasOwner(info)) {\n    if (MeetingUtil.isOwnerSelf(owner, userId)) {\n      if (options.hostPin) {\n        delete options.hostPin;\n      }\n      options.moderator = MODERATOR_TRUE;\n    }\n    else {\n      options.moderator = MODERATOR_FALSE;\n    }\n  }\n\n  return options;\n};\n\nMeetingUtil.hasOwner = (info) => info && info.owner;\n\nMeetingUtil.isOwnerSelf = (owner, selfId) => owner === selfId;\n\nMeetingUtil.isPinOrGuest = (err) => {\n  if (err && err.body && err.body.errorCode === INTENT_TO_JOIN) {\n    return true;\n  }\n\n  return false;\n};\n\nMeetingUtil.joinMeeting = (meeting, options) => {\n  if (!meeting) {\n    return Promise.reject(new ParameterError('You need a meeting object.'));\n  }\n\n  Metrics.postEvent({event: eventType.LOCAL_JOIN_REQUEST, meeting});\n\n  // eslint-disable-next-line no-warning-comments\n  // TODO: check if the meeting is in JOINING state\n  // if Joining state termintate the request as user might click multiple times\n  return meeting.meetingRequest\n    .joinMeeting({\n      sipUri: meeting.sipUri,\n      deviceUrl: meeting.deviceUrl,\n      locusUrl: meeting.locusUrl,\n      correlationId: meeting.id,\n      roapMessage: options.roapMessage,\n      resourceId: options.resourceId || null,\n      moderator: options.moderator,\n      hostPin: options.hostPin,\n      moveToResource: options.moveToResource\n    })\n    .then((res) => {\n      Metrics.postEvent({\n        event: eventType.LOCUS_JOIN_RESPONSE,\n        meeting,\n        data: {\n          trigger: trigger.LOCI_UPDATE,\n          locus: res.body.locus,\n          trackingId: res.headers.trackingid\n        }\n      });\n\n      return MeetingUtil.parseLocusJoin(res);\n    });\n};\n\nMeetingUtil.cleanUp = (meeting) => meeting.closeLocalStream()\n  .then(() => meeting.closeLocalShare())\n  .then(() => meeting.closePeerConnections())\n  .then(() => {\n    meeting.unsetLocalVideoTrack();\n    meeting.unsetLocalShareTrack();\n    meeting.unsetRemoteStream();\n    meeting.unsetPeerConnections();\n    meeting.cleanMQAInterval();\n  })\n  .then(() => meeting.roap.stop(meeting.correlationId, meeting.roapSeq));\n\n// by default will leave on meeting's resourceId\n// if you explicity want it not to leave on resource id, pass\n// {resourceId: null}\n// TODO: chris, you can modify this however you want\nMeetingUtil.leaveMeeting = (meeting, options = {}) => {\n  const defaultOptions = {\n    locusUrl: meeting.locusUrl,\n    selfId: meeting.selfId,\n    correlationId: meeting.correlationId,\n    resourceId: meeting.resourceId,\n    deviceUrl: meeting.deviceUrl\n  };\n\n  const leaveOptions = {...defaultOptions, ...options};\n\n  return meeting.meetingRequest\n    .leaveMeeting(leaveOptions)\n    .then((response) => {\n      if (response && response.body && response.body.locus) { // && !options.moveMeeting) {\n        meeting.locusInfo.onFullLocus(response.body.locus);\n      }\n\n      return Promise.resolve();\n    })\n    .then(() => {\n      if (options.moveMeeting) {\n        return Promise.resolve();\n      }\n\n      return MeetingUtil.cleanUp(meeting);\n    })\n    .catch((err) => {\n      LoggerProxy.logger.error(\n        `MeetingUtil->leaveMeeting#An error occured while trying to leave meeting with an id of ${\n          meeting.id\n        }, error: ${err}`\n      );\n\n      return Promise.reject(err);\n    });\n};\nMeetingUtil.declineMeeting = (meeting, reason) =>\n  meeting.meetingRequest.declineMeeting({\n    locusUrl: meeting.locusUrl,\n    deviceUrl: meeting.deviceUrl,\n    reason\n  });\n\nMeetingUtil.isGuestUnjoined = (locusInfo) =>\n  locusInfo.parsedLocus && locusInfo.parsedLocus.self && locusInfo.parsedLocus.self.guest && locusInfo.parsedLocus.self.state !== _JOINED_;\n\nMeetingUtil.joinMeetingOptions = (meeting, options = {}) => {\n  meeting.resourceId = meeting.resourceId || options.resourceId;\n  meeting.setCorrelationId(meeting.id);\n  // TODO: this should be removed following locus changes.\n  options = MeetingUtil.cleanOptions(options, meeting.meetingInfo, meeting.owner, meeting.userId);\n\n\n  if (options.hostPin) {\n    Metrics.postEvent({\n      event: eventType.PIN_COLLECTED,\n      meeting\n    });\n  }\n\n  // normal join meeting, scenario A, D\n  return MeetingUtil.joinMeeting(meeting, options)\n    .then((response) => {\n      meeting.setLocus(response);\n\n      return Promise.resolve(response);\n    })\n    .catch((err) => {\n      // joining a claimed PMR that is not my own, scenario B\n      if (MeetingUtil.isPinOrGuest(err)) {\n        if (MeetingUtil.hasOwner(meeting.meetingInfo)) {\n          return MeetingUtil.joinMeeting(meeting, options).then((response) => {\n            meeting.setLocus(response);\n\n            return Promise.resolve();\n          });\n        }\n\n        Metrics.postEvent({\n          event: eventType.PIN_PROMPT,\n          meeting\n        });\n\n        // request host pin or non host for unclaimed PMR, start of Scenario C\n        // see https://sqbu-github.cisco.com/WebExSquared/locus/wiki/Locus-Lobby-and--IVR-Feature\n        return Promise.reject(new IntentToJoinError('Error Joining Meeting', err));\n      }\n      LoggerProxy.logger.log('Meeting:index#join --> Error joining the call, ', err);\n\n      return Promise.reject(new JoinMeetingError(options, 'Error Joining Meeting', err));\n    });\n};\n\nMeetingUtil.updateTransceiver = (options, meetingOptions) => {\n  const {\n    type,\n    sendTrack,\n    receiveTrack,\n    track,\n    transceiver,\n    peerConnection,\n    previousMediaDirection\n  } = options;\n\n  if ((sendTrack !== undefined && sendTrack !== previousMediaDirection.sendTrack) ||\n  (receiveTrack !== undefined && receiveTrack !== previousMediaDirection.receiveTrack)) {\n    return Media.updateTransceiver(meetingOptions.id, peerConnection, transceiver,\n      {\n        track,\n        type,\n        receiveTrack,\n        sendTrack\n      })\n      .then(() => meetingOptions.meeting.roap\n        .sendRoapMediaRequest({\n          sdp: meetingOptions.mediaProperties.peerConnection.sdp,\n          roapSeq: meetingOptions.roapSeq,\n          meeting: meetingOptions.meeting // or can pass meeting ID\n        }))\n      .catch((e) => {\n        LoggerProxy.logger.error(`Meeting:index->updateTransceiver#Error updating the ${type} streams with error: ${e}`);\n      });\n  } if (track) {\n    transceiver.sender.replaceTrack(track);\n\n    return Promise.resolve();\n  }\n\n  return Promise.reject(new ParameterError('update Failed: please pass valid parameter'));\n};\n\nMeetingUtil.validateOptions = (options) => {\n  const {\n    sendVideo, sendAudio, sendShare, localStream, localShare\n  } = options;\n\n  if (sendVideo && !MeetingUtil.getTrack(localStream).videoTrack) {\n    return Promise.reject(new ParameterError('please pass valid video streams'));\n  }\n\n  if (sendAudio && !MeetingUtil.getTrack(localStream).audioTrack) {\n    return Promise.reject(new ParameterError('please pass valid audio streams'));\n  }\n\n  if (sendShare && !MeetingUtil.getTrack(localShare).videoTrack) {\n    return Promise.reject(new ParameterError('please pass valid share streams'));\n  }\n\n  return Promise.resolve();\n};\n\nMeetingUtil.getTrack = (stream) => {\n  let audioTrack = null;\n  let videoTrack = null;\n  let audioTracks = null;\n  let videoTracks = null;\n\n  if (!stream) {\n    return {audioTrack: null, videoTrack: null};\n  }\n  if (stream.getAudioTracks) {\n    audioTracks = stream.getAudioTracks();\n  }\n  if (stream.getVideoTracks) {\n    videoTracks = stream.getVideoTracks();\n  }\n\n  if (audioTracks && audioTracks.length > 0) {\n    [audioTrack] = audioTracks;\n  }\n\n  if (videoTracks && videoTracks.length > 0) {\n    [videoTrack] = videoTracks;\n  }\n\n  return {audioTrack, videoTrack};\n};\n\nMeetingUtil.getModeratorFromLocusInfo = (locusInfo) =>\n  locusInfo &&\n  locusInfo.parsedLocus &&\n  locusInfo.parsedLocus.info &&\n  locusInfo.parsedLocus.info &&\n  locusInfo.parsedLocus.info.moderator;\n\nMeetingUtil.getPolicyFromLocusInfo = (locusInfo) =>\n  locusInfo &&\n  locusInfo.parsedLocus &&\n  locusInfo.parsedLocus.info &&\n  locusInfo.parsedLocus.info &&\n  locusInfo.parsedLocus.info.policy;\n\nMeetingUtil.canUserLock = (moderator, joined) => {\n  if (moderator.LOCK_CONTROL_LOCK && joined.LOCK_STATUS_UNLOCKED) {\n    return true;\n  }\n\n  return false;\n};\n\nMeetingUtil.canUserUnlock = (moderator, joined) => {\n  if (moderator.LOCK_CONTROL_UNLOCK && joined.LOCK_STATUS_LOCKED) {\n    return true;\n  }\n\n  return false;\n};\n\nMeetingUtil.canUserRecord = (moderator) => moderator.RECORDING_CONTROL_START;\n\nMeetingUtil.canUserPause = (moderator) => moderator.RECORDING_CONTROL_PAUSE;\n\nMeetingUtil.canUserResume = (moderator) => moderator.RECORDING_CONTROL_RESUME;\n\nMeetingUtil.canUserStop = (moderator) => moderator.RECORDING_CONTROL_STOP;\n\nMeetingUtil.startRecording = (request, locusUrl, locusInfo) => {\n  const moderator = MeetingUtil.getModeratorFromLocusInfo(locusInfo);\n\n  if (moderator && MeetingUtil.canUserRecord(moderator)) {\n    return request.recordMeeting({locusUrl, recording: true, paused: false});\n  }\n\n  return Promise.reject(new PermissionError('Start recording not allowed, due to moderator property.'));\n};\n\nMeetingUtil.pauseRecording = (request, locusUrl, locusInfo) => {\n  const moderator = MeetingUtil.getModeratorFromLocusInfo(locusInfo);\n\n  if (moderator && MeetingUtil.canUserPause(moderator)) {\n    return request.recordMeeting({locusUrl, recording: true, paused: true});\n  }\n\n  return Promise.reject(new PermissionError('Pause recording not allowed, due to moderator property.'));\n};\n\nMeetingUtil.resumeRecording = (request, locusUrl, locusInfo) => {\n  const moderator = MeetingUtil.getModeratorFromLocusInfo(locusInfo);\n\n  if (moderator && MeetingUtil.canUserResume(moderator)) {\n    return request.recordMeeting({locusUrl, recording: true, paused: false});\n  }\n\n  return Promise.reject(new PermissionError('Resume recording not allowed, due to moderator property.'));\n};\n\nMeetingUtil.stopRecording = (request, locusUrl, locusInfo) => {\n  const moderator = MeetingUtil.getModeratorFromLocusInfo(locusInfo);\n\n  if (moderator && MeetingUtil.canUserStop(moderator)) {\n    return request.recordMeeting({locusUrl, recording: false, paused: false});\n  }\n\n  return Promise.reject(new PermissionError('Stop recording not allowed, due to moderator property.'));\n};\n\nMeetingUtil.lockMeeting = (actions, request, locusUrl) => {\n  if (actions && actions.canLock) {\n    return request.lockMeeting({locusUrl, lock: true});\n  }\n\n  return Promise.reject(new PermissionError('Lock not allowed, due to joined property.'));\n};\n\nMeetingUtil.unlockMeeting = (actions, request, locusUrl) => {\n  if (actions && actions.canUnlock) {\n    return request.lockMeeting({locusUrl, lock: false});\n  }\n\n  return Promise.reject(new PermissionError('Unlock not allowed, due to joined property.'));\n};\n\nMeetingUtil.startInternalStats = (meeting) => {\n  if (!meeting.internalStats) {\n    const options = {\n      useConfig: true,\n      senders: [\n        {\n          id: 'mainAudio',\n          correlate: 'audio',\n          history: true,\n          onEvent: (event) => {\n            // TODO: we don't need checks like this since it comes from the transceiver\n            // refactor event linkage to use callbacks instead of events\n            if (event.kind === 'audio' && event.stat === 'bytesSent') {\n              Metrics.postEvent({\n                event: eventType.SENDING_MEDIA_START,\n                meeting,\n                data: {\n                  mediaType: mediaType.AUDIO\n                }\n              });\n            }\n            else if (event.stop && event.stat === 'bytesSent') {\n              Metrics.postEvent({\n                event: eventType.SENDING_MEDIA_STOP,\n                meeting,\n                data: {\n                  mediaType: mediaType.AUDIO\n                }\n              });\n            }\n          },\n          onData: () => {}\n        },\n        {\n          id: 'mainVideo',\n          correlate: 'video',\n          history: true,\n          onEvent: (event) => {\n            if (event.kind === 'video' && event.stat === 'bytesSent') {\n              Metrics.postEvent({\n                event: eventType.SENDING_MEDIA_START,\n                meeting,\n                data: {\n                  mediaType: mediaType.VIDEO\n                }\n              });\n            }\n            else if (event.stop && event.stat === 'bytesSent') {\n              Metrics.postEvent({\n                event: eventType.SENDING_MEDIA_STOP,\n                meeting,\n                data: {\n                  mediaType: mediaType.VIDEO\n                }\n              });\n            }\n          },\n          onData: () => {}\n        },\n        {\n          id: 'mainShare',\n          correlate: 'video',\n          onData: () => {}\n        }\n      ],\n      receivers: [\n        {\n          id: 'mainAudio',\n          correlate: 'audio',\n          history: true,\n          onEvent: (event) => {\n            if (event.kind === 'audio' && event.stat === 'bytesReceived') {\n              Metrics.postEvent({\n                event: eventType.RECEIVING_MEDIA_START,\n                meeting,\n                data: {\n                  mediaType: mediaType.AUDIO\n                }\n              });\n            }\n            else if (event.stop && event.stat === 'bytesReceived') {\n              Metrics.postEvent({\n                event: eventType.RECEIVING_MEDIA_STOP,\n                meeting,\n                data: {\n                  mediaType: mediaType.AUDIO\n                }\n              });\n            }\n          },\n          onData: () => {}\n        },\n        {\n          id: 'mainVideo',\n          correlate: 'video',\n          history: true,\n          onEvent: (event) => {\n            if (event.kind === 'video' && event.stat === 'bytesReceived') {\n              Metrics.postEvent({\n                event: eventType.RECEIVING_MEDIA_START,\n                meeting,\n                data: {\n                  mediaType: mediaType.VIDEO\n                }\n              });\n            }\n            else if (event.stop && event.stat === 'bytesReceived') {\n              Metrics.postEvent({\n                event: eventType.RECEIVING_MEDIA_STOP,\n                meeting,\n                data: {\n                  mediaType: mediaType.VIDEO\n                }\n              });\n            }\n          },\n          onData: () => {}\n        },\n        {\n          id: 'mainShare',\n          correlate: 'video',\n          onData: () => {}\n        }\n      ]\n    };\n\n    StatsUtil.generateOptions(options, STATS.CONFIG, meeting);\n\n    options.config = STATS.CONFIG;\n\n    // pass the attrs and options for the webex instance\n    meeting.internalStats = new WebRTCStats(meeting.attrs, meeting.options, options);\n  }\n\n  return meeting.internalStats;\n};\n\nMeetingUtil.setPeerConnectionEvents = (meeting) => {\n  // In case ICE fail\n  const {peerConnection} = meeting.mediaProperties;\n\n  peerConnection.oniceconnectionstatechange = () => {\n    switch (peerConnection.iceConnectionState) {\n      case ICE_STATE.CHECKING:\n        Metrics.postEvent({event: eventType.ICE_START, meeting});\n        break;\n      case ICE_STATE.COMPLETED:\n        Metrics.postEvent({event: eventType.ICE_END, meeting});\n        break;\n      case ICE_STATE.CONNECTED:\n        break;\n      case ICE_STATE.CLOSED:\n        break;\n      case ICE_STATE.DISCONNECTED:\n\n        break;\n      case ICE_STATE.FAILED:\n        // notify of ice failure\n        Metrics.postEvent({\n          event: eventType.ICE_END,\n          meeting,\n          data: {\n            canProceed: false,\n            errors: [\n              Metrics.generateErrorPayload(\n                2004, false, error.name.MEDIA_ENGINE\n              )]\n          }\n        });\n        break;\n      default:\n        break;\n    }\n  };\n};\n\nexport default MeetingUtil;\n"]},"metadata":{},"sourceType":"script"}