{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = undefined;\n\nvar _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');\n\nvar _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _weakMap = require('babel-runtime/core-js/weak-map');\n\nvar _weakMap2 = _interopRequireDefault(_weakMap);\n\nvar _get2 = require('lodash/get');\n\nvar _get3 = _interopRequireDefault(_get2);\n\nvar _common = require('@webex/common');\n\nvar _httpCore = require('@webex/http-core');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/*!\n * Copyright (c) 2015-2019 Cisco Systems, Inc. See LICENSE file.\n */\n\n\nvar strings = new _weakMap2.default();\n/**\n * Sets a 'user-agent' header on all requests if one is not present.\n * Defaults to '@webex/http-core' though a custom user-agent can be set\n * using the appName and appVersion configuration. e.g.\n *\n *   webex = WebexSdk.init({\n *     credentials: {\n *       supertoken: superToken\n *     },\n *     config: {\n *       credentials: {\n *         client_id,\n *         client_secret\n *       },\n *       appName: 'custom-user-agent',\n *       appVersion: '1.0',\n *     }\n *   });\n */\n\nvar UserAgentInterceptor = function (_Interceptor) {\n  (0, _inherits3.default)(UserAgentInterceptor, _Interceptor);\n  /**\n   * @param {Object} [options={}]\n   * @param {WebexCore} [options.webex]\n   * @private\n   * @returns {UserAgentInterceptor}\n   */\n\n  function UserAgentInterceptor() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    (0, _classCallCheck3.default)(this, UserAgentInterceptor);\n    var appName = (0, _get3.default)(options, 'webex.config.appName');\n    var appVersion = (0, _get3.default)(options, 'webex.config.appVersion') || '0.0';\n\n    var _this = (0, _possibleConstructorReturn3.default)(this, (UserAgentInterceptor.__proto__ || (0, _getPrototypeOf2.default)(UserAgentInterceptor)).call(this, options));\n\n    if (appName) {\n      strings.set(_this, appName + '/' + appVersion);\n    } else {\n      strings.set(_this, '@webex/http-core'); // Using the traditional default from http-core\n    }\n\n    return _this;\n  }\n  /**\n   * @returns {UserAgentInterceptor}\n   */\n\n\n  (0, _createClass3.default)(UserAgentInterceptor, [{\n    key: 'onRequest',\n\n    /**\n     * @see Interceptor#onRequest\n     * @param {Object} options\n     * @returns {Object}\n     */\n    value: function onRequest(options) {\n      // Do not set a custom user-agent for browsers\n      if (_common.inBrowser) {\n        return options;\n      }\n\n      options.headers = options.headers || {};\n\n      if ('user-agent' in options.headers && options.headers['spark-user-agent']) {\n        return options;\n      }\n\n      options.headers['user-agent'] = strings.get(this);\n      return options;\n    }\n  }], [{\n    key: 'create',\n    value: function create() {\n      return new UserAgentInterceptor({\n        webex: this\n      });\n    }\n  }]);\n  return UserAgentInterceptor;\n}(_httpCore.Interceptor);\n\nexports.default = UserAgentInterceptor;","map":{"version":3,"sources":["user-agent.js"],"names":["strings","UserAgentInterceptor","Interceptor","options","appName","appVersion","webex","inBrowser"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIA,IAAA,OAAA,GAAA,OAAA,CAAA,eAAA,CAAA;;AACA,IAAA,SAAA,GAAA,OAAA,CAAA,kBAAA,CAAA;;;;;;;AALA;;;;;AAQA,IAAMA,OAAAA,GAAU,IAAA,SAAA,CAAhB,OAAgB,EAAhB;AAEA;;;;;;;;;;;;;;;;;;;;IAmBqBC,oB;;AACnB;;;;;;;AAMA,WAAA,oBAAA,GAA0B;AAAA,QAAdE,OAAc,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAAJ,EAAI;AAAA,KAAA,GAAA,gBAAA,CAAA,OAAA,EAAA,IAAA,EAAA,oBAAA;AACxB,QAAMC,OAAAA,GAAU,CAAA,GAAA,KAAA,CAAA,OAAA,EAAA,OAAA,EAAhB,sBAAgB,CAAhB;AACA,QAAMC,UAAAA,GAAa,CAAA,GAAA,KAAA,CAAA,OAAA,EAAA,OAAA,EAAA,yBAAA,KAAnB,KAAA;;AAFwB,QAAA,KAAA,GAAA,CAAA,GAAA,2BAAA,CAAA,OAAA,EAAA,IAAA,EAAA,CAAA,oBAAA,CAAA,SAAA,IAAA,CAAA,GAAA,gBAAA,CAAA,OAAA,EAAA,oBAAA,CAAA,EAAA,IAAA,CAAA,IAAA,EAAA,OAAA,CAAA,CAAA;;AAKxB,QAAA,OAAA,EAAa;AACXL,MAAAA,OAAAA,CAAAA,GAAAA,CAAAA,KAAAA,EAAqBI,OAArBJ,GAAAA,GAAqBI,GAArBJ,UAAAA;AADF,KAAA,MAGK;AACHA,MAAAA,OAAAA,CAAAA,GAAAA,CAAAA,KAAAA,EADG,kBACHA,EADG,CACoC;AACxC;;AAVuB,WAAA,KAAA;AAWzB;AAED;;;;;;;;AAOA;;;;;8BAKUG,O,EAAS;AACjB;AACA,UAAII,OAAAA,CAAJ,SAAA,EAAe;AACb,eAAA,OAAA;AACD;;AAEDJ,MAAAA,OAAAA,CAAAA,OAAAA,GAAkBA,OAAAA,CAAAA,OAAAA,IAAlBA,EAAAA;;AAEA,UAAI,gBAAgBA,OAAAA,CAAhB,OAAA,IAAmCA,OAAAA,CAAAA,OAAAA,CAAvC,kBAAuCA,CAAvC,EAA4E;AAC1E,eAAA,OAAA;AACD;;AAEDA,MAAAA,OAAAA,CAAAA,OAAAA,CAAAA,YAAAA,IAAgCH,OAAAA,CAAAA,GAAAA,CAAhCG,IAAgCH,CAAhCG;AAEA,aAAA,OAAA;AACD;;;6BAxBe;AACd,aAAO,IAAA,oBAAA,CAAyB;AAACG,QAAAA,KAAAA,EAAjC;AAAgC,OAAzB,CAAP;AACD;;;EAzB+CJ,SAAAA,CAAAA,W;;kBAA7BD,oB","sourcesContent":["/*!\n * Copyright (c) 2015-2019 Cisco Systems, Inc. See LICENSE file.\n */\n\nimport {inBrowser} from '@webex/common';\nimport {Interceptor} from '@webex/http-core';\nimport {get} from 'lodash';\n\nconst strings = new WeakMap();\n\n/**\n * Sets a 'user-agent' header on all requests if one is not present.\n * Defaults to '@webex/http-core' though a custom user-agent can be set\n * using the appName and appVersion configuration. e.g.\n *\n *   webex = WebexSdk.init({\n *     credentials: {\n *       supertoken: superToken\n *     },\n *     config: {\n *       credentials: {\n *         client_id,\n *         client_secret\n *       },\n *       appName: 'custom-user-agent',\n *       appVersion: '1.0',\n *     }\n *   });\n */\nexport default class UserAgentInterceptor extends Interceptor {\n  /**\n   * @param {Object} [options={}]\n   * @param {WebexCore} [options.webex]\n   * @private\n   * @returns {UserAgentInterceptor}\n   */\n  constructor(options = {}) {\n    const appName = get(options, 'webex.config.appName');\n    const appVersion = get(options, 'webex.config.appVersion') || '0.0';\n\n    super(options);\n    if (appName) {\n      strings.set(this, `${appName}/${appVersion}`);\n    }\n    else {\n      strings.set(this, '@webex/http-core'); // Using the traditional default from http-core\n    }\n  }\n\n  /**\n   * @returns {UserAgentInterceptor}\n   */\n  static create() {\n    return new UserAgentInterceptor({webex: this});\n  }\n\n  /**\n   * @see Interceptor#onRequest\n   * @param {Object} options\n   * @returns {Object}\n   */\n  onRequest(options) {\n    // Do not set a custom user-agent for browsers\n    if (inBrowser) {\n      return options;\n    }\n\n    options.headers = options.headers || {};\n\n    if ('user-agent' in options.headers && options.headers['spark-user-agent']) {\n      return options;\n    }\n\n    options.headers['user-agent'] = strings.get(this);\n\n    return options;\n  }\n}\n"]},"metadata":{},"sourceType":"script"}