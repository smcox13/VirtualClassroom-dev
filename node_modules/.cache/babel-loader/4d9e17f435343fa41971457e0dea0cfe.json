{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar ControlsUtils = {};\n/**\n * Controls\n * @typedef {Object} LocusControls\n * @property {Object} record\n * @property {Boolean} record.recording\n * @property {Object} record.meta\n * @property {String} record.meta.modifiedBy\n */\n\n/**\n * parse the relevant host values that we care about: id\n * @param {LocusControls} controls\n * @returns {Object} parsedObject - parsed host or null if host was undefined\n * @returns {String} parsedObject.recordingId\n */\n\nControlsUtils.parse = function (controls) {\n  if (controls) {\n    return {\n      recordingId: ControlsUtils.getId(controls)\n    };\n  }\n\n  return null;\n};\n/**\n * Extract the id from the record controls object\n * @param {LocusControls} controls\n * @returns {String|null}\n */\n\n\nControlsUtils.getId = function (controls) {\n  if (!controls || !controls.record || !controls.record.recording) {\n    return null;\n  }\n\n  if (controls.record && controls.record.meta && controls.record.recording) {\n    return controls.record.meta.modifiedBy;\n  }\n\n  return null;\n};\n\nexports.default = ControlsUtils;","map":{"version":3,"sources":["controlsUtils.js"],"names":["ControlsUtils","recordingId","controls"],"mappings":";;;;;AAAA,IAAMA,aAAAA,GAAN,EAAA;AAEA;;;;;;;;;AASA;;;;;;;AAMAA,aAAAA,CAAAA,KAAAA,GAAsB,UAAA,QAAA,EAAc;AAClC,MAAA,QAAA,EAAc;AACZ,WAAO;AACLC,MAAAA,WAAAA,EAAaD,aAAAA,CAAAA,KAAAA,CAAAA,QAAAA;AADR,KAAP;AAGD;;AAED,SAAA,IAAA;AAPFA,CAAAA;AAUA;;;;;;;AAKAA,aAAAA,CAAAA,KAAAA,GAAsB,UAAA,QAAA,EAAc;AAClC,MAAI,CAAA,QAAA,IAAa,CAACE,QAAAA,CAAd,MAAA,IAAiC,CAACA,QAAAA,CAAAA,MAAAA,CAAtC,SAAA,EAAiE;AAC/D,WAAA,IAAA;AACD;;AACD,MAAIA,QAAAA,CAAAA,MAAAA,IAAmBA,QAAAA,CAAAA,MAAAA,CAAnBA,IAAAA,IAA2CA,QAAAA,CAAAA,MAAAA,CAA/C,SAAA,EAA0E;AACxE,WAAOA,QAAAA,CAAAA,MAAAA,CAAAA,IAAAA,CAAP,UAAA;AACD;;AAED,SAAA,IAAA;AARFF,CAAAA;;kBAWeA,a","sourcesContent":["const ControlsUtils = {};\n\n/**\n * Controls\n * @typedef {Object} LocusControls\n * @property {Object} record\n * @property {Boolean} record.recording\n * @property {Object} record.meta\n * @property {String} record.meta.modifiedBy\n */\n\n/**\n * parse the relevant host values that we care about: id\n * @param {LocusControls} controls\n * @returns {Object} parsedObject - parsed host or null if host was undefined\n * @returns {String} parsedObject.recordingId\n */\nControlsUtils.parse = (controls) => {\n  if (controls) {\n    return {\n      recordingId: ControlsUtils.getId(controls)\n    };\n  }\n\n  return null;\n};\n\n/**\n * Extract the id from the record controls object\n * @param {LocusControls} controls\n * @returns {String|null}\n */\nControlsUtils.getId = (controls) => {\n  if (!controls || !controls.record || !controls.record.recording) {\n    return null;\n  }\n  if (controls.record && controls.record.meta && controls.record.recording) {\n    return controls.record.meta.modifiedBy;\n  }\n\n  return null;\n};\n\nexport default ControlsUtils;\n"]},"metadata":{},"sourceType":"script"}