{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _promise = require(\"babel-runtime/core-js/promise\");\n\nvar _promise2 = _interopRequireDefault(_promise);\n\nexports.default = ensureBuffer;\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/*!\n * Copyright (c) 2015-2019 Cisco Systems, Inc. See LICENSE file.\n */\n\n/* eslint-env: browser */\n\n/* global FileReader */\n\n/**\n * Ensures the provider buffer is, indeed, an ArrayBuffer; converts File and\n * Blob objects to ArrayBuffers.\n * @param {mixed} buffer\n * @returns {Promise<ArrayBuffer>}\n */\n\n\nfunction ensureBuffer(buffer) {\n  if (buffer instanceof ArrayBuffer) {\n    return _promise2.default.resolve(buffer);\n  }\n\n  if (buffer.toArrayBuffer) {\n    return _promise2.default.resolve(buffer.toArrayBuffer());\n  }\n\n  if (buffer.buffer) {\n    return _promise2.default.resolve(buffer.buffer);\n  }\n\n  return new _promise2.default(function (resolve, reject) {\n    var fr = new FileReader();\n\n    fr.onload = function onload() {\n      resolve(new Uint8Array(this.result));\n    };\n\n    fr.onerror = reject;\n    fr.readAsArrayBuffer(buffer);\n  });\n}","map":{"version":3,"sources":["ensure-buffer.browser.js"],"names":["ensureBuffer","buffer","fr","resolve"],"mappings":";;;;;;;;;;kBAawBA,Y;;;;;;;AAbxB;;;;AAIA;;AACA;;AAEA;;;;;;;;AAMe,SAAA,YAAA,CAAA,MAAA,EAA8B;AAC3C,MAAIC,MAAAA,YAAJ,WAAA,EAAmC;AACjC,WAAO,SAAA,CAAA,OAAA,CAAA,OAAA,CAAP,MAAO,CAAP;AACD;;AAED,MAAIA,MAAAA,CAAJ,aAAA,EAA0B;AACxB,WAAO,SAAA,CAAA,OAAA,CAAA,OAAA,CAAgBA,MAAAA,CAAvB,aAAuBA,EAAhB,CAAP;AACD;;AAED,MAAIA,MAAAA,CAAJ,MAAA,EAAmB;AACjB,WAAO,SAAA,CAAA,OAAA,CAAA,OAAA,CAAgBA,MAAAA,CAAvB,MAAO,CAAP;AACD;;AAED,SAAO,IAAA,SAAA,CAAA,OAAA,CAAY,UAAA,OAAA,EAAA,MAAA,EAAqB;AACtC,QAAMC,EAAAA,GAAK,IAAX,UAAW,EAAX;;AAEAA,IAAAA,EAAAA,CAAAA,MAAAA,GAAY,SAAA,MAAA,GAAkB;AAC5BC,MAAAA,OAAAA,CAAQ,IAAA,UAAA,CAAe,KAAvBA,MAAQ,CAARA,CAAAA;AADFD,KAAAA;;AAIAA,IAAAA,EAAAA,CAAAA,OAAAA,GAAAA,MAAAA;AAEAA,IAAAA,EAAAA,CAAAA,iBAAAA,CAAAA,MAAAA;AATF,GAAO,CAAP;AAWD","sourcesContent":["/*!\n * Copyright (c) 2015-2019 Cisco Systems, Inc. See LICENSE file.\n */\n\n/* eslint-env: browser */\n/* global FileReader */\n\n/**\n * Ensures the provider buffer is, indeed, an ArrayBuffer; converts File and\n * Blob objects to ArrayBuffers.\n * @param {mixed} buffer\n * @returns {Promise<ArrayBuffer>}\n */\nexport default function ensureBuffer(buffer) {\n  if (buffer instanceof ArrayBuffer) {\n    return Promise.resolve(buffer);\n  }\n\n  if (buffer.toArrayBuffer) {\n    return Promise.resolve(buffer.toArrayBuffer());\n  }\n\n  if (buffer.buffer) {\n    return Promise.resolve(buffer.buffer);\n  }\n\n  return new Promise((resolve, reject) => {\n    const fr = new FileReader();\n\n    fr.onload = function onload() {\n      resolve(new Uint8Array(this.result));\n    };\n\n    fr.onerror = reject;\n\n    fr.readAsArrayBuffer(buffer);\n  });\n}\n"]},"metadata":{},"sourceType":"script"}