{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _assign = require('babel-runtime/core-js/object/assign');\n\nvar _assign2 = _interopRequireDefault(_assign);\n\nvar _getOwnPropertyDescriptor = require('babel-runtime/core-js/object/get-own-property-descriptor');\n\nvar _getOwnPropertyDescriptor2 = _interopRequireDefault(_getOwnPropertyDescriptor);\n\nvar _promise = require('babel-runtime/core-js/promise');\n\nvar _promise2 = _interopRequireDefault(_promise);\n\nvar _map = require('babel-runtime/core-js/map');\n\nvar _map2 = _interopRequireDefault(_map);\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _weakMap = require('babel-runtime/core-js/weak-map');\n\nvar _weakMap2 = _interopRequireDefault(_weakMap);\n\nexports.default = makeWebexStore;\n\nvar _ampersandEvents = require('ampersand-events');\n\nvar _ampersandEvents2 = _interopRequireDefault(_ampersandEvents);\n\nvar _common = require('@webex/common');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {\n  var desc = {};\n  Object['ke' + 'ys'](descriptor).forEach(function (key) {\n    desc[key] = descriptor[key];\n  });\n  desc.enumerable = !!desc.enumerable;\n  desc.configurable = !!desc.configurable;\n\n  if ('value' in desc || desc.initializer) {\n    desc.writable = true;\n  }\n\n  desc = decorators.slice().reverse().reduce(function (desc, decorator) {\n    return decorator(target, property, desc) || desc;\n  }, desc);\n\n  if (context && desc.initializer !== void 0) {\n    desc.value = desc.initializer ? desc.initializer.call(context) : void 0;\n    desc.initializer = undefined;\n  }\n\n  if (desc.initializer === void 0) {\n    Object['define' + 'Property'](target, property, desc);\n    desc = null;\n  }\n\n  return desc;\n}\n/*!\n * Copyright (c) 2015-2019 Cisco Systems, Inc. See LICENSE file.\n */\n\n\nvar bindings = new _weakMap2.default();\n/**\n * Makes a WebexStore for the specified type bound to the specified webex instance\n * @param {string} type\n * @param {ProxyWebex} webex\n * @private\n * @returns {WebexStore}\n */\n\nfunction makeWebexStore(type, webex) {\n  var _dec, _desc, _value, _class;\n  /**\n   * Lazy Key-Value Store Interface\n   */\n\n\n  var WebexStore = (_dec = (0, _common.oneFlight)({\n    keyFactory: function keyFactory(namespace) {\n      return namespace;\n    }\n  }), (_class = function () {\n    /**\n     * @param {Object} attrs\n     * @param {Object} options\n     * @returns {Store}\n     */\n    function WebexStore() {\n      (0, _classCallCheck3.default)(this, WebexStore);\n      webex.logger.debug('webex-store: constructing ' + type + 'Storage');\n      bindings.set(this, new _map2.default());\n    }\n    /**\n     * Provides easy access to the storage adapter identified in config.\n     * @returns {Object}\n     */\n\n\n    (0, _createClass3.default)(WebexStore, [{\n      key: 'clear',\n\n      /**\n       * Clears the store\n       * @returns {Promise}\n       */\n      value: function clear() {\n        var promises = [];\n        this.bindings.forEach(function (binding) {\n          promises.push(binding.clear());\n        });\n        return _promise2.default.all(promises);\n      }\n      /**\n       * Deletes the specified key from the store\n       * @param {string} namespace\n       * @param {string} key\n       * @returns {[type]}\n       */\n\n    }, {\n      key: 'del',\n      value: function del(namespace, key) {\n        webex.logger.debug('webex-store: removing ' + namespace + ':' + key);\n        return this._getBinding(namespace).then(function (binding) {\n          return binding.del(key);\n        });\n      }\n      /**\n       * Retrieves the value specified by key from the store. Rejects with\n       * NotFoundError if no value can be found\n       * @param {string} namespace\n       * @param {string} key\n       * @returns {Promise}\n       */\n\n    }, {\n      key: 'get',\n      value: function get(namespace, key) {\n        webex.logger.debug('webex-store: retrieving ' + namespace + ':' + key);\n        return this._getBinding(namespace).then(function (binding) {\n          return binding.get(key);\n        });\n      }\n      /**\n       * Writes a value to the store. Deletes the specified key from the store\n       * if passed `undefined`\n       * @param {string} namespace\n       * @param {string} key\n       * @param {any} value\n       * @returns {Promise} Resolves with value (to simplify write-through caching)\n       */\n\n    }, {\n      key: 'put',\n      value: function put(namespace, key, value) {\n        if (typeof value === 'undefined') {\n          return this.del(namespace, key);\n        }\n\n        webex.logger.debug('webex-store: setting ' + namespace + ':' + key);\n        return this._getBinding(namespace).then(function (binding) {\n          return binding.put(key, value.serialize ? value.serialize() : value);\n        }).then(function () {\n          return value;\n        });\n      }\n    }, {\n      key: '_getBinding',\n\n      /**\n       * Creates an interface bound to the specified namespace\n       * @param {string} namespace\n       * @private\n       * @returns {Promise}\n       */\n      // suppress doc warning because decorators confuse eslint\n      // eslint-disable-next-line require-jsdoc\n      value: function _getBinding(namespace) {\n        var _this = this;\n\n        return new _promise2.default(function (resolve) {\n          webex.logger.debug('storage: getting binding for `' + namespace + '`');\n\n          var binding = _this.bindings.get(namespace);\n\n          if (binding) {\n            webex.logger.debug('storage: found binding for `' + namespace + '`');\n            return resolve(binding);\n          }\n\n          return resolve(_this.adapter.bind(namespace, {\n            logger: webex.logger\n          }).then(function (_binding) {\n            webex.logger.debug('storage: made binding for `' + namespace + '`');\n\n            _this.bindings.set(namespace, _binding);\n\n            return _binding;\n          }));\n        });\n      }\n    }, {\n      key: 'adapter',\n      get: function get() {\n        return webex.config.storage[type + 'Adapter'];\n      }\n      /**\n       * @returns {WeakMap}\n       */\n\n    }, {\n      key: 'bindings',\n      get: function get() {\n        return bindings.get(this);\n      }\n    }]);\n    return WebexStore;\n  }(), _applyDecoratedDescriptor(_class.prototype, '_getBinding', [_dec], (0, _getOwnPropertyDescriptor2.default)(_class.prototype, '_getBinding'), _class.prototype), _class));\n  (0, _assign2.default)(WebexStore.prototype, _ampersandEvents2.default);\n  return new WebexStore();\n}","map":{"version":3,"sources":["make-webex-store.js"],"names":["bindings","makeWebexStore","WebexStore","webex","type","promises","binding","value","keyFactory","resolve","logger","Events"],"mappings":"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","sourcesContent":["/*!\n * Copyright (c) 2015-2019 Cisco Systems, Inc. See LICENSE file.\n */\n\nimport Events from 'ampersand-events';\nimport {oneFlight} from '@webex/common';\n\nconst bindings = new WeakMap();\n\n/**\n * Makes a WebexStore for the specified type bound to the specified webex instance\n * @param {string} type\n * @param {ProxyWebex} webex\n * @private\n * @returns {WebexStore}\n */\nexport default function makeWebexStore(type, webex) {\n  /**\n   * Lazy Key-Value Store Interface\n   */\n  class WebexStore {\n    /**\n     * @param {Object} attrs\n     * @param {Object} options\n     * @returns {Store}\n     */\n    constructor() {\n      webex.logger.debug(`webex-store: constructing ${type}Storage`);\n      bindings.set(this, new Map());\n    }\n\n    /**\n     * Provides easy access to the storage adapter identified in config.\n     * @returns {Object}\n     */\n    get adapter() {\n      return webex.config.storage[`${type}Adapter`];\n    }\n\n    /**\n     * @returns {WeakMap}\n     */\n    get bindings() {\n      return bindings.get(this);\n    }\n\n    /**\n     * Clears the store\n     * @returns {Promise}\n     */\n    clear() {\n      const promises = [];\n\n      this.bindings.forEach((binding) => {\n        promises.push(binding.clear());\n      });\n\n      return Promise.all(promises);\n    }\n\n    /**\n     * Deletes the specified key from the store\n     * @param {string} namespace\n     * @param {string} key\n     * @returns {[type]}\n     */\n    del(namespace, key) {\n      webex.logger.debug(`webex-store: removing ${namespace}:${key}`);\n\n      return this._getBinding(namespace)\n        .then((binding) => binding.del(key));\n    }\n\n    /**\n     * Retrieves the value specified by key from the store. Rejects with\n     * NotFoundError if no value can be found\n     * @param {string} namespace\n     * @param {string} key\n     * @returns {Promise}\n     */\n    get(namespace, key) {\n      webex.logger.debug(`webex-store: retrieving ${namespace}:${key}`);\n\n      return this._getBinding(namespace)\n        .then((binding) => binding.get(key));\n    }\n\n    /**\n     * Writes a value to the store. Deletes the specified key from the store\n     * if passed `undefined`\n     * @param {string} namespace\n     * @param {string} key\n     * @param {any} value\n     * @returns {Promise} Resolves with value (to simplify write-through caching)\n     */\n    put(namespace, key, value) {\n      if (typeof value === 'undefined') {\n        return this.del(namespace, key);\n      }\n      webex.logger.debug(`webex-store: setting ${namespace}:${key}`);\n\n      return this._getBinding(namespace)\n        .then((binding) => binding.put(key, value.serialize ? value.serialize() : value))\n        .then(() => value);\n    }\n\n    @oneFlight({keyFactory: (namespace) => namespace})\n    /**\n     * Creates an interface bound to the specified namespace\n     * @param {string} namespace\n     * @private\n     * @returns {Promise}\n     */\n    // suppress doc warning because decorators confuse eslint\n    // eslint-disable-next-line require-jsdoc\n    _getBinding(namespace) {\n      return new Promise((resolve) => {\n        webex.logger.debug(`storage: getting binding for \\`${namespace}\\``);\n        const binding = this.bindings.get(namespace);\n\n        if (binding) {\n          webex.logger.debug(`storage: found binding for \\`${namespace}\\``);\n\n          return resolve(binding);\n        }\n\n        return resolve(this.adapter.bind(namespace, {logger: webex.logger})\n          .then((_binding) => {\n            webex.logger.debug(`storage: made binding for \\`${namespace}\\``);\n            this.bindings.set(namespace, _binding);\n\n            return _binding;\n          }));\n      });\n    }\n  }\n\n  Object.assign(WebexStore.prototype, Events);\n\n  return new WebexStore();\n}\n"]},"metadata":{},"sourceType":"script"}