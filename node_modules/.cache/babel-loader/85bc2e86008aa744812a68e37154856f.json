{"ast":null,"code":"function _toConsumableArray(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  } else {\n    return Array.from(arr);\n  }\n}\n\nfunction _toArray(arr) {\n  return Array.isArray(arr) ? arr : Array.from(arr);\n}\n\nimport { decorate as _decorate, createDefaultSetter } from './private/utils';\nvar defineProperty = Object.defineProperty;\n\nfunction handleDescriptor(target, key, descriptor, _ref) {\n  var _ref2 = _toArray(_ref),\n      decorator = _ref2[0],\n      args = _ref2.slice(1);\n\n  var configurable = descriptor.configurable,\n      enumerable = descriptor.enumerable,\n      writable = descriptor.writable;\n  var originalGet = descriptor.get;\n  var originalSet = descriptor.set;\n  var originalValue = descriptor.value;\n  var isGetter = !!originalGet;\n  return {\n    configurable: configurable,\n    enumerable: enumerable,\n    get: function get() {\n      var fn = isGetter ? originalGet.call(this) : originalValue;\n      var value = decorator.call.apply(decorator, [this, fn].concat(_toConsumableArray(args)));\n\n      if (isGetter) {\n        return value;\n      } else {\n        var desc = {\n          configurable: configurable,\n          enumerable: enumerable\n        };\n        desc.value = value;\n        desc.writable = writable;\n        defineProperty(this, key, desc);\n        return value;\n      }\n    },\n    set: isGetter ? originalSet : createDefaultSetter()\n  };\n}\n\nexport default function decorate() {\n  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  return _decorate(handleDescriptor, args);\n}","map":{"version":3,"sources":["/Users/pratison/Work/Cisco/Education/React/education-webex/node_modules/core-decorators/es/decorate.js"],"names":["_toConsumableArray","arr","Array","isArray","i","arr2","length","from","_toArray","decorate","_decorate","createDefaultSetter","defineProperty","Object","handleDescriptor","target","key","descriptor","_ref","_ref2","decorator","args","slice","configurable","enumerable","writable","originalGet","get","originalSet","set","originalValue","value","isGetter","fn","call","apply","concat","desc","_len","arguments","_key"],"mappings":"AAAA,SAASA,kBAAT,CAA4BC,GAA5B,EAAiC;AAAE,MAAIC,KAAK,CAACC,OAAN,CAAcF,GAAd,CAAJ,EAAwB;AAAE,SAAK,IAAIG,CAAC,GAAG,CAAR,EAAWC,IAAI,GAAGH,KAAK,CAACD,GAAG,CAACK,MAAL,CAA5B,EAA0CF,CAAC,GAAGH,GAAG,CAACK,MAAlD,EAA0DF,CAAC,EAA3D,EAA+D;AAAEC,MAAAA,IAAI,CAACD,CAAD,CAAJ,GAAUH,GAAG,CAACG,CAAD,CAAb;AAAmB;;AAAC,WAAOC,IAAP;AAAc,GAA7H,MAAmI;AAAE,WAAOH,KAAK,CAACK,IAAN,CAAWN,GAAX,CAAP;AAAyB;AAAE;;AAEnM,SAASO,QAAT,CAAkBP,GAAlB,EAAuB;AAAE,SAAOC,KAAK,CAACC,OAAN,CAAcF,GAAd,IAAqBA,GAArB,GAA2BC,KAAK,CAACK,IAAN,CAAWN,GAAX,CAAlC;AAAoD;;AAE7E,SAASQ,QAAQ,IAAIC,SAArB,EAAgCC,mBAAhC,QAA2D,iBAA3D;AACA,IAAIC,cAAc,GAAGC,MAAM,CAACD,cAA5B;;AAGA,SAASE,gBAAT,CAA0BC,MAA1B,EAAkCC,GAAlC,EAAuCC,UAAvC,EAAmDC,IAAnD,EAAyD;AACvD,MAAIC,KAAK,GAAGX,QAAQ,CAACU,IAAD,CAApB;AAAA,MACIE,SAAS,GAAGD,KAAK,CAAC,CAAD,CADrB;AAAA,MAEIE,IAAI,GAAGF,KAAK,CAACG,KAAN,CAAY,CAAZ,CAFX;;AAIA,MAAIC,YAAY,GAAGN,UAAU,CAACM,YAA9B;AAAA,MACIC,UAAU,GAAGP,UAAU,CAACO,UAD5B;AAAA,MAEIC,QAAQ,GAAGR,UAAU,CAACQ,QAF1B;AAIA,MAAIC,WAAW,GAAGT,UAAU,CAACU,GAA7B;AACA,MAAIC,WAAW,GAAGX,UAAU,CAACY,GAA7B;AACA,MAAIC,aAAa,GAAGb,UAAU,CAACc,KAA/B;AACA,MAAIC,QAAQ,GAAG,CAAC,CAACN,WAAjB;AAEA,SAAO;AACLH,IAAAA,YAAY,EAAEA,YADT;AAELC,IAAAA,UAAU,EAAEA,UAFP;AAGLG,IAAAA,GAAG,EAAE,SAASA,GAAT,GAAe;AAClB,UAAIM,EAAE,GAAGD,QAAQ,GAAGN,WAAW,CAACQ,IAAZ,CAAiB,IAAjB,CAAH,GAA4BJ,aAA7C;AACA,UAAIC,KAAK,GAAGX,SAAS,CAACc,IAAV,CAAeC,KAAf,CAAqBf,SAArB,EAAgC,CAAC,IAAD,EAAOa,EAAP,EAAWG,MAAX,CAAkBpC,kBAAkB,CAACqB,IAAD,CAApC,CAAhC,CAAZ;;AAEA,UAAIW,QAAJ,EAAc;AACZ,eAAOD,KAAP;AACD,OAFD,MAEO;AACL,YAAIM,IAAI,GAAG;AACTd,UAAAA,YAAY,EAAEA,YADL;AAETC,UAAAA,UAAU,EAAEA;AAFH,SAAX;AAKAa,QAAAA,IAAI,CAACN,KAAL,GAAaA,KAAb;AACAM,QAAAA,IAAI,CAACZ,QAAL,GAAgBA,QAAhB;AAEAb,QAAAA,cAAc,CAAC,IAAD,EAAOI,GAAP,EAAYqB,IAAZ,CAAd;AAEA,eAAON,KAAP;AACD;AACF,KAtBI;AAwBLF,IAAAA,GAAG,EAAEG,QAAQ,GAAGJ,WAAH,GAAiBjB,mBAAmB;AAxB5C,GAAP;AA0BD;;AAED,eAAe,SAASF,QAAT,GAAoB;AACjC,OAAK,IAAI6B,IAAI,GAAGC,SAAS,CAACjC,MAArB,EAA6Be,IAAI,GAAGnB,KAAK,CAACoC,IAAD,CAAzC,EAAiDE,IAAI,GAAG,CAA7D,EAAgEA,IAAI,GAAGF,IAAvE,EAA6EE,IAAI,EAAjF,EAAqF;AACnFnB,IAAAA,IAAI,CAACmB,IAAD,CAAJ,GAAaD,SAAS,CAACC,IAAD,CAAtB;AACD;;AAED,SAAO9B,SAAS,CAACI,gBAAD,EAAmBO,IAAnB,CAAhB;AACD","sourcesContent":["function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _toArray(arr) { return Array.isArray(arr) ? arr : Array.from(arr); }\n\nimport { decorate as _decorate, createDefaultSetter } from './private/utils';\nvar defineProperty = Object.defineProperty;\n\n\nfunction handleDescriptor(target, key, descriptor, _ref) {\n  var _ref2 = _toArray(_ref),\n      decorator = _ref2[0],\n      args = _ref2.slice(1);\n\n  var configurable = descriptor.configurable,\n      enumerable = descriptor.enumerable,\n      writable = descriptor.writable;\n\n  var originalGet = descriptor.get;\n  var originalSet = descriptor.set;\n  var originalValue = descriptor.value;\n  var isGetter = !!originalGet;\n\n  return {\n    configurable: configurable,\n    enumerable: enumerable,\n    get: function get() {\n      var fn = isGetter ? originalGet.call(this) : originalValue;\n      var value = decorator.call.apply(decorator, [this, fn].concat(_toConsumableArray(args)));\n\n      if (isGetter) {\n        return value;\n      } else {\n        var desc = {\n          configurable: configurable,\n          enumerable: enumerable\n        };\n\n        desc.value = value;\n        desc.writable = writable;\n\n        defineProperty(this, key, desc);\n\n        return value;\n      }\n    },\n\n    set: isGetter ? originalSet : createDefaultSetter()\n  };\n}\n\nexport default function decorate() {\n  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  return _decorate(handleDescriptor, args);\n}"]},"metadata":{},"sourceType":"module"}