{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.InvalidUserCreation = exports.ConversationError = exports.ShareActivity = exports.default = undefined;\n\nvar _deleteProperty = require('babel-runtime/core-js/reflect/delete-property');\n\nvar _deleteProperty2 = _interopRequireDefault(_deleteProperty);\n\nvar _promise = require('babel-runtime/core-js/promise');\n\nvar _promise2 = _interopRequireDefault(_promise);\n\nvar _has2 = require('lodash/has');\n\nvar _has3 = _interopRequireDefault(_has2);\n\nvar _get2 = require('lodash/get');\n\nvar _get3 = _interopRequireDefault(_get2);\n\nvar _capitalize2 = require('lodash/capitalize');\n\nvar _capitalize3 = _interopRequireDefault(_capitalize2);\n\nvar _conversation = require('./conversation');\n\nObject.defineProperty(exports, 'default', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_conversation).default;\n  }\n});\n\nvar _shareActivity = require('./share-activity');\n\nObject.defineProperty(exports, 'ShareActivity', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_shareActivity).default;\n  }\n});\n\nvar _convoError = require('./convo-error');\n\nObject.defineProperty(exports, 'ConversationError', {\n  enumerable: true,\n  get: function get() {\n    return _convoError.ConversationError;\n  }\n});\nObject.defineProperty(exports, 'InvalidUserCreation', {\n  enumerable: true,\n  get: function get() {\n    return _convoError.InvalidUserCreation;\n  }\n});\n\nrequire('@webex/internal-plugin-encryption');\n\nrequire('@webex/internal-plugin-user');\n\nvar _common = require('@webex/common');\n\nvar _helperHtml = require('@webex/helper-html');\n\nvar _webexCore = require('@webex/webex-core');\n\nvar _conversation2 = _interopRequireDefault(_conversation);\n\nvar _config = require('./config');\n\nvar _config2 = _interopRequireDefault(_config);\n\nvar _encryptionTransforms = require('./encryption-transforms');\n\nvar _decryptionTransforms = require('./decryption-transforms');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\n(0, _webexCore.registerInternalPlugin)('conversation', _conversation2.default, {\n  payloadTransformer: {\n    predicates: [{\n      name: 'transformObject',\n      test: function test(ctx, optionsOrResponse) {\n        return _promise2.default.resolve((0, _has3.default)(optionsOrResponse, 'body.objectType'));\n      },\n      extract: function extract(optionsOrResponse) {\n        return _promise2.default.resolve(optionsOrResponse.body);\n      }\n    }, {\n      name: 'transformObject',\n      direction: 'inbound',\n      test: function test(ctx, event) {\n        return _promise2.default.resolve((0, _has3.default)(event, 'activity'));\n      },\n      extract: function extract(event) {\n        return _promise2.default.resolve(event.activity);\n      }\n    }, {\n      name: 'transformObjectArray',\n      direction: 'inbound',\n      test: function test(ctx, response) {\n        return _promise2.default.resolve((0, _has3.default)(response, 'body.multistatus'));\n      },\n      extract: function extract(response) {\n        return _promise2.default.resolve(response.body.multistatus.map(function (item) {\n          return item && item.data && item.data.activity;\n        }));\n      }\n    }, {\n      name: 'normalizeConversationListAndBindDecrypters',\n      direction: 'inbound',\n      test: function test(ctx, options) {\n        if (!(0, _has3.default)(options, 'body.items[0].objectType')) {\n          return _promise2.default.resolve(false);\n        }\n\n        if ((0, _get3.default)(options, 'options.deferDecrypt')) {\n          return _promise2.default.resolve(true);\n        }\n\n        return _promise2.default.resolve(false);\n      },\n      extract: function extract(options) {\n        return _promise2.default.resolve(options.body.items);\n      }\n    }, {\n      name: 'transformObjectArray',\n      direction: 'inbound',\n      test: function test(ctx, options) {\n        if (!(0, _has3.default)(options, 'body.items[0].objectType')) {\n          return _promise2.default.resolve(false);\n        }\n\n        if ((0, _get3.default)(options, 'options.deferDecrypt')) {\n          return _promise2.default.resolve(false);\n        }\n\n        return _promise2.default.resolve(true);\n      },\n      extract: function extract(options) {\n        return _promise2.default.resolve(options.body.items);\n      }\n    }],\n    transforms: [{\n      name: 'normalizeConversationListAndBindDecrypters',\n      fn: function fn(ctx, array) {\n        return _promise2.default.all(array.map(function (item) {\n          return ctx.transform('normalizeObject', item).then(function () {\n            item.decrypt = function decrypt() {\n              (0, _deleteProperty2.default)(item, 'decrypt');\n              return ctx.transform('decryptObject', item);\n            };\n\n            return item;\n          });\n        }));\n      }\n    }, {\n      name: 'transformObjectArray',\n      fn: function fn(ctx, array) {\n        return _promise2.default.all(array.map(function (item) {\n          return ctx.transform('transformObject', item);\n        }));\n      }\n    }, {\n      name: 'transformObject',\n      direction: 'outbound',\n      fn: function fn(ctx, object) {\n        if (!object) {\n          return _promise2.default.resolve();\n        }\n\n        if (!object.objectType) {\n          return _promise2.default.resolve();\n        }\n\n        return ctx.transform('normalizeObject', object).then(function () {\n          return ctx.transform('encryptObject', object);\n        }).then(function () {\n          return ctx.transform('encryptKmsMessage', object);\n        });\n      }\n    }, {\n      name: 'transformObject',\n      direction: 'inbound',\n      fn: function fn(ctx, object) {\n        if (!object) {\n          return _promise2.default.resolve();\n        }\n\n        if (!object.objectType) {\n          return _promise2.default.resolve();\n        }\n\n        return ctx.transform('decryptObject', object).then(function () {\n          return ctx.transform('normalizeObject', object);\n        });\n      }\n    }, {\n      name: 'normalizeObject',\n      fn: function fn(ctx, object) {\n        if (!object) {\n          return _promise2.default.resolve();\n        }\n\n        if (!object.objectType) {\n          return _promise2.default.resolve();\n        }\n\n        return _promise2.default.all([ctx.transform('normalize' + (0, _capitalize3.default)(object.objectType), object), ctx.transform('normalizePropContent', object)]);\n      }\n    }, {\n      name: 'normalizePropContent',\n      direction: 'inbound',\n      fn: function fn(ctx, object) {\n        if (!object.content) {\n          return _promise2.default.resolve();\n        }\n\n        var _ctx$webex$config$con = ctx.webex.config.conversation,\n            inboundProcessFunc = _ctx$webex$config$con.inboundProcessFunc,\n            allowedInboundTags = _ctx$webex$config$con.allowedInboundTags,\n            allowedInboundStyles = _ctx$webex$config$con.allowedInboundStyles;\n        return (0, _helperHtml.filter)(inboundProcessFunc, allowedInboundTags || {}, allowedInboundStyles, object.content).then(function (c) {\n          object.content = c;\n        });\n      }\n    }, {\n      name: 'normalizePropContent',\n      direction: 'outbound',\n      fn: function fn(ctx, object) {\n        if (!object.content) {\n          return _promise2.default.resolve();\n        }\n\n        var _ctx$webex$config$con2 = ctx.webex.config.conversation,\n            outboundProcessFunc = _ctx$webex$config$con2.outboundProcessFunc,\n            allowedOutboundTags = _ctx$webex$config$con2.allowedOutboundTags,\n            allowedOutboundStyles = _ctx$webex$config$con2.allowedOutboundStyles;\n        return (0, _helperHtml.filterEscape)(outboundProcessFunc, allowedOutboundTags || {}, allowedOutboundStyles, object.content).then(function (c) {\n          object.content = c;\n        });\n      }\n    }, {\n      name: 'normalizeConversation',\n      fn: function fn(ctx, conversation) {\n        conversation.activities = conversation.activities || {};\n        conversation.activities.items = conversation.activities.items || [];\n        conversation.participants = conversation.participants || {};\n        conversation.participants.items = conversation.participants.items || [];\n        return _promise2.default.all([_promise2.default.all(conversation.activities.items.map(function (item) {\n          return ctx.transform('normalizeObject', item);\n        })), _promise2.default.all(conversation.participants.items.map(function (item) {\n          return ctx.transform('normalizeObject', item);\n        }))]);\n      }\n    }, {\n      name: 'normalizeActivity',\n      fn: function fn(ctx, activity) {\n        return _promise2.default.all([ctx.transform('normalizeObject', activity.actor), ctx.transform('normalizeObject', activity.object), ctx.transform('normalizeObject', activity.target)]);\n      }\n    }, {\n      name: 'normalizePerson',\n      // eslint-disable-next-line complexity\n      fn: function fn(ctx, person) {\n        var email = person.entryEmail || person.emailAddress || person.id;\n        var id = person.entryUUID || person.id;\n\n        if (_common.patterns.email.test(email)) {\n          person.entryEmail = person.emailAddress = email.toLowerCase();\n        } else {\n          (0, _deleteProperty2.default)(person, 'entryEmail');\n          (0, _deleteProperty2.default)(person, 'emailAddress');\n        }\n\n        if (person.roomProperties) {\n          person.roomProperties.isModerator = Boolean(person.roomProperties.isModerator);\n        }\n\n        if (_common.patterns.uuid.test(id)) {\n          person.entryUUID = person.id = id.toLowerCase();\n          return _promise2.default.resolve(person);\n        }\n\n        if (!email) {\n          return _promise2.default.reject(new Error('cannot determine id without an `emailAddress` or `entryUUID` property'));\n        }\n\n        return ctx.webex.internal.user.asUUID(email).then(function (uuid) {\n          person.entryUUID = person.id = uuid;\n          return person;\n        });\n      }\n    }].concat(_decryptionTransforms.transforms).concat(_encryptionTransforms.transforms)\n  },\n  config: _config2.default\n});\n/*!\n * Copyright (c) 2015-2019 Cisco Systems, Inc. See LICENSE file.\n */","map":{"version":3,"sources":["index.js"],"names":["Conversation","payloadTransformer","predicates","name","test","extract","optionsOrResponse","direction","event","item","options","transforms","fn","ctx","object","inboundProcessFunc","allowedInboundTags","allowedInboundStyles","outboundProcessFunc","allowedOutboundTags","allowedOutboundStyles","conversation","activity","email","person","id","patterns","Boolean","decryptionTransforms","encryptionTransforms","config","default","ConversationError","InvalidUserCreation"],"mappings":"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","sourcesContent":["/*!\n * Copyright (c) 2015-2019 Cisco Systems, Inc. See LICENSE file.\n */\n\nimport '@webex/internal-plugin-encryption';\nimport '@webex/internal-plugin-user';\n\nimport {patterns} from '@webex/common';\nimport {filter as htmlFilter, filterEscape as htmlFilterEscape} from '@webex/helper-html';\nimport {registerInternalPlugin} from '@webex/webex-core';\nimport {capitalize, get, has} from 'lodash';\n\nimport Conversation from './conversation';\nimport config from './config';\nimport {transforms as encryptionTransforms} from './encryption-transforms';\nimport {transforms as decryptionTransforms} from './decryption-transforms';\n\nregisterInternalPlugin('conversation', Conversation, {\n  payloadTransformer: {\n    predicates: [\n      {\n        name: 'transformObject',\n        test(ctx, optionsOrResponse) {\n          return Promise.resolve(has(optionsOrResponse, 'body.objectType'));\n        },\n        extract(optionsOrResponse) {\n          return Promise.resolve(optionsOrResponse.body);\n        }\n      },\n      {\n        name: 'transformObject',\n        direction: 'inbound',\n        test(ctx, event) {\n          return Promise.resolve(has(event, 'activity'));\n        },\n        extract(event) {\n          return Promise.resolve(event.activity);\n        }\n      },\n      {\n        name: 'transformObjectArray',\n        direction: 'inbound',\n        test(ctx, response) {\n          return Promise.resolve(has(response, 'body.multistatus'));\n        },\n        extract(response) {\n          return Promise.resolve(response.body.multistatus.map((item) => item && item.data && item.data.activity));\n        }\n      },\n      {\n        name: 'normalizeConversationListAndBindDecrypters',\n        direction: 'inbound',\n        test(ctx, options) {\n          if (!has(options, 'body.items[0].objectType')) {\n            return Promise.resolve(false);\n          }\n\n          if (get(options, 'options.deferDecrypt')) {\n            return Promise.resolve(true);\n          }\n\n          return Promise.resolve(false);\n        },\n        extract(options) {\n          return Promise.resolve(options.body.items);\n        }\n      },\n      {\n        name: 'transformObjectArray',\n        direction: 'inbound',\n        test(ctx, options) {\n          if (!has(options, 'body.items[0].objectType')) {\n            return Promise.resolve(false);\n          }\n\n          if (get(options, 'options.deferDecrypt')) {\n            return Promise.resolve(false);\n          }\n\n          return Promise.resolve(true);\n        },\n        extract(options) {\n          return Promise.resolve(options.body.items);\n        }\n      }\n    ],\n    transforms: [\n      {\n        name: 'normalizeConversationListAndBindDecrypters',\n        fn(ctx, array) {\n          return Promise.all(array.map((item) => ctx.transform('normalizeObject', item)\n            .then(() => {\n              item.decrypt = function decrypt() {\n                Reflect.deleteProperty(item, 'decrypt');\n\n                return ctx.transform('decryptObject', item);\n              };\n\n              return item;\n            })));\n        }\n      },\n      {\n        name: 'transformObjectArray',\n        fn(ctx, array) {\n          return Promise.all(array.map((item) => ctx.transform('transformObject', item)));\n        }\n      },\n      {\n        name: 'transformObject',\n        direction: 'outbound',\n        fn(ctx, object) {\n          if (!object) {\n            return Promise.resolve();\n          }\n\n          if (!object.objectType) {\n            return Promise.resolve();\n          }\n\n          return ctx.transform('normalizeObject', object)\n            .then(() => ctx.transform('encryptObject', object))\n            .then(() => ctx.transform('encryptKmsMessage', object));\n        }\n      },\n      {\n        name: 'transformObject',\n        direction: 'inbound',\n        fn(ctx, object) {\n          if (!object) {\n            return Promise.resolve();\n          }\n\n          if (!object.objectType) {\n            return Promise.resolve();\n          }\n\n          return ctx.transform('decryptObject', object)\n            .then(() => ctx.transform('normalizeObject', object));\n        }\n      },\n      {\n        name: 'normalizeObject',\n        fn(ctx, object) {\n          if (!object) {\n            return Promise.resolve();\n          }\n\n          if (!object.objectType) {\n            return Promise.resolve();\n          }\n\n          return Promise.all([\n            ctx.transform(`normalize${capitalize(object.objectType)}`, object),\n            ctx.transform('normalizePropContent', object)\n          ]);\n        }\n      },\n      {\n        name: 'normalizePropContent',\n        direction: 'inbound',\n        fn(ctx, object) {\n          if (!object.content) {\n            return Promise.resolve();\n          }\n          const {\n            inboundProcessFunc,\n            allowedInboundTags,\n            allowedInboundStyles\n          } = ctx.webex.config.conversation;\n\n          return htmlFilter(inboundProcessFunc, allowedInboundTags || {}, allowedInboundStyles, object.content)\n            .then((c) => {\n              object.content = c;\n            });\n        }\n      },\n      {\n        name: 'normalizePropContent',\n        direction: 'outbound',\n        fn(ctx, object) {\n          if (!object.content) {\n            return Promise.resolve();\n          }\n\n          const {\n            outboundProcessFunc,\n            allowedOutboundTags,\n            allowedOutboundStyles\n          } = ctx.webex.config.conversation;\n\n          return htmlFilterEscape(outboundProcessFunc, allowedOutboundTags || {}, allowedOutboundStyles, object.content)\n            .then((c) => {\n              object.content = c;\n            });\n        }\n      },\n      {\n        name: 'normalizeConversation',\n        fn(ctx, conversation) {\n          conversation.activities = conversation.activities || {};\n          conversation.activities.items = conversation.activities.items || [];\n          conversation.participants = conversation.participants || {};\n          conversation.participants.items = conversation.participants.items || [];\n\n          return Promise.all([\n            Promise.all(conversation.activities.items.map((item) => ctx.transform('normalizeObject', item))),\n            Promise.all(conversation.participants.items.map((item) => ctx.transform('normalizeObject', item)))\n          ]);\n        }\n      },\n      {\n        name: 'normalizeActivity',\n        fn(ctx, activity) {\n          return Promise.all([\n            ctx.transform('normalizeObject', activity.actor),\n            ctx.transform('normalizeObject', activity.object),\n            ctx.transform('normalizeObject', activity.target)\n          ]);\n        }\n      },\n      {\n        name: 'normalizePerson',\n        // eslint-disable-next-line complexity\n        fn(ctx, person) {\n          const email = person.entryEmail || person.emailAddress || person.id;\n          const id = person.entryUUID || person.id;\n\n          if (patterns.email.test(email)) {\n            person.entryEmail = person.emailAddress = email.toLowerCase();\n          }\n          else {\n            Reflect.deleteProperty(person, 'entryEmail');\n            Reflect.deleteProperty(person, 'emailAddress');\n          }\n\n          if (person.roomProperties) {\n            person.roomProperties.isModerator = Boolean(person.roomProperties.isModerator);\n          }\n\n          if (patterns.uuid.test(id)) {\n            person.entryUUID = person.id = id.toLowerCase();\n\n            return Promise.resolve(person);\n          }\n\n          if (!email) {\n            return Promise.reject(new Error('cannot determine id without an `emailAddress` or `entryUUID` property'));\n          }\n\n          return ctx.webex.internal.user.asUUID(email)\n            .then((uuid) => {\n              person.entryUUID = person.id = uuid;\n\n              return person;\n            });\n        }\n      }\n    ]\n      .concat(decryptionTransforms)\n      .concat(encryptionTransforms)\n  },\n  config\n});\n\nexport {default} from './conversation';\nexport {default as ShareActivity} from './share-activity';\nexport {ConversationError, InvalidUserCreation} from './convo-error';\n"]},"metadata":{},"sourceType":"script"}