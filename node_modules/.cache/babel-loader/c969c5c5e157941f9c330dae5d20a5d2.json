{"ast":null,"code":"function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n/** @component checkbox */\n\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nvar CheckboxGroup = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(CheckboxGroup, _React$Component);\n\n  function CheckboxGroup(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n\n    _this.handleToggle = function (value) {\n      var newValues;\n      var onChange = _this.props.onChange;\n      var values = _this.state.values;\n      var isActive = values.includes(value);\n\n      if (isActive) {\n        newValues = values.filter(function (v) {\n          return v !== value;\n        });\n        onChange(_this.props.values.filter(function (n) {\n          return n !== value;\n        }));\n      } else {\n        newValues = values.concat(value);\n        onChange([].concat(_this.props.values, [value]));\n      }\n\n      _this.setState({\n        values: newValues\n      });\n    };\n\n    _this.state = {\n      values: props.values || []\n    };\n    return _this;\n  }\n\n  var _proto = CheckboxGroup.prototype;\n\n  _proto.render = function render() {\n    var _this2 = this;\n\n    var _this$props = this.props,\n        children = _this$props.children,\n        name = _this$props.name;\n    var values = this.state.values;\n\n    var addHandlersToChildren = function addHandlersToChildren() {\n      return React.Children.map(children, function (child) {\n        var value = child.props.value;\n        return React.cloneElement(child, {\n          name: name,\n          checked: values.includes(value),\n          'aria-checked': values.includes(value),\n          onChange: function onChange() {\n            return _this2.handleToggle(value);\n          }\n        });\n      });\n    };\n\n    return React.createElement(\"div\", {\n      className: \"md-checkbox-group\"\n    }, addHandlersToChildren());\n  };\n\n  return CheckboxGroup;\n}(React.Component);\n\nCheckboxGroup.displayName = 'CheckboxGroup';\nCheckboxGroup.propTypes = {\n  /** @prop Children nodes to render inside Accordion | null */\n  children: PropTypes.node,\n\n  /** @prop Callback fired with the value or array of active values when the user presses a button | null */\n  onChange: PropTypes.func,\n\n  /** @prop An array of values, of the active (pressed) buttons | () => {} */\n  values: PropTypes.array,\n\n  /** @prop An HTML `<input>` name for each child button | '' */\n  name: PropTypes.string\n};\nCheckboxGroup.defaultProps = {\n  values: [],\n  onChange: function onChange() {},\n  name: ''\n};\nexport default CheckboxGroup;","map":{"version":3,"sources":["/Users/stcox2/Documents/CODE/VirtualClassroom-dev/node_modules/@momentum-ui/react/es/CheckboxGroup/index.js"],"names":["_inheritsLoose","subClass","superClass","prototype","Object","create","constructor","__proto__","React","PropTypes","CheckboxGroup","_React$Component","props","_this","call","handleToggle","value","newValues","onChange","values","state","isActive","includes","filter","v","n","concat","setState","_proto","render","_this2","_this$props","children","name","addHandlersToChildren","Children","map","child","cloneElement","checked","createElement","className","Component","displayName","propTypes","node","func","array","string","defaultProps"],"mappings":"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","sourcesContent":["function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\n/** @component checkbox */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nvar CheckboxGroup = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(CheckboxGroup, _React$Component);\n\n  function CheckboxGroup(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n\n    _this.handleToggle = function (value) {\n      var newValues;\n      var onChange = _this.props.onChange;\n      var values = _this.state.values;\n      var isActive = values.includes(value);\n\n      if (isActive) {\n        newValues = values.filter(function (v) {\n          return v !== value;\n        });\n        onChange(_this.props.values.filter(function (n) {\n          return n !== value;\n        }));\n      } else {\n        newValues = values.concat(value);\n        onChange([].concat(_this.props.values, [value]));\n      }\n\n      _this.setState({\n        values: newValues\n      });\n    };\n\n    _this.state = {\n      values: props.values || []\n    };\n    return _this;\n  }\n\n  var _proto = CheckboxGroup.prototype;\n\n  _proto.render = function render() {\n    var _this2 = this;\n\n    var _this$props = this.props,\n        children = _this$props.children,\n        name = _this$props.name;\n    var values = this.state.values;\n\n    var addHandlersToChildren = function addHandlersToChildren() {\n      return React.Children.map(children, function (child) {\n        var value = child.props.value;\n        return React.cloneElement(child, {\n          name: name,\n          checked: values.includes(value),\n          'aria-checked': values.includes(value),\n          onChange: function onChange() {\n            return _this2.handleToggle(value);\n          }\n        });\n      });\n    };\n\n    return React.createElement(\"div\", {\n      className: \"md-checkbox-group\"\n    }, addHandlersToChildren());\n  };\n\n  return CheckboxGroup;\n}(React.Component);\n\nCheckboxGroup.displayName = 'CheckboxGroup';\nCheckboxGroup.propTypes = {\n  /** @prop Children nodes to render inside Accordion | null */\n  children: PropTypes.node,\n\n  /** @prop Callback fired with the value or array of active values when the user presses a button | null */\n  onChange: PropTypes.func,\n\n  /** @prop An array of values, of the active (pressed) buttons | () => {} */\n  values: PropTypes.array,\n\n  /** @prop An HTML `<input>` name for each child button | '' */\n  name: PropTypes.string\n};\nCheckboxGroup.defaultProps = {\n  values: [],\n  onChange: function onChange() {},\n  name: ''\n};\nexport default CheckboxGroup;"]},"metadata":{},"sourceType":"module"}