{"ast":null,"code":"var _jsxFileName = \"/Users/pratison/Work/Cisco/Education/React/education-webex/src/pages/GeneralForm.js\";\nimport React from 'react';\nimport { Input, Button, Select, SelectOption, DatePicker, TimePicker, ToggleSwitch } from '@momentum-ui/react';\nimport { Redirect } from 'react-router-dom';\nimport Header from './Header.js';\n\nclass GeneralForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.startTimeSelected = (h, m, z) => {\n      let day = 'AM';\n      let hour = h;\n\n      if (z === 0) {\n        day = 'PM';\n        hour = h - 12;\n      }\n\n      this.setState({\n        startTime: `${hour}:${m}${day}`\n      });\n    };\n\n    this.endTimeSelected = (h, m, z) => {\n      let day = 'AM';\n      let hour = h;\n\n      if (z === 0) {\n        day = 'PM';\n        hour = h - 12;\n      }\n\n      this.setState({\n        endTime: `${hour}:${m}${day}`\n      });\n    };\n\n    this.state = {\n      className: null,\n      courseNumber: null,\n      period: '1',\n      startTime: '12:00PM',\n      endTime: '1:00PM',\n      recurrence: 'Daily (M-F)',\n      date: new Date(),\n      classNameError: {},\n      courseNumberError: {}\n    };\n    this.onTextChange = this.onTextChange.bind(this);\n    this.startTimeSelected = this.startTimeSelected.bind(this);\n    this.endTimeSelected = this.endTimeSelected.bind(this);\n    this.toggleSwitch = this.toggleSwitch.bind(this);\n    this.saveClick = this.saveClick.bind(this);\n    this.cancelClick = this.cancelClick.bind(this);\n  }\n\n  componentDidMount(props) {\n    const obj = JSON.parse(sessionStorage.getItem('classObj'));\n\n    if (obj !== null) {\n      this.setState({\n        className: obj.className,\n        courseNumber: obj.courseNumber,\n        period: obj.period,\n        startTime: obj.startTime,\n        endTime: obj.endTime,\n        recurrence: obj.recurrence,\n        date: obj.date\n      });\n    }\n  }\n\n  simulateClick(e) {\n    if (e !== null) {\n      e.handleInputClick();\n    }\n  }\n\n  onTextChange(e) {\n    const target = e.target;\n    const value = target.value;\n    const name = target.name;\n    let errorMsg = {};\n\n    if (value === '') {\n      errorMsg = {\n        message: 'Please enter Class information',\n        type: 'error'\n      };\n    }\n\n    this.setState({\n      [name]: value,\n      [`${name}Error`]: errorMsg\n    });\n  }\n\n  toggleSwitch(e) {}\n\n  cancelClick(e) {\n    sessionStorage.removeItem('classObj');\n    sessionStorage.removeItem('studentList');\n    sessionStorage.removeItem('uploadedFile');\n    this.props.history.push('/addClasses');\n  }\n\n  saveClick(e) {\n    e.preventDefault();\n\n    if (this.state.className === null) {\n      this.setState({\n        classNameError: {\n          message: 'Please enter Class Name.',\n          type: 'error'\n        }\n      });\n    } else if (this.state.courseNumber === null) {\n      this.setState({\n        courseNumberError: {\n          message: 'Please enter student Course Number.',\n          type: 'error'\n        }\n      });\n    } else {\n      let newClass = {\n        className: this.state.className,\n        courseNumber: this.state.courseNumber,\n        period: this.state.period,\n        startTime: this.state.startTime,\n        endTime: this.state.endTime,\n        recurrence: this.state.recurrence,\n        lastDay: this.state.date\n      };\n      this.setState({\n        classObj: newClass\n      });\n      sessionStorage.setItem('classObj', JSON.stringify(newClass));\n      this.props.history.push({\n        pathname: '/fileUpload',\n        studentList: this.props.location.studentList,\n        uploadedFile: this.props.location.fileName\n      });\n    }\n  }\n\n  render() {\n    const token = sessionStorage.getItem('access_token');\n\n    if (token === null) {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 20\n        }\n      });\n    }\n\n    const hideGrid = {\n      // background:'white',\n      // borderColor:'white'\n      marginTop: 20\n    };\n    let className = this.state.className;\n    let courseNumber = this.state.courseNumber;\n    let period = this.state.period;\n    let recurrence = this.state.recurrence;\n    let startTime = this.state.startTime;\n    let endTime = this.state.endTime;\n    let date = this.state.date;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"grid\",\n      style: {\n        paddingTop: 20\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      tab: \"general\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row large-offset-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"columns large-11\",\n      style: hideGrid,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        fontSize: 16\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 25\n      }\n    }, \"Enter Class Name, Course Number, and select the Period. This information will be used to create the title of the space that will be generated in Webex Teams. If you need to change anything, you\\u2019ll be able to edit this information later.\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row large-offset-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"columns large-4\",\n      style: hideGrid,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      name: \"className\",\n      label: \"Class Name*\",\n      type: \"text\",\n      inputSize: \"large-15\",\n      placeholder: \"e.g. Algebra\",\n      value: className,\n      onChange: this.onTextChange,\n      messageArr: [this.state.classNameError],\n      htmlId: \"className\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"columns large-4\",\n      style: hideGrid,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      name: \"courseNumber\",\n      label: \"Course Number*\",\n      type: \"text\",\n      inputSize: \"large-15\",\n      placeholder: \"123456\",\n      value: courseNumber,\n      onChange: this.onTextChange,\n      messageArr: [this.state.courseNumberError],\n      htmlId: \"courseNumber\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"columns large-4\",\n      style: hideGrid,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 21\n      }\n    }, \"Period\", /*#__PURE__*/React.createElement(Select, {\n      className: \"hide-grid\",\n      defaultValue: period,\n      color: \"white\",\n      onSelect: (e, opts) => {\n        this.setState({\n          period: e[0].value\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(SelectOption, {\n      value: \"1\",\n      label: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 27\n      }\n    }), /*#__PURE__*/React.createElement(SelectOption, {\n      value: \"3\",\n      label: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 27\n      }\n    }), /*#__PURE__*/React.createElement(SelectOption, {\n      value: \"6\",\n      label: \"6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 27\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row large-offset-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"columns large-11\",\n      style: hideGrid,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        fontSize: 16\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 25\n      }\n    }, \"Enter the scheduling information for this class. Using this infomartion, a series of meeting from now until the end of the year will be created. Don\\u2019t worry, you can make changes later.\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row large-offset-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"columns large-2\",\n      style: hideGrid,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 21\n      }\n    }, \"Start Time*\", /*#__PURE__*/React.createElement(TimePicker, {\n      selectedTime: new Date(),\n      inputId: \"startTime\",\n      onChange: this.startTimeSelected,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 25\n      }\n    }), \"End Time*\", /*#__PURE__*/React.createElement(TimePicker, {\n      selectedTime: new Date(),\n      inputId: \"endTime\",\n      onChange: this.endTimeSelected,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 25\n      }\n    }), \"Recurrence\", /*#__PURE__*/React.createElement(Select, {\n      defaultValue: recurrence,\n      onSelect: (e, opts) => {\n        this.setState({\n          recurrence: e[0].value\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(SelectOption, {\n      value: \"Monday\",\n      label: \"Monday\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 27\n      }\n    }), /*#__PURE__*/React.createElement(SelectOption, {\n      value: \"Tuesday\",\n      label: \"Tuesday\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 27\n      }\n    }), /*#__PURE__*/React.createElement(SelectOption, {\n      value: \"Wednesday\",\n      label: \"Wednesday\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 27\n      }\n    }), /*#__PURE__*/React.createElement(SelectOption, {\n      value: \"Thursday\",\n      label: \"Thursday\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 27\n      }\n    }), /*#__PURE__*/React.createElement(SelectOption, {\n      value: \"Friday\",\n      label: \"Friday\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 27\n      }\n    }), /*#__PURE__*/React.createElement(SelectOption, {\n      value: \"Daily (M-F)\",\n      label: \"Daily (M-F)\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 27\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"columns large-8\",\n      style: {\n        marginTop: 10\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(DatePicker, {\n      direction: \"bottom-left\",\n      shouldCloseOnSelect: false,\n      onSelect: (e, date) => this.setState({\n        date: date\n      }),\n      ref: this.simulateClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      style: {\n        background: 'transparent'\n      },\n      inputSize: \"large-10\",\n      value: \"Last Day*\",\n      readOnly: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 29\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row large-offset-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"columns large-11\",\n      style: {\n        marginTop: 35\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        fontSize: 16\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 25\n      }\n    }, \"The Attendance Log tracks attendance of students for the class meeting you set up with this tool.\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row large-offset-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"columns large-2\",\n      style: hideGrid,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 25\n      }\n    }, \"Attendance Log\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"columns large-10\",\n      style: {\n        marginTop: 25\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(ToggleSwitch, {\n      checked: true,\n      onChange: this.toggleSwitch,\n      htmlId: \"testToggleSwitch1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row large-offset-1\",\n      style: {\n        marginTop: 40\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"large-2 columns\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      children: \"Cancel\",\n      color: \"blue-outline\",\n      onClick: this.cancelClick,\n      style: {\n        color: 'blue',\n        borderRadius: 5\n      },\n      ariaPressed: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"large-1 columns\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      children: \"Continue\",\n      color: \"blue\",\n      onClick: this.saveClick,\n      ariaPressed: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 25\n      }\n    }))));\n  }\n\n}\n\nexport default GeneralForm;\n/*\n<t>Last Day*</t>\n*/\n\n/*\n<Input\nname='startTime'\nlabel='Start Time*'\ntype='text'\ninputSize='large-15'\nplaceholder='8:40 AM'\nvalue={this.startTime}\nhtmlId='startTime'\n/>\n<Input\nname='endTime'\nlabel='End Time*'\ntype='text'\ninputSize='large-15'\nplaceholder='9:30 AM'\nvalue={this.endTime}\nhtmlId='endTime'\n/>\n*/","map":{"version":3,"sources":["/Users/pratison/Work/Cisco/Education/React/education-webex/src/pages/GeneralForm.js"],"names":["React","Input","Button","Select","SelectOption","DatePicker","TimePicker","ToggleSwitch","Redirect","Header","GeneralForm","Component","constructor","props","startTimeSelected","h","m","z","day","hour","setState","startTime","endTimeSelected","endTime","state","className","courseNumber","period","recurrence","date","Date","classNameError","courseNumberError","onTextChange","bind","toggleSwitch","saveClick","cancelClick","componentDidMount","obj","JSON","parse","sessionStorage","getItem","simulateClick","e","handleInputClick","target","value","name","errorMsg","message","type","removeItem","history","push","preventDefault","newClass","lastDay","classObj","setItem","stringify","pathname","studentList","location","uploadedFile","fileName","render","token","hideGrid","marginTop","paddingTop","fontSize","opts","background","color","borderRadius"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n    Input,\n    Button,\n    Select,\n    SelectOption,\n    DatePicker,\n    TimePicker,\n    ToggleSwitch,\n} from '@momentum-ui/react';\nimport {\n    Redirect,\n} from 'react-router-dom';\nimport Header from './Header.js';\n\nclass GeneralForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            className: null,\n            courseNumber: null,\n            period: '1',\n            startTime: '12:00PM',\n            endTime: '1:00PM',\n            recurrence: 'Daily (M-F)',\n            date: new Date(),\n            classNameError: {},\n            courseNumberError: {},\n        }\n        this.onTextChange = this.onTextChange.bind(this);\n        this.startTimeSelected = this.startTimeSelected.bind(this);\n        this.endTimeSelected = this.endTimeSelected.bind(this);\n        this.toggleSwitch = this.toggleSwitch.bind(this);\n        this.saveClick = this.saveClick.bind(this);\n        this.cancelClick = this.cancelClick.bind(this);\n\n    }\n\n     componentDidMount(props) {\n         const obj = JSON.parse(sessionStorage.getItem('classObj'));\n         if (obj !== null) {\n             this.setState({\n                 className: obj.className,\n                 courseNumber: obj.courseNumber,\n                 period: obj.period,\n                 startTime: obj.startTime,\n                 endTime: obj.endTime,\n                 recurrence: obj.recurrence,\n                 date: obj.date,\n             });\n         }\n     }\n\n     simulateClick(e) {\n         if (e !== null) {\n             e.handleInputClick();\n         }\n     }\n\n     onTextChange(e) {\n         const target = e.target;\n         const value = target.value;\n         const name = target.name;\n\n         let errorMsg = {};\n         if (value === '') {\n             errorMsg = { message: 'Please enter Class information', type: 'error' };\n         }\n         this.setState({\n           [name]: value,\n           [`${name}Error`]: errorMsg,\n         });\n\n     }\n\n     startTimeSelected = (h,m,z) => {\n         let day = 'AM';\n         let hour = h;\n         if (z === 0) {\n             day = 'PM';\n             hour = h - 12;\n         }\n         this.setState({\n            startTime: `${hour}:${m}${day}`,\n         });\n     }\n\n     endTimeSelected = (h,m,z) => {\n         let day = 'AM';\n         let hour = h;\n         if (z === 0) {\n             day = 'PM';\n             hour = h - 12;\n         }\n         this.setState({\n            endTime: `${hour}:${m}${day}`,\n         });\n     }\n\n     toggleSwitch(e) {\n\n     }\n\n     cancelClick(e) {\n         sessionStorage.removeItem('classObj');\n         sessionStorage.removeItem('studentList');\n         sessionStorage.removeItem('uploadedFile');\n         this.props.history.push('/addClasses');\n     }\n\n     saveClick(e) {\n         e.preventDefault();\n         if (this.state.className === null) {\n             this.setState({\n                 classNameError: { message: 'Please enter Class Name.', type: 'error' },\n             });\n         } else if (this.state.courseNumber === null) {\n             this.setState({\n                 courseNumberError: { message: 'Please enter student Course Number.', type: 'error' },\n             });\n         } else {\n             let newClass = {\n                 className: this.state.className,\n                 courseNumber: this.state.courseNumber,\n                 period: this.state.period,\n                 startTime: this.state.startTime,\n                 endTime: this.state.endTime,\n                 recurrence: this.state.recurrence,\n                 lastDay: this.state.date,\n             };\n\n             this.setState({\n                 classObj: newClass,\n             });\n\n             sessionStorage.setItem('classObj',JSON.stringify(newClass));\n\n              this.props.history.push({\n                  pathname: '/fileUpload',\n                  studentList: this.props.location.studentList,\n                  uploadedFile: this.props.location.fileName,\n              });\n         }\n     }\n\n    render() {\n        const token = sessionStorage.getItem('access_token');\n        if (token === null) {\n            return <Redirect to='/'/>;\n        }\n\n        const hideGrid = {\n            // background:'white',\n            // borderColor:'white'\n            marginTop: 20\n        };\n\n        let className = this.state.className;\n        let courseNumber = this.state.courseNumber;\n        let period = this.state.period;\n        let recurrence = this.state.recurrence;\n        let startTime = this.state.startTime;\n        let endTime = this.state.endTime;\n        let date = this.state.date;\n\n        return (\n            <div className=\"grid\" style={{paddingTop:20}}>\n                <Header tab='general'/>\n                <div className=\"row large-offset-1\">\n                    <div className=\"columns large-11\" style={hideGrid}>\n                        <p style={{fontSize:16}}>Enter Class Name, Course Number, and select the Period. This information will be used to create the title of the space that will be\n                            generated in Webex Teams. If you need to change anything, you’ll be able to edit this information later.</p>\n                    </div>\n                </div>\n                <div className=\"row large-offset-1\">\n                    <div className=\"columns large-4\" style={hideGrid}>\n                        <Input\n                            name='className'\n                            label='Class Name*'\n                            type='text'\n                            inputSize='large-15'\n                            placeholder='e.g. Algebra'\n                            value={className}\n                            onChange={this.onTextChange}\n                            messageArr={[ this.state.classNameError ]}\n                            htmlId='className'\n                          />\n                    </div>\n                    <div className=\"columns large-4\" style={hideGrid}>\n                        <Input\n                            name='courseNumber'\n                            label='Course Number*'\n                            type='text'\n                            inputSize='large-15'\n                            placeholder='123456'\n                            value={courseNumber}\n                            onChange={this.onTextChange}\n                            messageArr={[ this.state.courseNumberError ]}\n                            htmlId='courseNumber'\n                          />\n                    </div>\n                    <div className=\"columns large-4\" style={hideGrid}>\n                        Period\n                        <Select className='hide-grid' defaultValue={period} color='white' onSelect={(e, opts) => {this.setState({period: e[0].value})}}>\n                          <SelectOption value='1' label='1' />\n                          <SelectOption value='3' label='3' />\n                          <SelectOption value='6' label='6' />\n                        </Select>\n                    </div>\n                </div>\n                <div className=\"row large-offset-1\" >\n                    <div className=\"columns large-11\" style={hideGrid}>\n                        <p style={{fontSize:16}}>Enter the scheduling information for this class. Using this infomartion, a series of meeting from now until the end of the year will be created. Don’t worry, you can make changes later.</p>\n                    </div>\n                </div>\n                <div className=\"row large-offset-1\">\n                    <div className=\"columns large-2\" style={hideGrid}>\n                        Start Time*\n                        <TimePicker\n                            selectedTime={new Date()}\n                            inputId='startTime'\n                            onChange={this.startTimeSelected}\n                        />\n                        End Time*\n                        <TimePicker\n                            selectedTime={new Date()}\n                            inputId='endTime'\n                            onChange={this.endTimeSelected}\n                        />\n                        Recurrence\n                        <Select defaultValue={recurrence} onSelect={(e, opts) => {this.setState({recurrence: e[0].value})}}>\n                          <SelectOption value='Monday' label='Monday' />\n                          <SelectOption value='Tuesday' label='Tuesday' />\n                          <SelectOption value='Wednesday' label='Wednesday' />\n                          <SelectOption value='Thursday' label='Thursday' />\n                          <SelectOption value='Friday' label='Friday' />\n                          <SelectOption value='Daily (M-F)' label='Daily (M-F)' />\n                        </Select>\n                    </div>\n                    <div className=\"columns large-8\" style={{marginTop:10}}>\n                        <DatePicker direction='bottom-left' shouldCloseOnSelect={false} onSelect={(e, date) => this.setState({ date: date })} ref={this.simulateClick}>\n                            <Input style={{background:'transparent'}}\n                                inputSize='large-10'\n                                value='Last Day*'\n                                readOnly\n                              />\n                        </DatePicker>\n                    </div>\n                </div>\n                <div className=\"row large-offset-1\">\n                    <div className=\"columns large-11\" style={{marginTop:35}}>\n                        <p style={{fontSize:16}}>The Attendance Log tracks attendance of students for the class meeting you set up with this tool.</p>\n                    </div>\n                </div>\n                <div className=\"row large-offset-1\">\n                    <div className=\"columns large-2\" style={hideGrid}>\n                        <h3>Attendance Log</h3>\n                    </div>\n                    <div className=\"columns large-10\" style={{marginTop:25}}>\n                        <ToggleSwitch\n                                checked={true}\n                                onChange={this.toggleSwitch}\n                                htmlId='testToggleSwitch1'\n                          />\n                    </div>\n                </div>\n                <div className=\"row large-offset-1\" style={{marginTop:40}}>\n                    <div className=\"large-2 columns\">\n                        <Button\n                            children='Cancel'\n                            color='blue-outline'\n                            onClick={this.cancelClick}\n                            style={{color:'blue',borderRadius:5}}\n                            ariaPressed={false}\n                          />\n                    </div>\n                    <div className=\"large-1 columns\">\n                        <Button\n                            children='Continue'\n                            color='blue'\n                            onClick={this.saveClick}\n                            ariaPressed={false}\n                          />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default GeneralForm;\n\n/*\n<t>Last Day*</t>\n*/\n\n/*\n<Input\nname='startTime'\nlabel='Start Time*'\ntype='text'\ninputSize='large-15'\nplaceholder='8:40 AM'\nvalue={this.startTime}\nhtmlId='startTime'\n/>\n<Input\nname='endTime'\nlabel='End Time*'\ntype='text'\ninputSize='large-15'\nplaceholder='9:30 AM'\nvalue={this.endTime}\nhtmlId='endTime'\n/>\n*/\n"]},"metadata":{},"sourceType":"module"}