{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _promise = require('babel-runtime/core-js/promise');\n\nvar _promise2 = _interopRequireDefault(_promise);\n\nvar _webexCore = require('@webex/webex-core');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * @class\n * @ignore\n */\n\n\nvar PresenceBatcher = _webexCore.Batcher.extend({\n  namespace: 'Presence',\n\n  /**\n   * @instance\n   * @memberof PresenceBatcher\n   * @param {HttpResponseObject} res\n   * @returns {Promise}\n   */\n  handleHttpSuccess: function handleHttpSuccess(res) {\n    var _this = this;\n\n    return _promise2.default.all(res.body.statusList.map(function (presenceResponse) {\n      return _this.handleItemSuccess(presenceResponse.subject, presenceResponse);\n    }));\n  },\n\n  /**\n   * @instance\n   * @memberof PresenceBatcher\n   * @param {string} item\n   * @param {Object} response\n   * @returns {Promise}\n   */\n  handleItemFailure: function handleItemFailure(item, response) {\n    return this.getDeferredForResponse(item).then(function (defer) {\n      defer.reject(response);\n    });\n  },\n\n  /**\n   * @instance\n   * @memberof PresenceBatcher\n   * @param {string} item\n   * @param {Object} response\n   * @returns {Promise}\n   */\n  handleItemSuccess: function handleItemSuccess(item, response) {\n    return this.getDeferredForResponse(item).then(function (defer) {\n      defer.resolve(response);\n    });\n  },\n\n  /**\n   * @instance\n   * @memberof PresenceBatcher\n   * @param {string} id\n   * @returns {Promise<string>}\n   */\n  fingerprintRequest: function fingerprintRequest(id) {\n    return _promise2.default.resolve(id);\n  },\n\n  /**\n   * @instance\n   * @memberof PresenceBatcher\n   * @param {string} id\n   * @returns {Promise<string>}\n   */\n  fingerprintResponse: function fingerprintResponse(id) {\n    return _promise2.default.resolve(id);\n  },\n\n  /**\n   * @instance\n   * @memberof PresenceBatcher\n   * @param {Array} ids\n   * @returns {Promise<Array>}\n   */\n  prepareRequest: function prepareRequest(ids) {\n    return _promise2.default.resolve(ids);\n  },\n\n  /**\n   * @instance\n   * @memberof PresenceBatcher\n   * @param {Object} subjects\n   * @returns {Promise<HttpResponseObject>}\n   */\n  submitHttpRequest: function submitHttpRequest(subjects) {\n    return this.webex.request({\n      method: 'POST',\n      api: 'apheleia',\n      resource: 'compositions',\n      body: {\n        subjects: subjects\n      }\n    });\n  }\n});\n/*!\n * Copyright (c) 2015-2019 Cisco Systems, Inc. See LICENSE file.\n */\n\n\nexports.default = PresenceBatcher;","map":{"version":3,"sources":["presence-batcher.js"],"names":["PresenceBatcher","namespace","handleHttpSuccess","presenceResponse","handleItemFailure","defer","handleItemSuccess","fingerprintRequest","fingerprintResponse","prepareRequest","submitHttpRequest","method","api","resource","body","subjects"],"mappings":";;;;;;;;;;AAIA,IAAA,UAAA,GAAA,OAAA,CAAA,mBAAA,CAAA;;;;;;;AAEA;;;;;;AAIA,IAAMA,eAAAA,GAAkB,UAAA,CAAA,OAAA,CAAA,MAAA,CAAe;AACrCC,EAAAA,SAAAA,EADqC,UAAA;;AAGrC;;;;;;AAMAC,EAAAA,iBATqC,EAAA,SAAA,iBAAA,CAAA,GAAA,EASd;AAAA,QAAA,KAAA,GAAA,IAAA;;AACrB,WAAO,SAAA,CAAA,OAAA,CAAA,GAAA,CAAY,GAAA,CAAA,IAAA,CAAA,UAAA,CAAA,GAAA,CAAwB,UAAA,gBAAA,EAAA;AAAA,aACzC,KAAA,CAAA,iBAAA,CAAuBC,gBAAAA,CAAvB,OAAA,EADyC,gBACzC,CADyC;AAA3C,KAAmB,CAAZ,CAAP;AAVmC,GAAA;;AAcrC;;;;;;;AAOAC,EAAAA,iBArBqC,EAAA,SAAA,iBAAA,CAAA,IAAA,EAAA,QAAA,EAqBH;AAChC,WAAO,KAAA,sBAAA,CAAA,IAAA,EAAA,IAAA,CACC,UAAA,KAAA,EAAW;AACfC,MAAAA,KAAAA,CAAAA,MAAAA,CAAAA,QAAAA;AAFJ,KAAO,CAAP;AAtBmC,GAAA;;AA4BrC;;;;;;;AAOAC,EAAAA,iBAnCqC,EAAA,SAAA,iBAAA,CAAA,IAAA,EAAA,QAAA,EAmCH;AAChC,WAAO,KAAA,sBAAA,CAAA,IAAA,EAAA,IAAA,CACC,UAAA,KAAA,EAAW;AACfD,MAAAA,KAAAA,CAAAA,OAAAA,CAAAA,QAAAA;AAFJ,KAAO,CAAP;AApCmC,GAAA;;AA0CrC;;;;;;AAMAE,EAAAA,kBAhDqC,EAAA,SAAA,kBAAA,CAAA,EAAA,EAgDd;AACrB,WAAO,SAAA,CAAA,OAAA,CAAA,OAAA,CAAP,EAAO,CAAP;AAjDmC,GAAA;;AAoDrC;;;;;;AAMAC,EAAAA,mBA1DqC,EAAA,SAAA,mBAAA,CAAA,EAAA,EA0Db;AACtB,WAAO,SAAA,CAAA,OAAA,CAAA,OAAA,CAAP,EAAO,CAAP;AA3DmC,GAAA;;AA8DrC;;;;;;AAMAC,EAAAA,cApEqC,EAAA,SAAA,cAAA,CAAA,GAAA,EAoEjB;AAClB,WAAO,SAAA,CAAA,OAAA,CAAA,OAAA,CAAP,GAAO,CAAP;AArEmC,GAAA;;AAwErC;;;;;;AAMAC,EAAAA,iBA9EqC,EAAA,SAAA,iBAAA,CAAA,QAAA,EA8ET;AAC1B,WAAO,KAAA,KAAA,CAAA,OAAA,CAAmB;AACxBC,MAAAA,MAAAA,EADwB,MAAA;AAExBC,MAAAA,GAAAA,EAFwB,UAAA;AAGxBC,MAAAA,QAAAA,EAHwB,cAAA;AAIxBC,MAAAA,IAAAA,EAAM;AAACC,QAAAA,QAAAA,EAAD;AAAA;AAJkB,KAAnB,CAAP;AAMD;AArFoC,CAAf,CAAxB;AAVA;;;;;kBAkGef,e","sourcesContent":["/*!\n * Copyright (c) 2015-2019 Cisco Systems, Inc. See LICENSE file.\n */\n\nimport {Batcher} from '@webex/webex-core';\n\n/**\n * @class\n * @ignore\n */\nconst PresenceBatcher = Batcher.extend({\n  namespace: 'Presence',\n\n  /**\n   * @instance\n   * @memberof PresenceBatcher\n   * @param {HttpResponseObject} res\n   * @returns {Promise}\n   */\n  handleHttpSuccess(res) {\n    return Promise.all(res.body.statusList.map((presenceResponse) =>\n      this.handleItemSuccess(presenceResponse.subject, presenceResponse)));\n  },\n\n  /**\n   * @instance\n   * @memberof PresenceBatcher\n   * @param {string} item\n   * @param {Object} response\n   * @returns {Promise}\n   */\n  handleItemFailure(item, response) {\n    return this.getDeferredForResponse(item)\n      .then((defer) => {\n        defer.reject(response);\n      });\n  },\n\n  /**\n   * @instance\n   * @memberof PresenceBatcher\n   * @param {string} item\n   * @param {Object} response\n   * @returns {Promise}\n   */\n  handleItemSuccess(item, response) {\n    return this.getDeferredForResponse(item)\n      .then((defer) => {\n        defer.resolve(response);\n      });\n  },\n\n  /**\n   * @instance\n   * @memberof PresenceBatcher\n   * @param {string} id\n   * @returns {Promise<string>}\n   */\n  fingerprintRequest(id) {\n    return Promise.resolve(id);\n  },\n\n  /**\n   * @instance\n   * @memberof PresenceBatcher\n   * @param {string} id\n   * @returns {Promise<string>}\n   */\n  fingerprintResponse(id) {\n    return Promise.resolve(id);\n  },\n\n  /**\n   * @instance\n   * @memberof PresenceBatcher\n   * @param {Array} ids\n   * @returns {Promise<Array>}\n   */\n  prepareRequest(ids) {\n    return Promise.resolve(ids);\n  },\n\n  /**\n   * @instance\n   * @memberof PresenceBatcher\n   * @param {Object} subjects\n   * @returns {Promise<HttpResponseObject>}\n   */\n  submitHttpRequest(subjects) {\n    return this.webex.request({\n      method: 'POST',\n      api: 'apheleia',\n      resource: 'compositions',\n      body: {subjects}\n    });\n  }\n});\n\nexport default PresenceBatcher;\n"]},"metadata":{},"sourceType":"script"}