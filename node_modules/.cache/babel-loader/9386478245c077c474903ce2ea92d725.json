{"ast":null,"code":"var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n\nimport { decorate } from './private/utils';\nvar labels = {}; // Exported for mocking in tests\n\nexport var defaultConsole = {\n  time: console.time ? console.time.bind(console) : function (label) {\n    labels[label] = new Date();\n  },\n  timeEnd: console.timeEnd ? console.timeEnd.bind(console) : function (label) {\n    var timeNow = new Date();\n    var timeTaken = timeNow - labels[label];\n    delete labels[label];\n    console.log(label + ': ' + timeTaken + 'ms');\n  }\n};\nvar count = 0;\n\nfunction handleDescriptor(target, key, descriptor, _ref) {\n  var _ref2 = _slicedToArray(_ref, 2),\n      _ref2$ = _ref2[0],\n      prefix = _ref2$ === undefined ? null : _ref2$,\n      _ref2$2 = _ref2[1],\n      console = _ref2$2 === undefined ? defaultConsole : _ref2$2;\n\n  var fn = descriptor.value;\n\n  if (prefix === null) {\n    prefix = target.constructor.name + '.' + key;\n  }\n\n  if (typeof fn !== 'function') {\n    throw new SyntaxError('@time can only be used on functions, not: ' + fn);\n  }\n\n  return _extends({}, descriptor, {\n    value: function value() {\n      var label = prefix + '-' + count;\n      count++;\n      console.time(label);\n\n      try {\n        return fn.apply(this, arguments);\n      } finally {\n        console.timeEnd(label);\n      }\n    }\n  });\n}\n\nexport default function time() {\n  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  return decorate(handleDescriptor, args);\n}","map":{"version":3,"sources":["/Users/pratison/Work/Cisco/Education/React/education-webex/node_modules/core-decorators/es/time.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","_slicedToArray","sliceIterator","arr","_arr","_n","_d","_e","undefined","_i","Symbol","iterator","_s","next","done","push","value","err","Array","isArray","TypeError","decorate","labels","defaultConsole","time","console","bind","label","Date","timeEnd","timeNow","timeTaken","log","count","handleDescriptor","descriptor","_ref","_ref2","_ref2$","prefix","_ref2$2","fn","constructor","name","SyntaxError","apply","_len","args","_key"],"mappings":"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","sourcesContent":["var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nimport { decorate } from './private/utils';\n\nvar labels = {};\n\n// Exported for mocking in tests\nexport var defaultConsole = {\n  time: console.time ? console.time.bind(console) : function (label) {\n    labels[label] = new Date();\n  },\n  timeEnd: console.timeEnd ? console.timeEnd.bind(console) : function (label) {\n    var timeNow = new Date();\n    var timeTaken = timeNow - labels[label];\n    delete labels[label];\n    console.log(label + ': ' + timeTaken + 'ms');\n  }\n};\n\nvar count = 0;\n\nfunction handleDescriptor(target, key, descriptor, _ref) {\n  var _ref2 = _slicedToArray(_ref, 2),\n      _ref2$ = _ref2[0],\n      prefix = _ref2$ === undefined ? null : _ref2$,\n      _ref2$2 = _ref2[1],\n      console = _ref2$2 === undefined ? defaultConsole : _ref2$2;\n\n  var fn = descriptor.value;\n\n  if (prefix === null) {\n    prefix = target.constructor.name + '.' + key;\n  }\n\n  if (typeof fn !== 'function') {\n    throw new SyntaxError('@time can only be used on functions, not: ' + fn);\n  }\n\n  return _extends({}, descriptor, {\n    value: function value() {\n      var label = prefix + '-' + count;\n      count++;\n      console.time(label);\n\n      try {\n        return fn.apply(this, arguments);\n      } finally {\n        console.timeEnd(label);\n      }\n    }\n  });\n}\n\nexport default function time() {\n  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  return decorate(handleDescriptor, args);\n}"]},"metadata":{},"sourceType":"module"}