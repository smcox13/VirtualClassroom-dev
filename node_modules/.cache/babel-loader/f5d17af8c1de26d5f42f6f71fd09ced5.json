{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = undefined;\n\nvar _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');\n\nvar _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _find2 = require('lodash/find');\n\nvar _find3 = _interopRequireDefault(_find2);\n\nvar _collection = require('../common/collection');\n\nvar _collection2 = _interopRequireDefault(_collection);\n\nvar _constants = require('../constants');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * @class MeetingInfoCollection\n */\n\n\nvar MeetingInfoCollection = function (_Collection) {\n  (0, _inherits3.default)(MeetingInfoCollection, _Collection);\n  /**\n   * @memberof MeetingInfoCollection\n   * @constructor\n   * @public\n   */\n\n  function MeetingInfoCollection() {\n    (0, _classCallCheck3.default)(this, MeetingInfoCollection);\n\n    var _this = (0, _possibleConstructorReturn3.default)(this, (MeetingInfoCollection.__proto__ || (0, _getPrototypeOf2.default)(MeetingInfoCollection)).call(this, 'meetingInfos'));\n\n    _this.namespace = _constants.MEETINGS;\n    return _this;\n  }\n  /**\n   * @param {String} id ID of the meeting info you wish to retreive\n   * @returns {MeetingInfo} returns a meeting info instance\n   * @public\n   * @memberof MeetingInfoCollection\n   */\n\n\n  (0, _createClass3.default)(MeetingInfoCollection, [{\n    key: 'get',\n    value: function get(id) {\n      if (this.meetingInfos[id]) {\n        return this.meetingInfos[id];\n      }\n\n      return (0, _find3.default)(this.meetingInfos, function (info) {\n        return info.sipUrl === id || info.locusId === id || info.userId === id || info.meetingLink === id;\n      });\n    }\n  }]);\n  return MeetingInfoCollection;\n}(_collection2.default);\n\nexports.default = MeetingInfoCollection;","map":{"version":3,"sources":["collection.js"],"names":["MeetingInfoCollection","Collection","namespace","MEETINGS","id","info"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,IAAA,WAAA,GAAA,OAAA,CAAA,sBAAA,CAAA;;;;AACA,IAAA,UAAA,GAAA,OAAA,CAAA,cAAA,CAAA;;;;;;;AAEA;;;;;IAGqBA,qB;;AAGnB;;;;;;AAKA,WAAA,qBAAA,GAAc;AAAA,KAAA,GAAA,gBAAA,CAAA,OAAA,EAAA,IAAA,EAAA,qBAAA;;AAAA,QAAA,KAAA,GAAA,CAAA,GAAA,2BAAA,CAAA,OAAA,EAAA,IAAA,EAAA,CAAA,qBAAA,CAAA,SAAA,IAAA,CAAA,GAAA,gBAAA,CAAA,OAAA,EAAA,qBAAA,CAAA,EAAA,IAAA,CAAA,IAAA,EAAA,cAAA,CAAA,CAAA;;AAAA,IAAA,KAAA,CAPdE,SAOc,GAPFC,UAAAA,CAAAA,QAOE;AAAA,WAAA,KAAA;AAEb;AAED;;;;;;;;;;wBAMIC,E,EAAI;AACN,UAAI,KAAA,YAAA,CAAJ,EAAI,CAAJ,EAA2B;AACzB,eAAO,KAAA,YAAA,CAAP,EAAO,CAAP;AACD;;AAED,aAAO,CAAA,GAAA,MAAA,CAAA,OAAA,EACL,KADK,YAAA,EAEL,UAAA,IAAA,EAAA;AAAA,eAAUC,IAAAA,CAAAA,MAAAA,KAAAA,EAAAA,IAAsBA,IAAAA,CAAAA,OAAAA,KAAtBA,EAAAA,IAA6CA,IAAAA,CAAAA,MAAAA,KAA7CA,EAAAA,IAAmEA,IAAAA,CAAAA,WAAAA,KAA7E,EAAA;AAFF,OAAO,CAAP;AAID;;;EA3BgDJ,YAAAA,CAAAA,O;;kBAA9BD,qB","sourcesContent":["import {find} from 'lodash';\n\nimport Collection from '../common/collection';\nimport {MEETINGS} from '../constants';\n\n/**\n * @class MeetingInfoCollection\n */\nexport default class MeetingInfoCollection extends Collection {\n  namespace = MEETINGS;\n\n  /**\n   * @memberof MeetingInfoCollection\n   * @constructor\n   * @public\n   */\n  constructor() {\n    super('meetingInfos');\n  }\n\n  /**\n   * @param {String} id ID of the meeting info you wish to retreive\n   * @returns {MeetingInfo} returns a meeting info instance\n   * @public\n   * @memberof MeetingInfoCollection\n   */\n  get(id) {\n    if (this.meetingInfos[id]) {\n      return this.meetingInfos[id];\n    }\n\n    return find(\n      this.meetingInfos,\n      (info) => info.sipUrl === id || info.locusId === id || info.userId === id || info.meetingLink === id\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"script"}