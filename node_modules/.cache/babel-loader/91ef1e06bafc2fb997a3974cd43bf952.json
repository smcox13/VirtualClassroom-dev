{"ast":null,"code":"function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n/** @component event-overlay */\n\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactDOM from 'react-dom';\nimport omit from 'lodash/omit';\nimport FocusLock from 'react-focus-lock';\nvar defaultDims = {\n  offsetTop: 0,\n  bottom: 0,\n  center: 0,\n  height: 0,\n  left: 0,\n  middle: 0,\n  right: 0,\n  top: 0,\n  width: 0\n};\n\nvar EventOverlay = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(EventOverlay, _React$Component);\n\n  function EventOverlay() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n    _this.state = {\n      absoluteParent: null,\n      containerParent: null,\n      isOpen: false,\n      scrollParent: null,\n      transformParent: null,\n      visibleDirection: _this.props.direction\n    };\n\n    _this.componentDidMount = function () {\n      _this.props.isOpen && _this.forceUpdate();\n\n      _this.addHandlers();\n    };\n\n    _this.componentDidUpdate = function (prevProps, prevState) {\n      var direction = _this.props.direction;\n      var isOpen = _this.state.isOpen;\n\n      if (isOpen && prevState.isOpen !== isOpen || prevProps.direction !== direction) {\n        return _this.forceUpdate(function () {\n          return _this.isVisible();\n        });\n      } else if (!isOpen && prevState.isOpen !== isOpen) {\n        _this.focusOnAnchorNode();\n      }\n    };\n\n    _this.componentWillUnmount = function () {\n      _this.removeHandlers();\n    };\n\n    _this.addHandlers = function () {\n      var _this$props = _this.props,\n          absoluteParentID = _this$props.absoluteParentID,\n          allowClickAway = _this$props.allowClickAway,\n          boundingParentID = _this$props.boundingParentID,\n          checkOverflow = _this$props.checkOverflow,\n          closeOnClick = _this$props.closeOnClick,\n          isContained = _this$props.isContained,\n          scrollParentID = _this$props.scrollParentID,\n          transformParentID = _this$props.transformParentID;\n      _this.handleResize = _this.isVisible;\n      _this.handleScroll = _this.isVisible;\n      var element = ReactDOM.findDOMNode(_this.container);\n      var elementParent = element && element.parentElement;\n\n      var elementParents = elementParent && _this.findParents(elementParent);\n\n      var scrollParent;\n\n      if (allowClickAway) {\n        document.addEventListener('click', _this.handleAllowClickAway, true);\n        document.addEventListener('keydown', _this.handleKeyDown, false);\n      }\n\n      closeOnClick && document.addEventListener('click', _this.handleCloseOnClick, false);\n      window.addEventListener('resize', _this.handleResize, false);\n      document.addEventListener('scroll', _this.handleScroll, false);\n\n      if (scrollParentID) {\n        scrollParent = document.getElementById(scrollParentID);\n        scrollParent && scrollParent.addEventListener('scroll', _this.handleScroll, false);\n      }\n\n      if (checkOverflow) {\n        scrollParent = !scrollParent && elementParents && _this.findScrollParent(elementParents, ['overflow', 'overflow-y', 'overflow-x']);\n        scrollParent && scrollParent.addEventListener('scroll', _this.handleScroll, false);\n      }\n\n      var transformParent = transformParentID ? document.getElementById(transformParentID) : elementParents && _this.findTransformParent(elementParents, ['transform'], 1);\n      var absoluteParent = absoluteParentID ? document.getElementById(absoluteParentID) : elementParents && _this.findAbsoluteParent(elementParents, ['position'], 1);\n      var containerParent = isContained && document.getElementById(boundingParentID) || scrollParent;\n      _this.observer = new MutationObserver(_this.isVisible);\n\n      _this.observer.observe(document.body, {\n        attributes: false,\n        characterData: false,\n        childList: true,\n        subtree: true,\n        attributeOldValue: false,\n        characterDataOldValue: false\n      });\n\n      _this.setState({\n        absoluteParent: absoluteParent,\n        containerParent: containerParent,\n        scrollParent: scrollParent,\n        transformParent: transformParent\n      }, function () {\n        return _this.isVisible();\n      });\n    };\n\n    _this.findOverflow = function (node, searchProps) {\n      return searchProps.reduce(function (agg, prop) {\n        var overflowElement = window.getComputedStyle(ReactDOM.findDOMNode(node))[prop];\n        return !overflowElement || agg.includes(overflowElement) ? agg : agg += overflowElement;\n      }, '');\n    };\n\n    _this.findParents = function (ele, tempParentArr) {\n      if (tempParentArr === void 0) {\n        tempParentArr = [];\n      }\n\n      return !ele.parentElement ? tempParentArr : _this.findParents(ele.parentElement, tempParentArr.concat(ele));\n    };\n\n    _this.findAbsoluteParent = function (elementParents, searchProps, startIndex) {\n      var absoluteElement;\n      var idx = startIndex;\n\n      while (!absoluteElement && elementParents[idx]) {\n        var currentAbsoluteElement = _this.findOverflow(elementParents[idx], searchProps);\n\n        if (/(absolute)/.test(currentAbsoluteElement)) {\n          return absoluteElement = elementParents[idx];\n        }\n\n        idx++;\n      }\n\n      return absoluteElement ? absoluteElement : null;\n    };\n\n    _this.findScrollParent = function (elementParents, searchProps) {\n      var overflowElement = null;\n      var idx = 1;\n\n      while (!overflowElement && elementParents[idx]) {\n        var currentOverflowElement = _this.findOverflow(elementParents[idx], searchProps);\n\n        if (/(auto|scroll|hidden)/.test(currentOverflowElement)) {\n          return overflowElement = elementParents[idx];\n        }\n\n        idx++;\n      }\n\n      return overflowElement ? overflowElement : null;\n    };\n\n    _this.findTransformParent = function (elementParents, searchProps, startIndex) {\n      var transformElement = null;\n      var idx = startIndex;\n\n      while (!transformElement && elementParents[idx]) {\n        var potentialTransformElement = _this.findOverflow(elementParents[idx], ['will-change']);\n\n        var currentTransformElement = _this.findOverflow(elementParents[idx], searchProps);\n\n        if (/(transform)/.test(potentialTransformElement) || currentTransformElement !== 'none') {\n          return transformElement = elementParents[idx];\n        }\n\n        idx++;\n      }\n\n      return transformElement ? transformElement : null;\n    };\n\n    _this.focusOnAnchorNode = function () {\n      var anchorNode = _this.props.anchorNode;\n      var domAnchorNode = anchorNode && (anchorNode.props ? anchorNode.props.onClick : false) && ReactDOM.findDOMNode(anchorNode);\n      domAnchorNode && domAnchorNode.focus();\n    };\n\n    _this.getAnchorPosition = function (node) {\n      var transformParent = _this.state.transformParent;\n      var rect = node.getBoundingClientRect();\n\n      var transformParentDims = transformParent && _this.getElementPosition(transformParent);\n\n      var parentRect = transformParentDims || defaultDims;\n      var anchorPosition = {\n        top: rect.top - parentRect.top,\n        left: rect.left - parentRect.left,\n        width: node.offsetWidth,\n        height: node.offsetHeight\n      };\n      anchorPosition.right = (rect.right || anchorPosition.left + anchorPosition.width) - parentRect.left;\n      anchorPosition.bottom = (rect.bottom || anchorPosition.top + anchorPosition.height) - parentRect.top;\n      anchorPosition.middle = anchorPosition.left + (anchorPosition.right - anchorPosition.left) / 2;\n      anchorPosition.center = anchorPosition.top + (anchorPosition.bottom - anchorPosition.top) / 2;\n      return anchorPosition;\n    };\n\n    _this.getAbsoluteAnchorPosition = function (node, absoluteParentDims) {\n      var scrollParent = _this.state.scrollParent;\n      var rect = node.getBoundingClientRect();\n      var parentRect = absoluteParentDims;\n      var scrollAdjust = scrollParent && scrollParent.scrollTop || 0;\n      var anchorPosition = {\n        top: absoluteParentDims.offsetTop ? absoluteParentDims.offsetTop + node.offsetTop - scrollAdjust : rect.top - parentRect.top,\n        left: absoluteParentDims.offsetLeft ? absoluteParentDims.offsetLeft - node.offsetLeft : rect.left - parentRect.left,\n        width: node.offsetWidth,\n        height: node.offsetHeight\n      };\n      anchorPosition.right = (rect.right || anchorPosition.left + anchorPosition.width) - parentRect.left;\n      anchorPosition.bottom = anchorPosition.top + anchorPosition.height;\n      anchorPosition.middle = anchorPosition.left + (anchorPosition.right - anchorPosition.left) / 2;\n      anchorPosition.center = anchorPosition.top + (anchorPosition.bottom - anchorPosition.top) / 2;\n      return anchorPosition;\n    };\n\n    _this.getElementPosition = function (element) {\n      var elementRect = element.getBoundingClientRect();\n      return {\n        offsetTop: element.offsetTop,\n        offsetLeft: element.offsetLeft,\n        bottom: elementRect.bottom,\n        top: elementRect.top,\n        left: elementRect.left,\n        height: elementRect.height,\n        width: elementRect.width,\n        hasAbsParent: element.offsetTop !== elementRect.top || element.offsetLeft !== elementRect.left\n      };\n    };\n\n    _this.getOrigin = function () {\n      var side = _this.state.visibleDirection.split('-')[0];\n\n      var alignment = _this.props.direction.split('-')[1];\n\n      var origin = {\n        anchor: {},\n        target: {}\n      };\n\n      if (side === 'top' || side === 'bottom') {\n        origin.anchor.vertical = side;\n        origin.anchor.horizontal = alignment === 'center' ? 'middle' : alignment;\n        origin.target.vertical = side === 'top' ? 'bottom' : 'top';\n        origin.target.horizontal = alignment === 'center' ? 'middle' : alignment;\n      }\n\n      if (side === 'left' || side === 'right') {\n        origin.anchor.vertical = alignment;\n        origin.anchor.horizontal = side;\n        origin.target.vertical = alignment;\n        origin.target.horizontal = side === 'left' ? 'right' : 'left';\n      }\n\n      return origin;\n    };\n\n    _this.getTargetPosition = function (targetNode) {\n      return {\n        top: 0,\n        center: targetNode.offsetHeight / 2,\n        bottom: targetNode.offsetHeight,\n        left: 0,\n        middle: targetNode.offsetWidth / 2,\n        right: targetNode.offsetWidth\n      };\n    };\n\n    _this.handleAllowClickAway = function (e) {\n      if (!_this.props.isOpen) return;\n      var anchorNode = ReactDOM.findDOMNode(_this.props.anchorNode);\n      return _this.container && !anchorNode.contains(e.target) && !ReactDOM.findDOMNode(_this.container).contains(e.target) && _this.handleClickAway(e);\n    };\n\n    _this.handleClickAway = function (e) {\n      var close = _this.props.close;\n\n      _this.focusOnAnchorNode();\n\n      close && close(e);\n    };\n\n    _this.handleCloseOnClick = function (e) {\n      if (!_this.props.isOpen) return;\n      var closeOnClick = _this.props.closeOnClick;\n      return closeOnClick && _this.container && ReactDOM.findDOMNode(_this.container).contains(e.target) && _this.handleClickAway(e);\n    };\n\n    _this.handleKeyDown = function (e) {\n      if (!_this.props.isOpen) return;\n      if (e.keyCode === 27) return _this.handleClickAway(e);\n      var anchorNode = ReactDOM.findDOMNode(_this.props.anchorNode);\n      return _this.container && anchorNode && !anchorNode.contains(e.target) && !ReactDOM.findDOMNode(_this.container).contains(e.target) && _this.handleClickAway(e);\n    };\n\n    _this.isVisible = function () {\n      var _this$props2 = _this.props,\n          anchorNode = _this$props2.anchorNode,\n          direction = _this$props2.direction,\n          isOpen = _this$props2.isOpen,\n          isDynamic = _this$props2.isDynamic;\n      if (!isOpen) return;\n      if (!isDynamic) return _this.setPlacement();\n      var anchorElement = ReactDOM.findDOMNode(anchorNode);\n      var element = ReactDOM.findDOMNode(_this.container);\n      var side = direction.split('-')[0];\n      var alignment = direction.split('-')[1];\n      var anchorDims = anchorElement && anchorElement.getBoundingClientRect();\n      var elementBoundingRect = element.getBoundingClientRect();\n      var elementParent = element.parentElement;\n      ['top', 'bottom'].includes(side) ? _this.setVerticalClass(alignment, anchorDims, elementBoundingRect, elementParent) : _this.setHorizontalClass(alignment, anchorDims, elementBoundingRect, elementParent);\n    };\n\n    _this.removeHandlers = function () {\n      var scrollParent = _this.state.scrollParent;\n      document.removeEventListener('click', _this.handleAllowClickAway, true);\n      document.removeEventListener('click', _this.handleCloseOnClick, false);\n      document.removeEventListener('keydown', _this.handleKeyDown, false);\n      window.removeEventListener('resize', _this.handleResize, true);\n      document.removeEventListener('scroll', _this.handleScroll, false);\n      scrollParent && scrollParent.removeEventListener('scroll', _this.handleScroll, false);\n      _this.observer && _this.observer.disconnect() && _this.observer.takeRecords();\n    };\n\n    _this.setArrowPlacement = function (anchor, container) {\n      var arrow = _this.arrow;\n      var targetOffset = _this.props.targetOffset;\n      var visibleDirection = _this.state.visibleDirection;\n      var side = visibleDirection.split('-')[0];\n      var verticalOffset = targetOffset.vertical || 0;\n      var horizontalOffset = targetOffset.horizontal || 0;\n      var isAnchorWider = anchor.width > container.right;\n      var isAnchorTaller = anchor.height > container.bottom;\n      var arrowLeft = isAnchorWider && !visibleDirection.includes('center') ? visibleDirection.includes('left') ? container.middle + anchor.left : anchor.right - container.middle : anchor.middle;\n      var arrowTop = isAnchorTaller && !visibleDirection.includes('center') ? visibleDirection.includes('top') ? container.center + anchor.top : anchor.bottom - container.center : anchor.center;\n\n      switch (side) {\n        case 'top':\n          arrow.style.left = arrowLeft + \"px\";\n          arrow.style.top = anchor.top - verticalOffset + \"px\";\n          break;\n\n        case 'bottom':\n          arrow.style.left = arrowLeft + \"px\";\n          arrow.style.top = anchor.bottom + verticalOffset + \"px\";\n          break;\n\n        case 'left':\n          arrow.style.left = anchor.left - horizontalOffset + \"px\";\n          arrow.style.top = arrowTop + \"px\";\n          break;\n\n        case 'right':\n          arrow.style.left = anchor.right + horizontalOffset + \"px\";\n          arrow.style.top = arrowTop + \"px\";\n          break;\n      }\n    };\n\n    _this.setBoundingBox = function (side, targetNode, anchorPosition) {\n      var _this$props3 = _this.props,\n          checkOverflow = _this$props3.checkOverflow,\n          isContained = _this$props3.isContained,\n          maxHeight = _this$props3.maxHeight,\n          maxWidth = _this$props3.maxWidth,\n          showArrow = _this$props3.showArrow,\n          targetOffset = _this$props3.targetOffset;\n      var _this$state = _this.state,\n          absoluteParent = _this$state.absoluteParent,\n          scrollParent = _this$state.scrollParent,\n          transformParent = _this$state.transformParent;\n      var arrowDims = showArrow && ReactDOM.findDOMNode(_this.arrow).getBoundingClientRect();\n      var checkVertical = isContained === 'vertical';\n      var checkHorizontal = isContained === 'horizontal';\n      var element = ReactDOM.findDOMNode(_this.container);\n      var documentScrollTop = document.documentElement.scrollTop;\n      var documentBottom = document.documentElement.scrollHeight;\n      var windowBottom = window.pageXOffset + window.innerHeight;\n      var documentRight = document.documentElement.offsetWidth;\n      var arrowHeight = arrowDims && arrowDims.height || 0;\n      var arrowWidth = arrowDims && arrowDims.width || 0;\n      var offsetHeight = targetOffset.vertical || 0;\n      var offsetWidth = targetOffset.horizontal || 0;\n      var elementDims = element.getBoundingClientRect();\n      var elementVerticalHeight = elementDims.height + offsetHeight;\n      var elementVerticalWidth = elementDims.width + offsetWidth;\n\n      var getAvailableTopSpace = function getAvailableTopSpace(top) {\n        return top + anchorPosition.top - (_this.elementHeight + arrowHeight);\n      };\n\n      var scrollParentDimsv2 = _this.setBoundingContainer(scrollParent);\n\n      var scrollParentDims = scrollParent ? scrollParent.getBoundingClientRect() : defaultDims;\n\n      var absoluteParentDims = absoluteParent && _this.getElementPosition(absoluteParent);\n\n      var transformParentDims = transformParent && _this.getElementPosition(transformParent);\n\n      var scrollParentScrollTop = scrollParent && scrollParent.offsetTop || 0;\n\n      if (targetNode && targetNode.style && !targetNode.style.bottom && elementVerticalHeight) {\n        _this.elementHeight = elementVerticalHeight;\n        _this.elementBottom = elementDims.bottom;\n      }\n\n      if (targetNode && targetNode.style && !targetNode.style.right && elementVerticalWidth) {\n        _this.elementWidth = elementVerticalWidth;\n        _this.elementLeft = elementDims.left;\n        _this.elementRight = elementDims.right;\n      }\n\n      switch (side) {\n        case 'top':\n          if (!scrollParent && !transformParentDims) {\n            if (!checkHorizontal) {\n              targetNode.style.bottom = windowBottom - anchorPosition.top + arrowHeight + offsetHeight + \"px\";\n\n              if (getAvailableTopSpace(documentScrollTop) < 0) {\n                targetNode.style.top = arrowHeight - documentScrollTop + \"px\";\n              }\n            }\n\n            if (!checkVertical) {\n              if (elementDims.right > documentRight || _this.elementWidth > documentRight) {\n                targetNode.style.right = '0px';\n\n                if (_this.elementWidth < documentRight) {\n                  targetNode.style.left = documentRight - _this.elementWidth + \"px\";\n                }\n              }\n\n              if (_this.elementLeft < 0) {\n                targetNode.style.left = '0px';\n              }\n            }\n          } else {\n            if (transformParentDims) {\n              targetNode.style.bottom = transformParentDims.height - anchorPosition.top + arrowHeight + offsetHeight + \"px\";\n\n              if (anchorPosition.top - scrollParentScrollTop - _this.elementHeight - arrowHeight < 0) {\n                targetNode.style.top = scrollParentScrollTop + arrowHeight + \"px\";\n                targetNode.style.maxHeight = (maxHeight || transformParentDims.height) + \"px\";\n              }\n\n              if (!checkVertical) {\n                if (_this.elementWidth > transformParentDims.width || _this.elementRight > transformParentDims.right) {\n                  targetNode.style.right = 0 + \"px\";\n\n                  if (_this.elementWidth > transformParentDims.width) {\n                    targetNode.style.left = \"0px\";\n                  } else {\n                    targetNode.style.left = _this.elementWidth + \"px\";\n                  }\n                }\n\n                if (_this.elementLeft < transformParentDims.left) {\n                  targetNode.style.left = 0 + \"px\";\n                }\n              }\n\n              if (arrowDims && (arrowDims.top - (scrollParent ? scrollParentDims.top : transformParentDims.top) < 0 || arrowDims.bottom + 1 > (scrollParent ? scrollParentDims.bottom : transformParentDims.bottom))) {\n                _this.arrow.style.visibility = 'hidden';\n              } else if (arrowDims) {\n                _this.arrow.style.visibility = 'visible';\n              }\n            } else {\n              targetNode.style.bottom = windowBottom - anchorPosition.top + arrowHeight + offsetHeight + \"px\";\n\n              if (!checkHorizontal) {\n                if (anchorPosition.top - scrollParentDimsv2.top - _this.elementHeight - arrowHeight < 0) {\n                  targetNode.style.top = scrollParentDimsv2.top + arrowHeight + \"px\";\n                  targetNode.style.maxHeight = (maxHeight || scrollParentDimsv2.height) + \"px\";\n                }\n              }\n\n              if (!checkVertical) {\n                if (_this.elementWidth > scrollParentDimsv2.width || _this.elementRight > scrollParentDimsv2.right) {\n                  targetNode.style.right = documentRight - scrollParentDimsv2.right + \"px\";\n                }\n\n                if (_this.elementLeft < scrollParentDimsv2.left) {\n                  targetNode.style.left = scrollParentDimsv2.left + \"px\";\n                }\n              }\n\n              if (arrowDims && (arrowDims.top < scrollParentDims.top || arrowDims.bottom + 1 > scrollParentDims.bottom)) {\n                _this.arrow.style.visibility = 'hidden';\n              } else if (arrowDims) {\n                _this.arrow.style.visibility = 'visible';\n              }\n            }\n          }\n\n          break;\n\n        case 'bottom':\n          if (!scrollParentDims.bottom && !transformParentDims) {\n            if (_this.elementHeight + arrowHeight + anchorPosition.bottom + documentScrollTop > documentBottom) {\n              targetNode.style.bottom = documentScrollTop + windowBottom - documentBottom + \"px\";\n            }\n\n            if (elementDims.right > documentRight || _this.elementWidth > documentRight) {\n              targetNode.style.right = '0px';\n\n              if (_this.elementWidth < documentRight) {\n                targetNode.style.left = documentRight - _this.elementWidth + \"px\";\n              }\n            }\n\n            if (elementDims.left < 0) {\n              targetNode.style.left = '0px';\n            }\n          } else if (scrollParentDims.bottom && !transformParentDims) {\n            targetNode.style.bottom = 'auto';\n\n            if (anchorPosition.bottom + arrowHeight - scrollParentDims.top < 0) {\n              targetNode.style.top = scrollParentDims.top - arrowHeight + \"px\";\n            }\n\n            if (_this.elementHeight + arrowHeight + anchorPosition.bottom > scrollParentDims.bottom) {\n              targetNode.style.bottom = windowBottom - scrollParentDims.bottom + \"px\";\n              targetNode.style.maxHeight = (maxHeight || scrollParentDims.height) + \"px\";\n            }\n\n            if (_this.elementWidth > scrollParentDims.width || _this.elementRight > scrollParentDims.right) {\n              targetNode.style.right = documentRight - scrollParentDims.right + \"px\";\n            }\n\n            if (_this.elementLeft < scrollParentDims.left) {\n              targetNode.style.left = scrollParentDims.left + \"px\";\n            }\n\n            if (arrowDims && (arrowDims.top < scrollParentDims.top || arrowDims.bottom + 1 > scrollParentDims.bottom)) {\n              _this.arrow.style.visibility = 'hidden';\n            } else if (arrowDims) {\n              _this.arrow.style.visibility = 'visible';\n            }\n          } else {\n            if (anchorPosition.bottom + arrowHeight + offsetHeight < scrollParentDims.top - transformParentDims.top) {\n              targetNode.style.top = scrollParentDims.top - transformParentDims.top - arrowHeight + \"px\";\n            }\n\n            if (_this.elementHeight + arrowHeight + anchorPosition.bottom > transformParentDims.height + (absoluteParentDims && absoluteParentDims.offsetTop || 0)) {\n              targetNode.style.bottom = \"0px\";\n            }\n\n            if (_this.elementLeft < transformParentDims.left) {\n              targetNode.style.left = \"0px\";\n            }\n\n            if (_this.elementWidth > transformParentDims.width || _this.elementRight > transformParentDims.right) {\n              targetNode.style.right = \"0px\";\n\n              if (_this.elementWidth > transformParentDims.width) {\n                targetNode.style.left = \"0px\";\n              } else {\n                targetNode.style.left = transformParentDims.width - _this.elementWidth + \"px\";\n              }\n            }\n\n            if (arrowDims && (arrowDims.top < (checkOverflow ? scrollParentDims.top : transformParentDims.top) || arrowDims.bottom + 1 > (checkOverflow ? scrollParentDims.bottom : transformParentDims.bottom))) {\n              _this.arrow.style.visibility = 'hidden';\n            } else if (arrowDims) {\n              _this.arrow.style.visibility = 'visible';\n            }\n          }\n\n          break;\n\n        case 'left':\n          if (!scrollParentDims.left && !transformParentDims) {\n            if (arrowWidth + offsetWidth + elementDims.width + anchorPosition.left > anchorPosition.left) {\n              targetNode.style.left = arrowWidth + \"px\";\n              targetNode.style.right = documentRight - anchorPosition.left + arrowWidth + offsetWidth + \"px\";\n            }\n\n            if (getAvailableTopSpace(documentScrollTop) < 0) {\n              targetNode.style.top = -documentScrollTop + \"px\";\n            }\n\n            if (_this.elementHeight + arrowHeight + anchorPosition.bottom + documentScrollTop > documentBottom) {\n              targetNode.style.bottom = documentScrollTop + windowBottom - documentBottom + \"px\";\n            }\n          } else if (scrollParentDims.left && !transformParentDims) {\n            if (anchorPosition.left - scrollParentDims.left < _this.elementWidth + arrowWidth) {\n              targetNode.style.left = scrollParentDims.left + arrowWidth + \"px\";\n              targetNode.style.right = documentRight - anchorPosition.left + arrowWidth + offsetWidth + \"px\";\n              targetNode.style.maxWidth = (maxWidth || scrollParentDims.width) + \"px\";\n            }\n\n            if (anchorPosition.top - scrollParentDims.top - _this.elementHeight < 0) {\n              targetNode.style.top = scrollParentDims.top + \"px\";\n            }\n\n            if (_this.elementHeight + anchorPosition.bottom > scrollParentDims.bottom) {\n              targetNode.style.bottom = windowBottom - scrollParentDims.bottom + \"px\";\n            }\n\n            if (arrowDims && (arrowDims.top < scrollParentDims.top || arrowDims.bottom > scrollParentDims.bottom)) {\n              _this.arrow.style.visibility = 'hidden';\n            } else if (arrowDims) {\n              _this.arrow.style.visibility = 'visible';\n            }\n          }\n\n          break;\n\n        case 'right':\n          if (!scrollParentDims.right && !transformParentDims) {\n            if (arrowWidth + offsetWidth + elementDims.width + anchorPosition.right > documentRight) {\n              targetNode.style.right = '0px';\n            }\n\n            if (getAvailableTopSpace(documentScrollTop) < 0) {\n              targetNode.style.top = -documentScrollTop + \"px\";\n            }\n\n            if (_this.elementHeight + arrowHeight + anchorPosition.bottom + documentScrollTop > documentBottom) {\n              targetNode.style.bottom = documentScrollTop + windowBottom - documentBottom + \"px\";\n            }\n          } else if (scrollParentDims.right && !transformParentDims) {\n            if (anchorPosition.right + _this.elementWidth + arrowWidth > scrollParentDims.right) {\n              targetNode.style.left = anchorPosition.right + offsetWidth + \"px\";\n              targetNode.style.right = transformParentDims ? scrollParentDims.width + \"px\" : documentRight - scrollParentDims.right + \"px\";\n              targetNode.style.maxWidth = (maxWidth || scrollParentDims.width) + \"px\";\n            }\n\n            if (anchorPosition.top - scrollParentDims.top - _this.elementHeight < 0) {\n              targetNode.style.top = scrollParentDims.top + \"px\";\n            }\n\n            if (_this.elementHeight + anchorPosition.bottom > scrollParentDims.bottom) {\n              targetNode.style.bottom = windowBottom - scrollParentDims.bottom + \"px\";\n            }\n\n            if (arrowDims && (arrowDims.top < scrollParentDims.top || arrowDims.bottom > scrollParentDims.bottom)) {\n              _this.arrow.style.visibility = 'hidden';\n            } else if (arrowDims) {\n              _this.arrow.style.visibility = 'visible';\n            }\n          }\n\n          break;\n      }\n    };\n\n    _this.setBoundingContainer = function (containerNode) {\n      var _this$props4 = _this.props,\n          boundingParentID = _this$props4.boundingParentID,\n          isContained = _this$props4.isContained;\n      var containerParent = _this.state.containerParent;\n      var containerNodeDims = containerNode && containerNode.getBoundingClientRect() || defaultDims;\n      var containerParentDims = containerParent && containerParent.getBoundingClientRect() || defaultDims;\n      var checkVertical = isContained === true || isContained === 'vertical';\n      var checkHorizontal = isContained === true || isContained === 'horizontal';\n      return {\n        bottom: checkVertical && boundingParentID ? containerParentDims.bottom : containerNodeDims.bottom,\n        center: 0,\n        height: checkVertical && boundingParentID ? containerParentDims.height : containerNodeDims.height,\n        left: checkHorizontal && boundingParentID ? containerParentDims.left : containerNodeDims.left,\n        middle: 0,\n        right: checkHorizontal && boundingParentID ? containerParentDims.right : containerNodeDims.right,\n        top: checkVertical && boundingParentID ? containerParentDims.top : containerNodeDims.top,\n        width: checkHorizontal && boundingParentID ? containerParentDims.width : containerNodeDims.width\n      };\n    };\n\n    _this.setHorizontalClass = function (alignment, anchor, elementBoundingRect, elementParent) {\n      var _this$props5 = _this.props,\n          showArrow = _this$props5.showArrow,\n          checkOverflow = _this$props5.checkOverflow,\n          targetOffset = _this$props5.targetOffset,\n          scrollParentID = _this$props5.scrollParentID;\n      var windowRight = window.pageYOffset + window.innerWidth;\n      var elementWidth = elementBoundingRect.width;\n      var anchorRight = anchor.right;\n      var arrowWidth = showArrow ? ReactDOM.findDOMNode(_this.arrow).getBoundingClientRect().width : 0;\n      var offsetWidth = targetOffset.horizontal || 0;\n      var totalWidth = anchorRight + elementWidth + arrowWidth + offsetWidth;\n\n      var elementParents = _this.findParents(elementParent);\n\n      var scrollParent = scrollParentID ? React.findDOMNode(scrollParentID) : _this.findScrollParent(elementParents, ['overflow', 'overflow-x']);\n      var parentRight = checkOverflow && !!scrollParent.getBoundingClientRect && scrollParent.getBoundingClientRect().right || windowRight;\n      return totalWidth < parentRight && totalWidth < windowRight ? _this.setState({\n        visibleDirection: \"right-\" + alignment\n      }, function () {\n        return _this.setPlacement();\n      }) : _this.setState({\n        visibleDirection: \"left-\" + alignment\n      }, function () {\n        return _this.setPlacement();\n      });\n    };\n\n    _this.setPlacement = function () {\n      var _this$props6 = _this.props,\n          anchorNode = _this$props6.anchorNode,\n          isOpen = _this$props6.isOpen,\n          isContained = _this$props6.isContained,\n          showArrow = _this$props6.showArrow,\n          targetOffset = _this$props6.targetOffset;\n      var _this$state2 = _this.state,\n          visibleDirection = _this$state2.visibleDirection,\n          absoluteParent = _this$state2.absoluteParent,\n          transformParent = _this$state2.transformParent;\n      if (!isOpen) return;\n      var anchorElement = ReactDOM.findDOMNode(anchorNode);\n      var side = visibleDirection.split('-')[0];\n      var targetNode = _this.container;\n      var verticalOffset = targetOffset.vertical || 0;\n      var horizontalOffset = targetOffset.horizontal || 0;\n\n      var absoluteParentDims = absoluteParent && _this.getElementPosition(absoluteParent);\n\n      if (!targetNode || !anchorElement) return;\n      anchorElement.link = _this.state.id;\n      var anchorPosition = !!transformParent && absoluteParentDims && absoluteParentDims.hasAbsParent ? _this.getAbsoluteAnchorPosition(anchorElement, absoluteParentDims) : _this.getAnchorPosition(anchorElement);\n\n      var targetPosition = _this.getTargetPosition(targetNode);\n\n      var origin = _this.getOrigin();\n\n      var anchorOrigin = origin.anchor;\n      var targetOrigin = origin.target;\n      var targetNodePosition = {\n        top: anchorPosition[anchorOrigin.vertical] - targetPosition[targetOrigin.vertical] + (side === 'top' ? -verticalOffset : verticalOffset),\n        left: anchorPosition[anchorOrigin.horizontal] - targetPosition[targetOrigin.horizontal] + (side === 'left' ? -horizontalOffset : horizontalOffset)\n      };\n      targetNode.style.top = targetNodePosition.top + \"px\";\n      targetNode.style.left = targetNodePosition.left + \"px\";\n      showArrow && _this.setArrowPlacement(anchorPosition, targetPosition);\n      isContained && _this.setBoundingBox(side, targetNode, anchorPosition);\n    };\n\n    _this.setVerticalClass = function (alignment, anchor, elementBoundingRect, elementParent) {\n      var _this$props7 = _this.props,\n          showArrow = _this$props7.showArrow,\n          checkOverflow = _this$props7.checkOverflow,\n          targetOffset = _this$props7.targetOffset,\n          scrollParentID = _this$props7.scrollParentID;\n      var windowBottom = window.pageXOffset + window.innerHeight;\n      var elementHeight = elementBoundingRect.height;\n      var anchorBottom = anchor.bottom;\n      var arrowHeight = showArrow ? ReactDOM.findDOMNode(_this.arrow).getBoundingClientRect().height : 0;\n      var offsetHeight = targetOffset.vertical || 0;\n      var totalHeight = anchorBottom + elementHeight + arrowHeight + offsetHeight;\n\n      var elementParents = _this.findParents(elementParent);\n\n      var scrollParent = scrollParentID ? React.findDOMNode(scrollParentID) : _this.findScrollParent(elementParents, ['overflow', 'overflow-x']);\n      var parentBottom = checkOverflow && !!scrollParent.getBoundingClientRect && scrollParent.getBoundingClientRect().bottom || windowBottom;\n      return totalHeight < parentBottom && totalHeight < windowBottom ? _this.setState({\n        visibleDirection: \"bottom-\" + alignment\n      }, function () {\n        return _this.setPlacement();\n      }) : _this.setState({\n        visibleDirection: \"top-\" + alignment\n      }, function () {\n        return _this.setPlacement();\n      });\n    };\n\n    return _this;\n  }\n\n  EventOverlay.getDerivedStateFromProps = function getDerivedStateFromProps(_ref, state) {\n    var isOpen = _ref.isOpen;\n    return _extends({}, state, {\n      isOpen: isOpen\n    });\n  };\n\n  var _proto = EventOverlay.prototype;\n\n  _proto.render = function render() {\n    var _this2 = this;\n\n    var _this$props8 = this.props,\n        children = _this$props8.children,\n        className = _this$props8.className,\n        focusLockProps = _this$props8.focusLockProps,\n        isOpen = _this$props8.isOpen,\n        maxHeight = _this$props8.maxHeight,\n        maxWidth = _this$props8.maxWidth,\n        portalNode = _this$props8.portalNode,\n        shouldLockFocus = _this$props8.shouldLockFocus,\n        showArrow = _this$props8.showArrow,\n        style = _this$props8.style,\n        props = _objectWithoutPropertiesLoose(_this$props8, [\"children\", \"className\", \"focusLockProps\", \"isOpen\", \"maxHeight\", \"maxWidth\", \"portalNode\", \"shouldLockFocus\", \"showArrow\", \"style\"]);\n\n    var side = this.state.visibleDirection.split('-')[0];\n    var otherProps = omit(_extends({}, props), ['absoluteParentID', 'allowClickAway', 'anchorNode', 'boundingParentID', 'checkOverflow', 'close', 'closeOnClick', 'direction', 'isDynamic', 'isContained', 'scrollParentID', 'targetOffset', 'transformParentID']);\n    var contentNodes = isOpen && React.createElement(\"div\", {\n      className: 'md-event-overlay' + (\"\" + (showArrow && \" md-event-overlay--arrow\" || '')) + (\"\" + (side && \" md-event-overlay--\" + side || '')) + (\"\" + (className && \" \" + className || ''))\n    }, showArrow && React.createElement(\"div\", {\n      ref: function ref(_ref2) {\n        return _this2.arrow = _ref2;\n      },\n      className: \"md-event-overlay__arrow\"\n    }), React.createElement(\"div\", _extends({\n      className: \"md-event-overlay__children\",\n      ref: function ref(_ref3) {\n        return _this2.container = _ref3;\n      },\n      style: _extends({}, maxWidth && {\n        maxWidth: maxWidth + \"px\"\n      }, {}, maxHeight && {\n        maxHeight: maxHeight + \"px\"\n      }, {}, style)\n    }, otherProps), children));\n\n    var withFocusLock = function withFocusLock(content) {\n      return shouldLockFocus ? React.createElement(FocusLock, focusLockProps, content) : content;\n    };\n\n    var withPortal = function withPortal(content) {\n      return portalNode ? ReactDOM.createPortal(content, portalNode) : content;\n    };\n\n    return withFocusLock(withPortal(contentNodes));\n  };\n\n  return EventOverlay;\n}(React.Component);\n\nEventOverlay.defaultProps = {\n  absoluteParentID: null,\n  allowClickAway: true,\n  anchorNode: null,\n  boundingParentID: null,\n  children: null,\n  checkOverflow: false,\n  className: '',\n  close: null,\n  direction: 'bottom-left',\n  focusLockProps: null,\n  isContained: '',\n  isDynamic: false,\n  isOpen: false,\n  maxHeight: null,\n  maxWidth: null,\n  portalNode: null,\n  scrollParentID: null,\n  shouldLockFocus: false,\n  showArrow: false,\n  style: null,\n  targetOffset: {\n    horizontal: 0,\n    vertical: 0\n  },\n  transformParentID: null\n};\nEventOverlay.propTypes = {\n  /** @prop Set the id of the absoluteParent | null */\n  absoluteParentID: PropTypes.string,\n\n  /** @prop Allows user to click outside of EventOverlay | true */\n  allowClickAway: PropTypes.bool,\n\n  /** @prop Node which serves as basis of dom positioning | null */\n  anchorNode: PropTypes.object,\n\n  /** @prop Set the id of the boundingParent | null */\n  boundingParentID: PropTypes.string,\n\n  /** @prop Set to determine if dom ancestors have overflow property | false */\n  checkOverflow: PropTypes.bool,\n\n  /** @prop Children nodes to render inside the EventOverlay | null */\n  children: PropTypes.node,\n\n  /** @prop Optional css class string | '' */\n  className: PropTypes.string,\n\n  /** @prop Function to close EventOverlay | null */\n  close: PropTypes.func,\n\n  /** @prop Determines if the EventOverlay should close when clicked on | true */\n  closeOnClick: PropTypes.bool,\n\n  /** @prop Sets the direction in which the EventOverlay extends | 'bottom-left' */\n  direction: PropTypes.oneOf(['top-center', 'left-center', 'right-center', 'bottom-center', 'top-left', 'top-right', 'bottom-left', 'bottom-right', 'left-top', 'left-bottom', 'right-top', 'right-bottom']),\n\n  /** @prop Props to be passed to focus lock component | null */\n  focusLockProps: PropTypes.object,\n\n  /** @prop Determines if the overlay is contained in bounding ancestor | '' */\n  isContained: PropTypes.oneOf([true, false, 'horizontal', 'vertical', 'both', '']),\n\n  /** @prop When true, will flip children based on space available (does not work with isContained) | false */\n  isDynamic: PropTypes.bool,\n\n  /** @prop Sets the visibility of the EventOverlay | false */\n  isOpen: PropTypes.bool,\n\n  /** @prop Sets the max height of the EventOverlay | null */\n  maxHeight: PropTypes.number,\n\n  /** @prop Sets the max width of the EventOverlay | null */\n  maxWidth: PropTypes.number,\n\n  /** @prop Node/element where overlay should be appended using ReactDOM portal | null */\n  portalNode: PropTypes.oneOfType([PropTypes.node, PropTypes.instanceOf(Element)]),\n\n  /** @prop Set the id of the scrollParent | null */\n  scrollParentID: PropTypes.string,\n\n  /** @prop Determines if focus should be locked to overlay | false */\n  shouldLockFocus: PropTypes.bool,\n\n  /** @prop Determines if the EventOverlay should show the open/close arrow | false */\n  showArrow: PropTypes.bool,\n\n  /** @prop Optional css styling | null */\n  style: PropTypes.object,\n\n  /** @prop Sets the target offset from anchorNode | { horizontal: 0, vertical: 0 } */\n  targetOffset: PropTypes.shape({\n    horizontal: PropTypes.number,\n    vertical: PropTypes.number\n  }),\n\n  /** @prop Set the id of the transformParent | null */\n  transformParentID: PropTypes.string\n};\nEventOverlay.displayName = 'EventOverlay';\nexport default EventOverlay;","map":{"version":3,"sources":["/Users/pratison/Work/Cisco/Education/React/VirtualClassroom/node_modules/@momentum-ui/react/es/EventOverlay/index.js"],"names":["_objectWithoutPropertiesLoose","source","excluded","target","sourceKeys","Object","keys","key","i","length","indexOf","_extends","assign","arguments","prototype","hasOwnProperty","call","apply","_inheritsLoose","subClass","superClass","create","constructor","__proto__","React","PropTypes","ReactDOM","omit","FocusLock","defaultDims","offsetTop","bottom","center","height","left","middle","right","top","width","EventOverlay","_React$Component","_this","_len","args","Array","_key","concat","state","absoluteParent","containerParent","isOpen","scrollParent","transformParent","visibleDirection","props","direction","componentDidMount","forceUpdate","addHandlers","componentDidUpdate","prevProps","prevState","isVisible","focusOnAnchorNode","componentWillUnmount","removeHandlers","_this$props","absoluteParentID","allowClickAway","boundingParentID","checkOverflow","closeOnClick","isContained","scrollParentID","transformParentID","handleResize","handleScroll","element","findDOMNode","container","elementParent","parentElement","elementParents","findParents","document","addEventListener","handleAllowClickAway","handleKeyDown","handleCloseOnClick","window","getElementById","findScrollParent","findTransformParent","findAbsoluteParent","observer","MutationObserver","observe","body","attributes","characterData","childList","subtree","attributeOldValue","characterDataOldValue","setState","findOverflow","node","searchProps","reduce","agg","prop","overflowElement","getComputedStyle","includes","ele","tempParentArr","startIndex","absoluteElement","idx","currentAbsoluteElement","test","currentOverflowElement","transformElement","potentialTransformElement","currentTransformElement","anchorNode","domAnchorNode","onClick","focus","getAnchorPosition","rect","getBoundingClientRect","transformParentDims","getElementPosition","parentRect","anchorPosition","offsetWidth","offsetHeight","getAbsoluteAnchorPosition","absoluteParentDims","scrollAdjust","scrollTop","offsetLeft","elementRect","hasAbsParent","getOrigin","side","split","alignment","origin","anchor","vertical","horizontal","getTargetPosition","targetNode","e","contains","handleClickAway","close","keyCode","_this$props2","isDynamic","setPlacement","anchorElement","anchorDims","elementBoundingRect","setVerticalClass","setHorizontalClass","removeEventListener","disconnect","takeRecords","setArrowPlacement","arrow","targetOffset","verticalOffset","horizontalOffset","isAnchorWider","isAnchorTaller","arrowLeft","arrowTop","style","setBoundingBox","_this$props3","maxHeight","maxWidth","showArrow","_this$state","arrowDims","checkVertical","checkHorizontal","documentScrollTop","documentElement","documentBottom","scrollHeight","windowBottom","pageXOffset","innerHeight","documentRight","arrowHeight","arrowWidth","elementDims","elementVerticalHeight","elementVerticalWidth","getAvailableTopSpace","elementHeight","scrollParentDimsv2","setBoundingContainer","scrollParentDims","scrollParentScrollTop","elementBottom","elementWidth","elementLeft","elementRight","visibility","containerNode","_this$props4","containerNodeDims","containerParentDims","_this$props5","windowRight","pageYOffset","innerWidth","anchorRight","totalWidth","parentRight","_this$props6","_this$state2","link","id","targetPosition","anchorOrigin","targetOrigin","targetNodePosition","_this$props7","anchorBottom","totalHeight","parentBottom","getDerivedStateFromProps","_ref","_proto","render","_this2","_this$props8","children","className","focusLockProps","portalNode","shouldLockFocus","otherProps","contentNodes","createElement","ref","_ref2","_ref3","withFocusLock","content","withPortal","createPortal","Component","defaultProps","propTypes","string","bool","object","func","oneOf","number","oneOfType","instanceOf","Element","shape","displayName"],"mappings":"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","sourcesContent":["function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\n/** @component event-overlay */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactDOM from 'react-dom';\nimport omit from 'lodash/omit';\nimport FocusLock from 'react-focus-lock';\nvar defaultDims = {\n  offsetTop: 0,\n  bottom: 0,\n  center: 0,\n  height: 0,\n  left: 0,\n  middle: 0,\n  right: 0,\n  top: 0,\n  width: 0\n};\n\nvar EventOverlay = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(EventOverlay, _React$Component);\n\n  function EventOverlay() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n    _this.state = {\n      absoluteParent: null,\n      containerParent: null,\n      isOpen: false,\n      scrollParent: null,\n      transformParent: null,\n      visibleDirection: _this.props.direction\n    };\n\n    _this.componentDidMount = function () {\n      _this.props.isOpen && _this.forceUpdate();\n\n      _this.addHandlers();\n    };\n\n    _this.componentDidUpdate = function (prevProps, prevState) {\n      var direction = _this.props.direction;\n      var isOpen = _this.state.isOpen;\n\n      if (isOpen && prevState.isOpen !== isOpen || prevProps.direction !== direction) {\n        return _this.forceUpdate(function () {\n          return _this.isVisible();\n        });\n      } else if (!isOpen && prevState.isOpen !== isOpen) {\n        _this.focusOnAnchorNode();\n      }\n    };\n\n    _this.componentWillUnmount = function () {\n      _this.removeHandlers();\n    };\n\n    _this.addHandlers = function () {\n      var _this$props = _this.props,\n          absoluteParentID = _this$props.absoluteParentID,\n          allowClickAway = _this$props.allowClickAway,\n          boundingParentID = _this$props.boundingParentID,\n          checkOverflow = _this$props.checkOverflow,\n          closeOnClick = _this$props.closeOnClick,\n          isContained = _this$props.isContained,\n          scrollParentID = _this$props.scrollParentID,\n          transformParentID = _this$props.transformParentID;\n      _this.handleResize = _this.isVisible;\n      _this.handleScroll = _this.isVisible;\n      var element = ReactDOM.findDOMNode(_this.container);\n      var elementParent = element && element.parentElement;\n\n      var elementParents = elementParent && _this.findParents(elementParent);\n\n      var scrollParent;\n\n      if (allowClickAway) {\n        document.addEventListener('click', _this.handleAllowClickAway, true);\n        document.addEventListener('keydown', _this.handleKeyDown, false);\n      }\n\n      closeOnClick && document.addEventListener('click', _this.handleCloseOnClick, false);\n      window.addEventListener('resize', _this.handleResize, false);\n      document.addEventListener('scroll', _this.handleScroll, false);\n\n      if (scrollParentID) {\n        scrollParent = document.getElementById(scrollParentID);\n        scrollParent && scrollParent.addEventListener('scroll', _this.handleScroll, false);\n      }\n\n      if (checkOverflow) {\n        scrollParent = !scrollParent && elementParents && _this.findScrollParent(elementParents, ['overflow', 'overflow-y', 'overflow-x']);\n        scrollParent && scrollParent.addEventListener('scroll', _this.handleScroll, false);\n      }\n\n      var transformParent = transformParentID ? document.getElementById(transformParentID) : elementParents && _this.findTransformParent(elementParents, ['transform'], 1);\n      var absoluteParent = absoluteParentID ? document.getElementById(absoluteParentID) : elementParents && _this.findAbsoluteParent(elementParents, ['position'], 1);\n      var containerParent = isContained && document.getElementById(boundingParentID) || scrollParent;\n      _this.observer = new MutationObserver(_this.isVisible);\n\n      _this.observer.observe(document.body, {\n        attributes: false,\n        characterData: false,\n        childList: true,\n        subtree: true,\n        attributeOldValue: false,\n        characterDataOldValue: false\n      });\n\n      _this.setState({\n        absoluteParent: absoluteParent,\n        containerParent: containerParent,\n        scrollParent: scrollParent,\n        transformParent: transformParent\n      }, function () {\n        return _this.isVisible();\n      });\n    };\n\n    _this.findOverflow = function (node, searchProps) {\n      return searchProps.reduce(function (agg, prop) {\n        var overflowElement = window.getComputedStyle(ReactDOM.findDOMNode(node))[prop];\n        return !overflowElement || agg.includes(overflowElement) ? agg : agg += overflowElement;\n      }, '');\n    };\n\n    _this.findParents = function (ele, tempParentArr) {\n      if (tempParentArr === void 0) {\n        tempParentArr = [];\n      }\n\n      return !ele.parentElement ? tempParentArr : _this.findParents(ele.parentElement, tempParentArr.concat(ele));\n    };\n\n    _this.findAbsoluteParent = function (elementParents, searchProps, startIndex) {\n      var absoluteElement;\n      var idx = startIndex;\n\n      while (!absoluteElement && elementParents[idx]) {\n        var currentAbsoluteElement = _this.findOverflow(elementParents[idx], searchProps);\n\n        if (/(absolute)/.test(currentAbsoluteElement)) {\n          return absoluteElement = elementParents[idx];\n        }\n\n        idx++;\n      }\n\n      return absoluteElement ? absoluteElement : null;\n    };\n\n    _this.findScrollParent = function (elementParents, searchProps) {\n      var overflowElement = null;\n      var idx = 1;\n\n      while (!overflowElement && elementParents[idx]) {\n        var currentOverflowElement = _this.findOverflow(elementParents[idx], searchProps);\n\n        if (/(auto|scroll|hidden)/.test(currentOverflowElement)) {\n          return overflowElement = elementParents[idx];\n        }\n\n        idx++;\n      }\n\n      return overflowElement ? overflowElement : null;\n    };\n\n    _this.findTransformParent = function (elementParents, searchProps, startIndex) {\n      var transformElement = null;\n      var idx = startIndex;\n\n      while (!transformElement && elementParents[idx]) {\n        var potentialTransformElement = _this.findOverflow(elementParents[idx], ['will-change']);\n\n        var currentTransformElement = _this.findOverflow(elementParents[idx], searchProps);\n\n        if (/(transform)/.test(potentialTransformElement) || currentTransformElement !== 'none') {\n          return transformElement = elementParents[idx];\n        }\n\n        idx++;\n      }\n\n      return transformElement ? transformElement : null;\n    };\n\n    _this.focusOnAnchorNode = function () {\n      var anchorNode = _this.props.anchorNode;\n      var domAnchorNode = anchorNode && (anchorNode.props ? anchorNode.props.onClick : false) && ReactDOM.findDOMNode(anchorNode);\n      domAnchorNode && domAnchorNode.focus();\n    };\n\n    _this.getAnchorPosition = function (node) {\n      var transformParent = _this.state.transformParent;\n      var rect = node.getBoundingClientRect();\n\n      var transformParentDims = transformParent && _this.getElementPosition(transformParent);\n\n      var parentRect = transformParentDims || defaultDims;\n      var anchorPosition = {\n        top: rect.top - parentRect.top,\n        left: rect.left - parentRect.left,\n        width: node.offsetWidth,\n        height: node.offsetHeight\n      };\n      anchorPosition.right = (rect.right || anchorPosition.left + anchorPosition.width) - parentRect.left;\n      anchorPosition.bottom = (rect.bottom || anchorPosition.top + anchorPosition.height) - parentRect.top;\n      anchorPosition.middle = anchorPosition.left + (anchorPosition.right - anchorPosition.left) / 2;\n      anchorPosition.center = anchorPosition.top + (anchorPosition.bottom - anchorPosition.top) / 2;\n      return anchorPosition;\n    };\n\n    _this.getAbsoluteAnchorPosition = function (node, absoluteParentDims) {\n      var scrollParent = _this.state.scrollParent;\n      var rect = node.getBoundingClientRect();\n      var parentRect = absoluteParentDims;\n      var scrollAdjust = scrollParent && scrollParent.scrollTop || 0;\n      var anchorPosition = {\n        top: absoluteParentDims.offsetTop ? absoluteParentDims.offsetTop + node.offsetTop - scrollAdjust : rect.top - parentRect.top,\n        left: absoluteParentDims.offsetLeft ? absoluteParentDims.offsetLeft - node.offsetLeft : rect.left - parentRect.left,\n        width: node.offsetWidth,\n        height: node.offsetHeight\n      };\n      anchorPosition.right = (rect.right || anchorPosition.left + anchorPosition.width) - parentRect.left;\n      anchorPosition.bottom = anchorPosition.top + anchorPosition.height;\n      anchorPosition.middle = anchorPosition.left + (anchorPosition.right - anchorPosition.left) / 2;\n      anchorPosition.center = anchorPosition.top + (anchorPosition.bottom - anchorPosition.top) / 2;\n      return anchorPosition;\n    };\n\n    _this.getElementPosition = function (element) {\n      var elementRect = element.getBoundingClientRect();\n      return {\n        offsetTop: element.offsetTop,\n        offsetLeft: element.offsetLeft,\n        bottom: elementRect.bottom,\n        top: elementRect.top,\n        left: elementRect.left,\n        height: elementRect.height,\n        width: elementRect.width,\n        hasAbsParent: element.offsetTop !== elementRect.top || element.offsetLeft !== elementRect.left\n      };\n    };\n\n    _this.getOrigin = function () {\n      var side = _this.state.visibleDirection.split('-')[0];\n\n      var alignment = _this.props.direction.split('-')[1];\n\n      var origin = {\n        anchor: {},\n        target: {}\n      };\n\n      if (side === 'top' || side === 'bottom') {\n        origin.anchor.vertical = side;\n        origin.anchor.horizontal = alignment === 'center' ? 'middle' : alignment;\n        origin.target.vertical = side === 'top' ? 'bottom' : 'top';\n        origin.target.horizontal = alignment === 'center' ? 'middle' : alignment;\n      }\n\n      if (side === 'left' || side === 'right') {\n        origin.anchor.vertical = alignment;\n        origin.anchor.horizontal = side;\n        origin.target.vertical = alignment;\n        origin.target.horizontal = side === 'left' ? 'right' : 'left';\n      }\n\n      return origin;\n    };\n\n    _this.getTargetPosition = function (targetNode) {\n      return {\n        top: 0,\n        center: targetNode.offsetHeight / 2,\n        bottom: targetNode.offsetHeight,\n        left: 0,\n        middle: targetNode.offsetWidth / 2,\n        right: targetNode.offsetWidth\n      };\n    };\n\n    _this.handleAllowClickAway = function (e) {\n      if (!_this.props.isOpen) return;\n      var anchorNode = ReactDOM.findDOMNode(_this.props.anchorNode);\n      return _this.container && !anchorNode.contains(e.target) && !ReactDOM.findDOMNode(_this.container).contains(e.target) && _this.handleClickAway(e);\n    };\n\n    _this.handleClickAway = function (e) {\n      var close = _this.props.close;\n\n      _this.focusOnAnchorNode();\n\n      close && close(e);\n    };\n\n    _this.handleCloseOnClick = function (e) {\n      if (!_this.props.isOpen) return;\n      var closeOnClick = _this.props.closeOnClick;\n      return closeOnClick && _this.container && ReactDOM.findDOMNode(_this.container).contains(e.target) && _this.handleClickAway(e);\n    };\n\n    _this.handleKeyDown = function (e) {\n      if (!_this.props.isOpen) return;\n      if (e.keyCode === 27) return _this.handleClickAway(e);\n      var anchorNode = ReactDOM.findDOMNode(_this.props.anchorNode);\n      return _this.container && anchorNode && !anchorNode.contains(e.target) && !ReactDOM.findDOMNode(_this.container).contains(e.target) && _this.handleClickAway(e);\n    };\n\n    _this.isVisible = function () {\n      var _this$props2 = _this.props,\n          anchorNode = _this$props2.anchorNode,\n          direction = _this$props2.direction,\n          isOpen = _this$props2.isOpen,\n          isDynamic = _this$props2.isDynamic;\n      if (!isOpen) return;\n      if (!isDynamic) return _this.setPlacement();\n      var anchorElement = ReactDOM.findDOMNode(anchorNode);\n      var element = ReactDOM.findDOMNode(_this.container);\n      var side = direction.split('-')[0];\n      var alignment = direction.split('-')[1];\n      var anchorDims = anchorElement && anchorElement.getBoundingClientRect();\n      var elementBoundingRect = element.getBoundingClientRect();\n      var elementParent = element.parentElement;\n      ['top', 'bottom'].includes(side) ? _this.setVerticalClass(alignment, anchorDims, elementBoundingRect, elementParent) : _this.setHorizontalClass(alignment, anchorDims, elementBoundingRect, elementParent);\n    };\n\n    _this.removeHandlers = function () {\n      var scrollParent = _this.state.scrollParent;\n      document.removeEventListener('click', _this.handleAllowClickAway, true);\n      document.removeEventListener('click', _this.handleCloseOnClick, false);\n      document.removeEventListener('keydown', _this.handleKeyDown, false);\n      window.removeEventListener('resize', _this.handleResize, true);\n      document.removeEventListener('scroll', _this.handleScroll, false);\n      scrollParent && scrollParent.removeEventListener('scroll', _this.handleScroll, false);\n      _this.observer && _this.observer.disconnect() && _this.observer.takeRecords();\n    };\n\n    _this.setArrowPlacement = function (anchor, container) {\n      var arrow = _this.arrow;\n      var targetOffset = _this.props.targetOffset;\n      var visibleDirection = _this.state.visibleDirection;\n      var side = visibleDirection.split('-')[0];\n      var verticalOffset = targetOffset.vertical || 0;\n      var horizontalOffset = targetOffset.horizontal || 0;\n      var isAnchorWider = anchor.width > container.right;\n      var isAnchorTaller = anchor.height > container.bottom;\n      var arrowLeft = isAnchorWider && !visibleDirection.includes('center') ? visibleDirection.includes('left') ? container.middle + anchor.left : anchor.right - container.middle : anchor.middle;\n      var arrowTop = isAnchorTaller && !visibleDirection.includes('center') ? visibleDirection.includes('top') ? container.center + anchor.top : anchor.bottom - container.center : anchor.center;\n\n      switch (side) {\n        case 'top':\n          arrow.style.left = arrowLeft + \"px\";\n          arrow.style.top = anchor.top - verticalOffset + \"px\";\n          break;\n\n        case 'bottom':\n          arrow.style.left = arrowLeft + \"px\";\n          arrow.style.top = anchor.bottom + verticalOffset + \"px\";\n          break;\n\n        case 'left':\n          arrow.style.left = anchor.left - horizontalOffset + \"px\";\n          arrow.style.top = arrowTop + \"px\";\n          break;\n\n        case 'right':\n          arrow.style.left = anchor.right + horizontalOffset + \"px\";\n          arrow.style.top = arrowTop + \"px\";\n          break;\n      }\n    };\n\n    _this.setBoundingBox = function (side, targetNode, anchorPosition) {\n      var _this$props3 = _this.props,\n          checkOverflow = _this$props3.checkOverflow,\n          isContained = _this$props3.isContained,\n          maxHeight = _this$props3.maxHeight,\n          maxWidth = _this$props3.maxWidth,\n          showArrow = _this$props3.showArrow,\n          targetOffset = _this$props3.targetOffset;\n      var _this$state = _this.state,\n          absoluteParent = _this$state.absoluteParent,\n          scrollParent = _this$state.scrollParent,\n          transformParent = _this$state.transformParent;\n      var arrowDims = showArrow && ReactDOM.findDOMNode(_this.arrow).getBoundingClientRect();\n      var checkVertical = isContained === 'vertical';\n      var checkHorizontal = isContained === 'horizontal';\n      var element = ReactDOM.findDOMNode(_this.container);\n      var documentScrollTop = document.documentElement.scrollTop;\n      var documentBottom = document.documentElement.scrollHeight;\n      var windowBottom = window.pageXOffset + window.innerHeight;\n      var documentRight = document.documentElement.offsetWidth;\n      var arrowHeight = arrowDims && arrowDims.height || 0;\n      var arrowWidth = arrowDims && arrowDims.width || 0;\n      var offsetHeight = targetOffset.vertical || 0;\n      var offsetWidth = targetOffset.horizontal || 0;\n      var elementDims = element.getBoundingClientRect();\n      var elementVerticalHeight = elementDims.height + offsetHeight;\n      var elementVerticalWidth = elementDims.width + offsetWidth;\n\n      var getAvailableTopSpace = function getAvailableTopSpace(top) {\n        return top + anchorPosition.top - (_this.elementHeight + arrowHeight);\n      };\n\n      var scrollParentDimsv2 = _this.setBoundingContainer(scrollParent);\n\n      var scrollParentDims = scrollParent ? scrollParent.getBoundingClientRect() : defaultDims;\n\n      var absoluteParentDims = absoluteParent && _this.getElementPosition(absoluteParent);\n\n      var transformParentDims = transformParent && _this.getElementPosition(transformParent);\n\n      var scrollParentScrollTop = scrollParent && scrollParent.offsetTop || 0;\n\n      if (targetNode && targetNode.style && !targetNode.style.bottom && elementVerticalHeight) {\n        _this.elementHeight = elementVerticalHeight;\n        _this.elementBottom = elementDims.bottom;\n      }\n\n      if (targetNode && targetNode.style && !targetNode.style.right && elementVerticalWidth) {\n        _this.elementWidth = elementVerticalWidth;\n        _this.elementLeft = elementDims.left;\n        _this.elementRight = elementDims.right;\n      }\n\n      switch (side) {\n        case 'top':\n          if (!scrollParent && !transformParentDims) {\n            if (!checkHorizontal) {\n              targetNode.style.bottom = windowBottom - anchorPosition.top + arrowHeight + offsetHeight + \"px\";\n\n              if (getAvailableTopSpace(documentScrollTop) < 0) {\n                targetNode.style.top = arrowHeight - documentScrollTop + \"px\";\n              }\n            }\n\n            if (!checkVertical) {\n              if (elementDims.right > documentRight || _this.elementWidth > documentRight) {\n                targetNode.style.right = '0px';\n\n                if (_this.elementWidth < documentRight) {\n                  targetNode.style.left = documentRight - _this.elementWidth + \"px\";\n                }\n              }\n\n              if (_this.elementLeft < 0) {\n                targetNode.style.left = '0px';\n              }\n            }\n          } else {\n            if (transformParentDims) {\n              targetNode.style.bottom = transformParentDims.height - anchorPosition.top + arrowHeight + offsetHeight + \"px\";\n\n              if (anchorPosition.top - scrollParentScrollTop - _this.elementHeight - arrowHeight < 0) {\n                targetNode.style.top = scrollParentScrollTop + arrowHeight + \"px\";\n                targetNode.style.maxHeight = (maxHeight || transformParentDims.height) + \"px\";\n              }\n\n              if (!checkVertical) {\n                if (_this.elementWidth > transformParentDims.width || _this.elementRight > transformParentDims.right) {\n                  targetNode.style.right = 0 + \"px\";\n\n                  if (_this.elementWidth > transformParentDims.width) {\n                    targetNode.style.left = \"0px\";\n                  } else {\n                    targetNode.style.left = _this.elementWidth + \"px\";\n                  }\n                }\n\n                if (_this.elementLeft < transformParentDims.left) {\n                  targetNode.style.left = 0 + \"px\";\n                }\n              }\n\n              if (arrowDims && (arrowDims.top - (scrollParent ? scrollParentDims.top : transformParentDims.top) < 0 || arrowDims.bottom + 1 > (scrollParent ? scrollParentDims.bottom : transformParentDims.bottom))) {\n                _this.arrow.style.visibility = 'hidden';\n              } else if (arrowDims) {\n                _this.arrow.style.visibility = 'visible';\n              }\n            } else {\n              targetNode.style.bottom = windowBottom - anchorPosition.top + arrowHeight + offsetHeight + \"px\";\n\n              if (!checkHorizontal) {\n                if (anchorPosition.top - scrollParentDimsv2.top - _this.elementHeight - arrowHeight < 0) {\n                  targetNode.style.top = scrollParentDimsv2.top + arrowHeight + \"px\";\n                  targetNode.style.maxHeight = (maxHeight || scrollParentDimsv2.height) + \"px\";\n                }\n              }\n\n              if (!checkVertical) {\n                if (_this.elementWidth > scrollParentDimsv2.width || _this.elementRight > scrollParentDimsv2.right) {\n                  targetNode.style.right = documentRight - scrollParentDimsv2.right + \"px\";\n                }\n\n                if (_this.elementLeft < scrollParentDimsv2.left) {\n                  targetNode.style.left = scrollParentDimsv2.left + \"px\";\n                }\n              }\n\n              if (arrowDims && (arrowDims.top < scrollParentDims.top || arrowDims.bottom + 1 > scrollParentDims.bottom)) {\n                _this.arrow.style.visibility = 'hidden';\n              } else if (arrowDims) {\n                _this.arrow.style.visibility = 'visible';\n              }\n            }\n          }\n\n          break;\n\n        case 'bottom':\n          if (!scrollParentDims.bottom && !transformParentDims) {\n            if (_this.elementHeight + arrowHeight + anchorPosition.bottom + documentScrollTop > documentBottom) {\n              targetNode.style.bottom = documentScrollTop + windowBottom - documentBottom + \"px\";\n            }\n\n            if (elementDims.right > documentRight || _this.elementWidth > documentRight) {\n              targetNode.style.right = '0px';\n\n              if (_this.elementWidth < documentRight) {\n                targetNode.style.left = documentRight - _this.elementWidth + \"px\";\n              }\n            }\n\n            if (elementDims.left < 0) {\n              targetNode.style.left = '0px';\n            }\n          } else if (scrollParentDims.bottom && !transformParentDims) {\n            targetNode.style.bottom = 'auto';\n\n            if (anchorPosition.bottom + arrowHeight - scrollParentDims.top < 0) {\n              targetNode.style.top = scrollParentDims.top - arrowHeight + \"px\";\n            }\n\n            if (_this.elementHeight + arrowHeight + anchorPosition.bottom > scrollParentDims.bottom) {\n              targetNode.style.bottom = windowBottom - scrollParentDims.bottom + \"px\";\n              targetNode.style.maxHeight = (maxHeight || scrollParentDims.height) + \"px\";\n            }\n\n            if (_this.elementWidth > scrollParentDims.width || _this.elementRight > scrollParentDims.right) {\n              targetNode.style.right = documentRight - scrollParentDims.right + \"px\";\n            }\n\n            if (_this.elementLeft < scrollParentDims.left) {\n              targetNode.style.left = scrollParentDims.left + \"px\";\n            }\n\n            if (arrowDims && (arrowDims.top < scrollParentDims.top || arrowDims.bottom + 1 > scrollParentDims.bottom)) {\n              _this.arrow.style.visibility = 'hidden';\n            } else if (arrowDims) {\n              _this.arrow.style.visibility = 'visible';\n            }\n          } else {\n            if (anchorPosition.bottom + arrowHeight + offsetHeight < scrollParentDims.top - transformParentDims.top) {\n              targetNode.style.top = scrollParentDims.top - transformParentDims.top - arrowHeight + \"px\";\n            }\n\n            if (_this.elementHeight + arrowHeight + anchorPosition.bottom > transformParentDims.height + (absoluteParentDims && absoluteParentDims.offsetTop || 0)) {\n              targetNode.style.bottom = \"0px\";\n            }\n\n            if (_this.elementLeft < transformParentDims.left) {\n              targetNode.style.left = \"0px\";\n            }\n\n            if (_this.elementWidth > transformParentDims.width || _this.elementRight > transformParentDims.right) {\n              targetNode.style.right = \"0px\";\n\n              if (_this.elementWidth > transformParentDims.width) {\n                targetNode.style.left = \"0px\";\n              } else {\n                targetNode.style.left = transformParentDims.width - _this.elementWidth + \"px\";\n              }\n            }\n\n            if (arrowDims && (arrowDims.top < (checkOverflow ? scrollParentDims.top : transformParentDims.top) || arrowDims.bottom + 1 > (checkOverflow ? scrollParentDims.bottom : transformParentDims.bottom))) {\n              _this.arrow.style.visibility = 'hidden';\n            } else if (arrowDims) {\n              _this.arrow.style.visibility = 'visible';\n            }\n          }\n\n          break;\n\n        case 'left':\n          if (!scrollParentDims.left && !transformParentDims) {\n            if (arrowWidth + offsetWidth + elementDims.width + anchorPosition.left > anchorPosition.left) {\n              targetNode.style.left = arrowWidth + \"px\";\n              targetNode.style.right = documentRight - anchorPosition.left + arrowWidth + offsetWidth + \"px\";\n            }\n\n            if (getAvailableTopSpace(documentScrollTop) < 0) {\n              targetNode.style.top = -documentScrollTop + \"px\";\n            }\n\n            if (_this.elementHeight + arrowHeight + anchorPosition.bottom + documentScrollTop > documentBottom) {\n              targetNode.style.bottom = documentScrollTop + windowBottom - documentBottom + \"px\";\n            }\n          } else if (scrollParentDims.left && !transformParentDims) {\n            if (anchorPosition.left - scrollParentDims.left < _this.elementWidth + arrowWidth) {\n              targetNode.style.left = scrollParentDims.left + arrowWidth + \"px\";\n              targetNode.style.right = documentRight - anchorPosition.left + arrowWidth + offsetWidth + \"px\";\n              targetNode.style.maxWidth = (maxWidth || scrollParentDims.width) + \"px\";\n            }\n\n            if (anchorPosition.top - scrollParentDims.top - _this.elementHeight < 0) {\n              targetNode.style.top = scrollParentDims.top + \"px\";\n            }\n\n            if (_this.elementHeight + anchorPosition.bottom > scrollParentDims.bottom) {\n              targetNode.style.bottom = windowBottom - scrollParentDims.bottom + \"px\";\n            }\n\n            if (arrowDims && (arrowDims.top < scrollParentDims.top || arrowDims.bottom > scrollParentDims.bottom)) {\n              _this.arrow.style.visibility = 'hidden';\n            } else if (arrowDims) {\n              _this.arrow.style.visibility = 'visible';\n            }\n          }\n\n          break;\n\n        case 'right':\n          if (!scrollParentDims.right && !transformParentDims) {\n            if (arrowWidth + offsetWidth + elementDims.width + anchorPosition.right > documentRight) {\n              targetNode.style.right = '0px';\n            }\n\n            if (getAvailableTopSpace(documentScrollTop) < 0) {\n              targetNode.style.top = -documentScrollTop + \"px\";\n            }\n\n            if (_this.elementHeight + arrowHeight + anchorPosition.bottom + documentScrollTop > documentBottom) {\n              targetNode.style.bottom = documentScrollTop + windowBottom - documentBottom + \"px\";\n            }\n          } else if (scrollParentDims.right && !transformParentDims) {\n            if (anchorPosition.right + _this.elementWidth + arrowWidth > scrollParentDims.right) {\n              targetNode.style.left = anchorPosition.right + offsetWidth + \"px\";\n              targetNode.style.right = transformParentDims ? scrollParentDims.width + \"px\" : documentRight - scrollParentDims.right + \"px\";\n              targetNode.style.maxWidth = (maxWidth || scrollParentDims.width) + \"px\";\n            }\n\n            if (anchorPosition.top - scrollParentDims.top - _this.elementHeight < 0) {\n              targetNode.style.top = scrollParentDims.top + \"px\";\n            }\n\n            if (_this.elementHeight + anchorPosition.bottom > scrollParentDims.bottom) {\n              targetNode.style.bottom = windowBottom - scrollParentDims.bottom + \"px\";\n            }\n\n            if (arrowDims && (arrowDims.top < scrollParentDims.top || arrowDims.bottom > scrollParentDims.bottom)) {\n              _this.arrow.style.visibility = 'hidden';\n            } else if (arrowDims) {\n              _this.arrow.style.visibility = 'visible';\n            }\n          }\n\n          break;\n      }\n    };\n\n    _this.setBoundingContainer = function (containerNode) {\n      var _this$props4 = _this.props,\n          boundingParentID = _this$props4.boundingParentID,\n          isContained = _this$props4.isContained;\n      var containerParent = _this.state.containerParent;\n      var containerNodeDims = containerNode && containerNode.getBoundingClientRect() || defaultDims;\n      var containerParentDims = containerParent && containerParent.getBoundingClientRect() || defaultDims;\n      var checkVertical = isContained === true || isContained === 'vertical';\n      var checkHorizontal = isContained === true || isContained === 'horizontal';\n      return {\n        bottom: checkVertical && boundingParentID ? containerParentDims.bottom : containerNodeDims.bottom,\n        center: 0,\n        height: checkVertical && boundingParentID ? containerParentDims.height : containerNodeDims.height,\n        left: checkHorizontal && boundingParentID ? containerParentDims.left : containerNodeDims.left,\n        middle: 0,\n        right: checkHorizontal && boundingParentID ? containerParentDims.right : containerNodeDims.right,\n        top: checkVertical && boundingParentID ? containerParentDims.top : containerNodeDims.top,\n        width: checkHorizontal && boundingParentID ? containerParentDims.width : containerNodeDims.width\n      };\n    };\n\n    _this.setHorizontalClass = function (alignment, anchor, elementBoundingRect, elementParent) {\n      var _this$props5 = _this.props,\n          showArrow = _this$props5.showArrow,\n          checkOverflow = _this$props5.checkOverflow,\n          targetOffset = _this$props5.targetOffset,\n          scrollParentID = _this$props5.scrollParentID;\n      var windowRight = window.pageYOffset + window.innerWidth;\n      var elementWidth = elementBoundingRect.width;\n      var anchorRight = anchor.right;\n      var arrowWidth = showArrow ? ReactDOM.findDOMNode(_this.arrow).getBoundingClientRect().width : 0;\n      var offsetWidth = targetOffset.horizontal || 0;\n      var totalWidth = anchorRight + elementWidth + arrowWidth + offsetWidth;\n\n      var elementParents = _this.findParents(elementParent);\n\n      var scrollParent = scrollParentID ? React.findDOMNode(scrollParentID) : _this.findScrollParent(elementParents, ['overflow', 'overflow-x']);\n      var parentRight = checkOverflow && !!scrollParent.getBoundingClientRect && scrollParent.getBoundingClientRect().right || windowRight;\n      return totalWidth < parentRight && totalWidth < windowRight ? _this.setState({\n        visibleDirection: \"right-\" + alignment\n      }, function () {\n        return _this.setPlacement();\n      }) : _this.setState({\n        visibleDirection: \"left-\" + alignment\n      }, function () {\n        return _this.setPlacement();\n      });\n    };\n\n    _this.setPlacement = function () {\n      var _this$props6 = _this.props,\n          anchorNode = _this$props6.anchorNode,\n          isOpen = _this$props6.isOpen,\n          isContained = _this$props6.isContained,\n          showArrow = _this$props6.showArrow,\n          targetOffset = _this$props6.targetOffset;\n      var _this$state2 = _this.state,\n          visibleDirection = _this$state2.visibleDirection,\n          absoluteParent = _this$state2.absoluteParent,\n          transformParent = _this$state2.transformParent;\n      if (!isOpen) return;\n      var anchorElement = ReactDOM.findDOMNode(anchorNode);\n      var side = visibleDirection.split('-')[0];\n      var targetNode = _this.container;\n      var verticalOffset = targetOffset.vertical || 0;\n      var horizontalOffset = targetOffset.horizontal || 0;\n\n      var absoluteParentDims = absoluteParent && _this.getElementPosition(absoluteParent);\n\n      if (!targetNode || !anchorElement) return;\n      anchorElement.link = _this.state.id;\n      var anchorPosition = !!transformParent && absoluteParentDims && absoluteParentDims.hasAbsParent ? _this.getAbsoluteAnchorPosition(anchorElement, absoluteParentDims) : _this.getAnchorPosition(anchorElement);\n\n      var targetPosition = _this.getTargetPosition(targetNode);\n\n      var origin = _this.getOrigin();\n\n      var anchorOrigin = origin.anchor;\n      var targetOrigin = origin.target;\n      var targetNodePosition = {\n        top: anchorPosition[anchorOrigin.vertical] - targetPosition[targetOrigin.vertical] + (side === 'top' ? -verticalOffset : verticalOffset),\n        left: anchorPosition[anchorOrigin.horizontal] - targetPosition[targetOrigin.horizontal] + (side === 'left' ? -horizontalOffset : horizontalOffset)\n      };\n      targetNode.style.top = targetNodePosition.top + \"px\";\n      targetNode.style.left = targetNodePosition.left + \"px\";\n      showArrow && _this.setArrowPlacement(anchorPosition, targetPosition);\n      isContained && _this.setBoundingBox(side, targetNode, anchorPosition);\n    };\n\n    _this.setVerticalClass = function (alignment, anchor, elementBoundingRect, elementParent) {\n      var _this$props7 = _this.props,\n          showArrow = _this$props7.showArrow,\n          checkOverflow = _this$props7.checkOverflow,\n          targetOffset = _this$props7.targetOffset,\n          scrollParentID = _this$props7.scrollParentID;\n      var windowBottom = window.pageXOffset + window.innerHeight;\n      var elementHeight = elementBoundingRect.height;\n      var anchorBottom = anchor.bottom;\n      var arrowHeight = showArrow ? ReactDOM.findDOMNode(_this.arrow).getBoundingClientRect().height : 0;\n      var offsetHeight = targetOffset.vertical || 0;\n      var totalHeight = anchorBottom + elementHeight + arrowHeight + offsetHeight;\n\n      var elementParents = _this.findParents(elementParent);\n\n      var scrollParent = scrollParentID ? React.findDOMNode(scrollParentID) : _this.findScrollParent(elementParents, ['overflow', 'overflow-x']);\n      var parentBottom = checkOverflow && !!scrollParent.getBoundingClientRect && scrollParent.getBoundingClientRect().bottom || windowBottom;\n      return totalHeight < parentBottom && totalHeight < windowBottom ? _this.setState({\n        visibleDirection: \"bottom-\" + alignment\n      }, function () {\n        return _this.setPlacement();\n      }) : _this.setState({\n        visibleDirection: \"top-\" + alignment\n      }, function () {\n        return _this.setPlacement();\n      });\n    };\n\n    return _this;\n  }\n\n  EventOverlay.getDerivedStateFromProps = function getDerivedStateFromProps(_ref, state) {\n    var isOpen = _ref.isOpen;\n    return _extends({}, state, {\n      isOpen: isOpen\n    });\n  };\n\n  var _proto = EventOverlay.prototype;\n\n  _proto.render = function render() {\n    var _this2 = this;\n\n    var _this$props8 = this.props,\n        children = _this$props8.children,\n        className = _this$props8.className,\n        focusLockProps = _this$props8.focusLockProps,\n        isOpen = _this$props8.isOpen,\n        maxHeight = _this$props8.maxHeight,\n        maxWidth = _this$props8.maxWidth,\n        portalNode = _this$props8.portalNode,\n        shouldLockFocus = _this$props8.shouldLockFocus,\n        showArrow = _this$props8.showArrow,\n        style = _this$props8.style,\n        props = _objectWithoutPropertiesLoose(_this$props8, [\"children\", \"className\", \"focusLockProps\", \"isOpen\", \"maxHeight\", \"maxWidth\", \"portalNode\", \"shouldLockFocus\", \"showArrow\", \"style\"]);\n\n    var side = this.state.visibleDirection.split('-')[0];\n    var otherProps = omit(_extends({}, props), ['absoluteParentID', 'allowClickAway', 'anchorNode', 'boundingParentID', 'checkOverflow', 'close', 'closeOnClick', 'direction', 'isDynamic', 'isContained', 'scrollParentID', 'targetOffset', 'transformParentID']);\n    var contentNodes = isOpen && React.createElement(\"div\", {\n      className: 'md-event-overlay' + (\"\" + (showArrow && \" md-event-overlay--arrow\" || '')) + (\"\" + (side && \" md-event-overlay--\" + side || '')) + (\"\" + (className && \" \" + className || ''))\n    }, showArrow && React.createElement(\"div\", {\n      ref: function ref(_ref2) {\n        return _this2.arrow = _ref2;\n      },\n      className: \"md-event-overlay__arrow\"\n    }), React.createElement(\"div\", _extends({\n      className: \"md-event-overlay__children\",\n      ref: function ref(_ref3) {\n        return _this2.container = _ref3;\n      },\n      style: _extends({}, maxWidth && {\n        maxWidth: maxWidth + \"px\"\n      }, {}, maxHeight && {\n        maxHeight: maxHeight + \"px\"\n      }, {}, style)\n    }, otherProps), children));\n\n    var withFocusLock = function withFocusLock(content) {\n      return shouldLockFocus ? React.createElement(FocusLock, focusLockProps, content) : content;\n    };\n\n    var withPortal = function withPortal(content) {\n      return portalNode ? ReactDOM.createPortal(content, portalNode) : content;\n    };\n\n    return withFocusLock(withPortal(contentNodes));\n  };\n\n  return EventOverlay;\n}(React.Component);\n\nEventOverlay.defaultProps = {\n  absoluteParentID: null,\n  allowClickAway: true,\n  anchorNode: null,\n  boundingParentID: null,\n  children: null,\n  checkOverflow: false,\n  className: '',\n  close: null,\n  direction: 'bottom-left',\n  focusLockProps: null,\n  isContained: '',\n  isDynamic: false,\n  isOpen: false,\n  maxHeight: null,\n  maxWidth: null,\n  portalNode: null,\n  scrollParentID: null,\n  shouldLockFocus: false,\n  showArrow: false,\n  style: null,\n  targetOffset: {\n    horizontal: 0,\n    vertical: 0\n  },\n  transformParentID: null\n};\nEventOverlay.propTypes = {\n  /** @prop Set the id of the absoluteParent | null */\n  absoluteParentID: PropTypes.string,\n\n  /** @prop Allows user to click outside of EventOverlay | true */\n  allowClickAway: PropTypes.bool,\n\n  /** @prop Node which serves as basis of dom positioning | null */\n  anchorNode: PropTypes.object,\n\n  /** @prop Set the id of the boundingParent | null */\n  boundingParentID: PropTypes.string,\n\n  /** @prop Set to determine if dom ancestors have overflow property | false */\n  checkOverflow: PropTypes.bool,\n\n  /** @prop Children nodes to render inside the EventOverlay | null */\n  children: PropTypes.node,\n\n  /** @prop Optional css class string | '' */\n  className: PropTypes.string,\n\n  /** @prop Function to close EventOverlay | null */\n  close: PropTypes.func,\n\n  /** @prop Determines if the EventOverlay should close when clicked on | true */\n  closeOnClick: PropTypes.bool,\n\n  /** @prop Sets the direction in which the EventOverlay extends | 'bottom-left' */\n  direction: PropTypes.oneOf(['top-center', 'left-center', 'right-center', 'bottom-center', 'top-left', 'top-right', 'bottom-left', 'bottom-right', 'left-top', 'left-bottom', 'right-top', 'right-bottom']),\n\n  /** @prop Props to be passed to focus lock component | null */\n  focusLockProps: PropTypes.object,\n\n  /** @prop Determines if the overlay is contained in bounding ancestor | '' */\n  isContained: PropTypes.oneOf([true, false, 'horizontal', 'vertical', 'both', '']),\n\n  /** @prop When true, will flip children based on space available (does not work with isContained) | false */\n  isDynamic: PropTypes.bool,\n\n  /** @prop Sets the visibility of the EventOverlay | false */\n  isOpen: PropTypes.bool,\n\n  /** @prop Sets the max height of the EventOverlay | null */\n  maxHeight: PropTypes.number,\n\n  /** @prop Sets the max width of the EventOverlay | null */\n  maxWidth: PropTypes.number,\n\n  /** @prop Node/element where overlay should be appended using ReactDOM portal | null */\n  portalNode: PropTypes.oneOfType([PropTypes.node, PropTypes.instanceOf(Element)]),\n\n  /** @prop Set the id of the scrollParent | null */\n  scrollParentID: PropTypes.string,\n\n  /** @prop Determines if focus should be locked to overlay | false */\n  shouldLockFocus: PropTypes.bool,\n\n  /** @prop Determines if the EventOverlay should show the open/close arrow | false */\n  showArrow: PropTypes.bool,\n\n  /** @prop Optional css styling | null */\n  style: PropTypes.object,\n\n  /** @prop Sets the target offset from anchorNode | { horizontal: 0, vertical: 0 } */\n  targetOffset: PropTypes.shape({\n    horizontal: PropTypes.number,\n    vertical: PropTypes.number\n  }),\n\n  /** @prop Set the id of the transformParent | null */\n  transformParentID: PropTypes.string\n};\nEventOverlay.displayName = 'EventOverlay';\nexport default EventOverlay;"]},"metadata":{},"sourceType":"module"}