{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = undefined;\n\nvar _assign = require('babel-runtime/core-js/object/assign');\n\nvar _assign2 = _interopRequireDefault(_assign);\n\nvar _promise = require('babel-runtime/core-js/promise');\n\nvar _promise2 = _interopRequireDefault(_promise);\n\nvar _map = require('babel-runtime/core-js/map');\n\nvar _map2 = _interopRequireDefault(_map);\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _weakMap = require('babel-runtime/core-js/weak-map');\n\nvar _weakMap2 = _interopRequireDefault(_weakMap);\n\nvar _common = require('@webex/common');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar usersByEmail = new _weakMap2.default();\n/*!\n * Copyright (c) 2015-2019 Cisco Systems, Inc. See LICENSE file.\n */\n\nvar usersById = new _weakMap2.default();\n/**\n * @class\n */\n\nvar UserUUIDStore = function () {\n  /**\n   * @constructs {UserUUIDStore}\n   */\n  function UserUUIDStore() {\n    (0, _classCallCheck3.default)(this, UserUUIDStore);\n    usersByEmail.set(this, new _map2.default());\n    usersById.set(this, new _map2.default());\n  }\n  /**\n   * Adds a user object to the store\n   * @param {Object} user\n   * @param {string} user.id\n   * @param {string} user.emailAddress\n   * @returns {Promise}\n   */\n\n\n  (0, _createClass3.default)(UserUUIDStore, [{\n    key: 'add',\n    value: function add(user) {\n      var _this = this;\n\n      if (!user.id) {\n        return _promise2.default.reject(new Error('`user.id` is required'));\n      }\n\n      if (!user.emailAddress) {\n        return _promise2.default.reject(new Error('`user.emailAddress` is required'));\n      }\n\n      if (!_common.patterns.uuid.test(user.id)) {\n        return _promise2.default.reject(new Error('`user.id` does not appear to be a uuid'));\n      }\n\n      if (!_common.patterns.email.test(user.emailAddress)) {\n        return _promise2.default.reject(new Error('`user.emailAddress` does not appear to be an email address'));\n      }\n\n      var p1 = this.getById(user.id).then(function (u) {\n        return usersById.get(_this).set(user.id, (0, _assign2.default)({}, u, user));\n      }).catch(function () {\n        return usersById.get(_this).set(user.id, (0, _assign2.default)({}, user));\n      });\n      var p2 = this.getByEmail(user.emailAddress).then(function (u) {\n        return usersByEmail.get(_this).set(user.emailAddress, (0, _assign2.default)({}, u, user));\n      }).catch(function () {\n        return usersByEmail.get(_this).set(user.emailAddress, (0, _assign2.default)({}, user));\n      });\n      return _promise2.default.all([p1, p2]);\n    }\n    /**\n     * Retrievves the specified user object from the store\n     * @param {string} id\n     * @returns {Promise<Object>}\n     */\n\n  }, {\n    key: 'get',\n    value: function get(id) {\n      if (_common.patterns.uuid.test(id)) {\n        return this.getById(id);\n      }\n\n      if (_common.patterns.email.test(id)) {\n        return this.getByEmail(id);\n      }\n\n      return _promise2.default.reject(new Error('`id` does not appear to be a valid user identifier'));\n    }\n    /**\n     * Retrieves the specified user object by id from the store\n     * @param {Object} id\n     * @returns {Promise<Object>}\n     */\n\n  }, {\n    key: 'getById',\n    value: function getById(id) {\n      var ret = usersById.get(this).get(id);\n\n      if (ret) {\n        return _promise2.default.resolve(ret);\n      }\n\n      return _promise2.default.reject(new Error('No user found by specified id'));\n    }\n    /**\n     * Retrieves the specified user object by id from the store\n     * @param {Object} email\n     * @returns {Promise<Object>}\n     */\n\n  }, {\n    key: 'getByEmail',\n    value: function getByEmail(email) {\n      var ret = usersByEmail.get(this).get(email);\n\n      if (ret) {\n        return _promise2.default.resolve(ret);\n      }\n\n      return _promise2.default.reject(new Error('No user found by specified email address'));\n    }\n  }]);\n  return UserUUIDStore;\n}();\n\nexports.default = UserUUIDStore;","map":{"version":3,"sources":["user-uuid-store.js"],"names":["usersByEmail","usersById","UserUUIDStore","user","patterns","p1","p2","id","ret","email"],"mappings":"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","sourcesContent":["/*!\n * Copyright (c) 2015-2019 Cisco Systems, Inc. See LICENSE file.\n */\n\nimport {patterns} from '@webex/common';\n\nconst usersByEmail = new WeakMap();\nconst usersById = new WeakMap();\n\n/**\n * @class\n */\nexport default class UserUUIDStore {\n  /**\n   * @constructs {UserUUIDStore}\n   */\n  constructor() {\n    usersByEmail.set(this, new Map());\n    usersById.set(this, new Map());\n  }\n\n  /**\n   * Adds a user object to the store\n   * @param {Object} user\n   * @param {string} user.id\n   * @param {string} user.emailAddress\n   * @returns {Promise}\n   */\n  add(user) {\n    if (!user.id) {\n      return Promise.reject(new Error('`user.id` is required'));\n    }\n\n    if (!user.emailAddress) {\n      return Promise.reject(new Error('`user.emailAddress` is required'));\n    }\n\n    if (!patterns.uuid.test(user.id)) {\n      return Promise.reject(new Error('`user.id` does not appear to be a uuid'));\n    }\n\n    if (!patterns.email.test(user.emailAddress)) {\n      return Promise.reject(new Error('`user.emailAddress` does not appear to be an email address'));\n    }\n\n    const p1 = this.getById(user.id)\n      .then((u) => usersById.get(this).set(user.id, Object.assign({}, u, user)))\n      .catch(() => usersById.get(this).set(user.id, Object.assign({}, user)));\n\n    const p2 = this.getByEmail(user.emailAddress)\n      .then((u) => usersByEmail.get(this).set(user.emailAddress, Object.assign({}, u, user)))\n      .catch(() => usersByEmail.get(this).set(user.emailAddress, Object.assign({}, user)));\n\n    return Promise.all([p1, p2]);\n  }\n\n  /**\n   * Retrievves the specified user object from the store\n   * @param {string} id\n   * @returns {Promise<Object>}\n   */\n  get(id) {\n    if (patterns.uuid.test(id)) {\n      return this.getById(id);\n    }\n\n    if (patterns.email.test(id)) {\n      return this.getByEmail(id);\n    }\n\n    return Promise.reject(new Error('`id` does not appear to be a valid user identifier'));\n  }\n\n  /**\n   * Retrieves the specified user object by id from the store\n   * @param {Object} id\n   * @returns {Promise<Object>}\n   */\n  getById(id) {\n    const ret = usersById.get(this).get(id);\n\n    if (ret) {\n      return Promise.resolve(ret);\n    }\n\n    return Promise.reject(new Error('No user found by specified id'));\n  }\n\n\n  /**\n   * Retrieves the specified user object by id from the store\n   * @param {Object} email\n   * @returns {Promise<Object>}\n   */\n  getByEmail(email) {\n    const ret = usersByEmail.get(this).get(email);\n\n    if (ret) {\n      return Promise.resolve(ret);\n    }\n\n    return Promise.reject(new Error('No user found by specified email address'));\n  }\n}\n"]},"metadata":{},"sourceType":"script"}