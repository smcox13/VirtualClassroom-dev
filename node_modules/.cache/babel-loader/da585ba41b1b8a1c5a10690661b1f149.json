{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof2 = require('babel-runtime/helpers/typeof');\n\nvar _typeof3 = _interopRequireDefault(_typeof2);\n\nvar _deleteProperty = require('babel-runtime/core-js/reflect/delete-property');\n\nvar _deleteProperty2 = _interopRequireDefault(_deleteProperty);\n\nvar _getIterator2 = require('babel-runtime/core-js/get-iterator');\n\nvar _getIterator3 = _interopRequireDefault(_getIterator2);\n\nvar _keys = require('babel-runtime/core-js/object/keys');\n\nvar _keys2 = _interopRequireDefault(_keys);\n\nvar _promise = require('babel-runtime/core-js/promise');\n\nvar _promise2 = _interopRequireDefault(_promise);\n\nvar _pick2 = require('lodash/pick');\n\nvar _pick3 = _interopRequireDefault(_pick2);\n\nvar _isArray2 = require('lodash/isArray');\n\nvar _isArray3 = _interopRequireDefault(_isArray2);\n\nvar _defaults2 = require('lodash/defaults');\n\nvar _defaults3 = _interopRequireDefault(_defaults2);\n\nexports.default = _request;\n\nvar _qs = require('qs');\n\nvar _qs2 = _interopRequireDefault(_qs);\n\nvar _xhr = require('../lib/xhr');\n\nvar _xhr2 = _interopRequireDefault(_xhr);\n\nvar _detect = require('../lib/detect');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * @name request\n * @param {Object} options\n * @returns {Promise}\n */\n\n\nfunction _request(options) {\n  return new _promise2.default(function (resolve) {\n    var params = (0, _pick3.default)(options, 'method', 'uri', 'withCredentials', 'headers', 'timeout', 'responseType'); // Set `response` to `true` to approximate an `HttpResponse` object\n\n    params.response = true;\n    bindProgressEvents(params, options);\n    setAuth(params, options);\n    setCookies(params, options);\n    setDefaults(params, options);\n    setResponseType(params, options);\n    setContentType(params, options);\n    setPayload(params, options);\n    setQs(params, options);\n    var x = (0, _xhr2.default)(params, function (error, response) {\n      /* istanbul ignore next */\n      if (error) {\n        options.logger.warn(error);\n      }\n      /* istanbul ignore else */\n\n\n      if (response) {\n        response.options = options;\n        processResponseJson(response, params);\n        resolve(response);\n      } else {\n        resolve({\n          statusCode: 0,\n          options: options,\n          headers: options.headers,\n          method: options.method,\n          url: options.uri,\n          body: error\n        });\n      }\n    });\n    x.onprogress = options.download.emit.bind(options.download, 'progress');\n  }).catch(function (error) {\n    /* eslint arrow-body-style: [0] */\n\n    /* istanbul ignore next */\n    return {\n      statusCode: 0,\n      options: options,\n      headers: options.headers,\n      method: options.method,\n      url: options.uri,\n      body: error\n    };\n  });\n  /**\n   * @param {Object} params\n   * @param {Object} o\n   * @private\n   * @returns {undefined}\n   */\n\n  function bindProgressEvents(params, o) {\n    if (params.method && ['PATCH', 'POST', 'PUT'].includes(params.method.toUpperCase())) {\n      params.xhr = new XMLHttpRequest();\n      params.xhr.upload.onprogress = o.upload.emit.bind(o.upload, 'progress');\n    }\n  }\n  /**\n   * @param {Object} params\n   * @param {Object} o\n   * @private\n   * @returns {undefined}\n   */\n\n\n  function setAuth(params, o) {\n    if (o.auth) {\n      if (o.auth.bearer) {\n        params.headers.authorization = 'Bearer ' + o.auth.bearer;\n      } else {\n        var user = o.auth.user || o.auth.username;\n        var pass = o.auth.pass || o.auth.password;\n        var token = btoa(user + ':' + pass);\n        params.headers.authorization = 'Basic ' + token;\n      }\n    }\n  }\n  /**\n   * @param {Object} params\n   * @param {Object} o\n   * @private\n   * @returns {undefined}\n   */\n\n\n  function setCookies(params, o) {\n    if (o.jar) {\n      params.withCredentials = true;\n    }\n  }\n  /**\n   * @param {Object} params\n   * @param {Object} o\n   * @private\n   * @returns {undefined}\n   */\n\n\n  function setDefaults(params, o) {\n    var defs = {\n      cors: true,\n      // raynos/xhr defaults withCredentials to true if cors is true, so we need\n      // to make it explicitly false by default\n      withCredentials: false,\n      timeout: 0\n    };\n    (0, _defaults3.default)(params, (0, _pick3.default)(o, (0, _keys2.default)(defs)), defs);\n  }\n  /**\n   * @param {Object} params\n   * @param {Object} o\n   * @private\n   * @returns {undefined}\n   */\n\n\n  function setResponseType(params, o) {\n    if (o.responseType === 'buffer') {\n      params.responseType = 'arraybuffer';\n    }\n  }\n  /**\n   * @param {Object} params\n   * @param {Object} o\n   * @private\n   * @returns {undefined}\n   */\n\n\n  function setContentType(params, o) {\n    if (o.body instanceof Blob || o.body instanceof ArrayBuffer) {\n      o.json = params.json = false;\n      params.headers['content-type'] = params.headers['content-type'] || (0, _detect.detectSync)(o.body);\n    }\n  }\n  /**\n   * @param {Object} params\n   * @param {Object} o\n   * @private\n   * @returns {undefined}\n   */\n\n\n  function setQs(params, o) {\n    if (o.qs) {\n      params.uri += '?' + _qs2.default.stringify(o.qs);\n    }\n  }\n  /**\n   * Converts arraybuffers to blobs before uploading them\n   * @param {mixed} file\n   * @private\n   * @returns {mixed}\n   */\n\n\n  function ensureBlob(file) {\n    if (file instanceof ArrayBuffer) {\n      var ret = file.type ? new Blob([file], {\n        type: file.type\n      }) : new Blob([file]);\n      ret.filename = file.filename || file.name || 'untitled';\n      return ret;\n    }\n\n    return file;\n  }\n  /**\n   * Appends an item to a form\n   * @param {FormData} form\n   * @param {string} key\n   * @param {mixed} value\n   * @returns {undefined}\n   */\n\n\n  function append(form, key, value) {\n    if ((0, _isArray3.default)(value)) {\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = (0, _getIterator3.default)(value), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var v = _step.value;\n          append(form, key, v);\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      return;\n    }\n\n    value = ensureBlob(value);\n\n    if (value.name) {\n      value.filename = value.name;\n      form.append(key, value, value.name);\n    } else {\n      form.append(key, value);\n    }\n  }\n  /**\n   * @param {Object} params\n   * @param {Object} o\n   * @private\n   * @returns {undefined}\n   */\n\n\n  function setPayload(params, o) {\n    if ((!('json' in o) || o.json === true) && o.body) {\n      params.json = o.body;\n    } else if (o.form) {\n      params.headers['Content-Type'] = 'application/x-www-form-urlencoded';\n      params.body = _qs2.default.stringify(o.form);\n      (0, _deleteProperty2.default)(params, 'json');\n    } else if (o.formData) {\n      params.body = (0, _keys2.default)(o.formData).reduce(function (fd, key) {\n        var value = o.formData[key];\n        append(fd, key, value);\n        return fd;\n      }, new FormData());\n    } else {\n      params.body = o.body;\n      (0, _deleteProperty2.default)(params, 'json');\n    }\n  }\n  /**\n   * @param {Object} response\n   * @param {Object} params\n   * @private\n   * @returns {undefined}\n   */\n\n\n  function processResponseJson(response, params) {\n    // If params.json is not defined, xhr won't deserialize the response\n    // so we should give it a shot just in case.\n    if (!params.json && (0, _typeof3.default)(response.body) !== 'object') {\n      try {\n        response.body = JSON.parse(response.body);\n      } catch (e) {\n        /* eslint no-empty: [0] */\n      }\n    }\n  }\n}\n/*!\n * Copyright (c) 2015-2019 Cisco Systems, Inc. See LICENSE file.\n */\n\n/* eslint-env browser */\n// Note: several code paths are ignored in this file. As far as I can tell, any\n// error conditions that would provoke those paths are otherwise prevented and\n// reported.","map":{"version":3,"sources":["request.shim.js"],"names":["_request","params","bindProgressEvents","setAuth","setCookies","setDefaults","setResponseType","setContentType","setPayload","setQs","x","options","response","processResponseJson","resolve","statusCode","headers","method","url","body","error","o","user","pass","token","btoa","defs","cors","withCredentials","timeout","qs","file","ret","type","v","append","value","ensureBlob","form","JSON"],"mappings":"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","sourcesContent":["/*!\n * Copyright (c) 2015-2019 Cisco Systems, Inc. See LICENSE file.\n */\n\n/* eslint-env browser */\n\n// Note: several code paths are ignored in this file. As far as I can tell, any\n// error conditions that would provoke those paths are otherwise prevented and\n// reported.\n\nimport {defaults, isArray, pick} from 'lodash';\nimport qs from 'qs';\nimport xhr from '../lib/xhr';\nimport {detectSync} from '../lib/detect';\n\n/**\n * @name request\n * @param {Object} options\n * @returns {Promise}\n */\nexport default function _request(options) {\n  return new Promise((resolve) => {\n    const params = pick(options, 'method', 'uri', 'withCredentials', 'headers', 'timeout', 'responseType');\n\n    // Set `response` to `true` to approximate an `HttpResponse` object\n    params.response = true;\n\n    bindProgressEvents(params, options);\n    setAuth(params, options);\n    setCookies(params, options);\n    setDefaults(params, options);\n    setResponseType(params, options);\n    setContentType(params, options);\n    setPayload(params, options);\n    setQs(params, options);\n\n    const x = xhr(params, (error, response) => {\n      /* istanbul ignore next */\n      if (error) {\n        options.logger.warn(error);\n      }\n\n      /* istanbul ignore else */\n      if (response) {\n        response.options = options;\n        processResponseJson(response, params);\n        resolve(response);\n      }\n      else {\n        resolve({\n          statusCode: 0,\n          options,\n          headers: options.headers,\n          method: options.method,\n          url: options.uri,\n          body: error\n        });\n      }\n    });\n\n    x.onprogress = options.download.emit.bind(options.download, 'progress');\n  })\n    .catch((error) => {\n    /* eslint arrow-body-style: [0] */\n    /* istanbul ignore next */\n      return {\n        statusCode: 0,\n        options,\n        headers: options.headers,\n        method: options.method,\n        url: options.uri,\n        body: error\n      };\n    });\n\n  /**\n   * @param {Object} params\n   * @param {Object} o\n   * @private\n   * @returns {undefined}\n   */\n  function bindProgressEvents(params, o) {\n    if (params.method && ['PATCH', 'POST', 'PUT'].includes(params.method.toUpperCase())) {\n      params.xhr = new XMLHttpRequest();\n      params.xhr.upload.onprogress = o.upload.emit.bind(o.upload, 'progress');\n    }\n  }\n\n  /**\n   * @param {Object} params\n   * @param {Object} o\n   * @private\n   * @returns {undefined}\n   */\n  function setAuth(params, o) {\n    if (o.auth) {\n      if (o.auth.bearer) {\n        params.headers.authorization = `Bearer ${o.auth.bearer}`;\n      }\n      else {\n        const user = o.auth.user || o.auth.username;\n        const pass = o.auth.pass || o.auth.password;\n\n        const token = btoa(`${user}:${pass}`);\n\n        params.headers.authorization = `Basic ${token}`;\n      }\n    }\n  }\n\n  /**\n   * @param {Object} params\n   * @param {Object} o\n   * @private\n   * @returns {undefined}\n   */\n  function setCookies(params, o) {\n    if (o.jar) {\n      params.withCredentials = true;\n    }\n  }\n\n  /**\n   * @param {Object} params\n   * @param {Object} o\n   * @private\n   * @returns {undefined}\n   */\n  function setDefaults(params, o) {\n    const defs = {\n      cors: true,\n      // raynos/xhr defaults withCredentials to true if cors is true, so we need\n      // to make it explicitly false by default\n      withCredentials: false,\n      timeout: 0\n    };\n\n    defaults(params, pick(o, Object.keys(defs)), defs);\n  }\n\n  /**\n   * @param {Object} params\n   * @param {Object} o\n   * @private\n   * @returns {undefined}\n   */\n  function setResponseType(params, o) {\n    if (o.responseType === 'buffer') {\n      params.responseType = 'arraybuffer';\n    }\n  }\n\n  /**\n   * @param {Object} params\n   * @param {Object} o\n   * @private\n   * @returns {undefined}\n   */\n  function setContentType(params, o) {\n    if (o.body instanceof Blob || o.body instanceof ArrayBuffer) {\n      o.json = params.json = false;\n      params.headers['content-type'] = params.headers['content-type'] || detectSync(o.body);\n    }\n  }\n\n  /**\n   * @param {Object} params\n   * @param {Object} o\n   * @private\n   * @returns {undefined}\n   */\n  function setQs(params, o) {\n    if (o.qs) {\n      params.uri += `?${qs.stringify(o.qs)}`;\n    }\n  }\n\n  /**\n   * Converts arraybuffers to blobs before uploading them\n   * @param {mixed} file\n   * @private\n   * @returns {mixed}\n   */\n  function ensureBlob(file) {\n    if (file instanceof ArrayBuffer) {\n      const ret = file.type ? new Blob([file], {type: file.type}) : new Blob([file]);\n\n      ret.filename = file.filename || file.name || 'untitled';\n\n      return ret;\n    }\n\n    return file;\n  }\n\n  /**\n   * Appends an item to a form\n   * @param {FormData} form\n   * @param {string} key\n   * @param {mixed} value\n   * @returns {undefined}\n   */\n  function append(form, key, value) {\n    if (isArray(value)) {\n      for (const v of value) {\n        append(form, key, v);\n      }\n\n      return;\n    }\n\n    value = ensureBlob(value);\n    if (value.name) {\n      value.filename = value.name;\n      form.append(key, value, value.name);\n    }\n    else {\n      form.append(key, value);\n    }\n  }\n\n  /**\n   * @param {Object} params\n   * @param {Object} o\n   * @private\n   * @returns {undefined}\n   */\n  function setPayload(params, o) {\n    if ((!('json' in o) || o.json === true) && o.body) {\n      params.json = o.body;\n    }\n    else if (o.form) {\n      params.headers['Content-Type'] = 'application/x-www-form-urlencoded';\n      params.body = qs.stringify(o.form);\n      Reflect.deleteProperty(params, 'json');\n    }\n    else if (o.formData) {\n      params.body = Object.keys(o.formData).reduce((fd, key) => {\n        const value = o.formData[key];\n\n        append(fd, key, value);\n\n        return fd;\n      }, new FormData());\n    }\n    else {\n      params.body = o.body;\n      Reflect.deleteProperty(params, 'json');\n    }\n  }\n\n  /**\n   * @param {Object} response\n   * @param {Object} params\n   * @private\n   * @returns {undefined}\n   */\n  function processResponseJson(response, params) {\n    // If params.json is not defined, xhr won't deserialize the response\n    // so we should give it a shot just in case.\n    if (!params.json && typeof response.body !== 'object') {\n      try {\n        response.body = JSON.parse(response.body);\n      }\n      catch (e) {\n        /* eslint no-empty: [0] */\n      }\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"script"}