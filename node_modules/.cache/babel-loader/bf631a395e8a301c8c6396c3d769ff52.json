{"ast":null,"code":"/**!\n * lib/response.js -- KMS (Generic) Response\n *\n * Copyright (c) 2015 Cisco Systems, Inc. See LICENSE file.\n */\n\"use strict\";\n\nvar clone = require(\"lodash.clone\"),\n    jose = require(\"node-jose\");\n\nfunction KMSResponse(wrapped) {\n  wrapped = wrapped || \"\";\n  var body = {};\n  Object.defineProperty(this, \"wrapped\", {\n    get: function () {\n      return wrapped;\n    },\n    set: function (w) {\n      // clear existing body before saving wrapped\n      body = {};\n      wrapped = String(w || \"\");\n    },\n    enumerable: true\n  });\n  Object.defineProperty(this, \"body\", {\n    get: function () {\n      return body;\n    },\n    set: function (b) {\n      body = b && clone(b) || {};\n    },\n    enumerable: true\n  });\n  Object.defineProperty(this, \"status\", {\n    get: function () {\n      return body.status || 0;\n    },\n    set: function (s) {\n      s = parseInt(s);\n\n      if (!isNaN(s)) {\n        body.status = s;\n      }\n    },\n    enumerable: true\n  });\n  Object.defineProperty(this, \"reason\", {\n    get: function () {\n      return body.reason || \"\";\n    },\n    set: function (r) {\n      body.reason = String(r || \"\");\n    },\n    enumerable: true\n  });\n  Object.defineProperty(this, \"requestId\", {\n    get: function () {\n      return body.requestId || \"\";\n    },\n    set: function (id) {\n      body.requestId = String(id || \"\");\n    },\n    enumerable: true\n  });\n}\n\nKMSResponse.prototype.unwrap = function (ctx, opts) {\n  opts = opts || {};\n  var keystore = jose.JWK.createKeyStore(),\n      waiting = [],\n      key; // add ephemeral key (if any)\n\n  key = ctx.ephemeralKey && ctx.ephemeralKey.jwk;\n\n  if (key) {\n    waiting.push(keystore.add(key));\n  } // add server key (if any)\n\n\n  key = ctx.serverInfo && ctx.serverInfo.key;\n\n  if (key) {\n    waiting.push(keystore.add(key));\n  }\n\n  var self = this;\n  var promise = Promise.all(waiting);\n  promise = promise.then(function () {\n    var wrapped = self.wrapped; // count the dots\n\n    switch ((wrapped.match(/\\./g) || []).length) {\n      case 2:\n        // signed\n        return jose.JWS.createVerify(keystore).verify(wrapped);\n\n      case 4:\n        // encrypted\n        return jose.JWE.createDecrypt(keystore).decrypt(wrapped);\n\n      default:\n        // bogus\n        return Promise.reject(new Error(\"invalid wrapped\"));\n    }\n  });\n  promise = promise.then(function (result) {\n    // parse result to JSON\n    result = (result.plaintext || result.payload).toString(\"utf8\");\n    result = JSON.parse(result); // save it before returning it\n\n    self.body = result;\n    return result;\n  });\n  return promise;\n};\n\nmodule.exports = KMSResponse;","map":{"version":3,"sources":["/Users/pratison/Work/Cisco/Education/React/education-webex/node_modules/node-kms/lib/response.js"],"names":["clone","require","jose","KMSResponse","wrapped","body","Object","defineProperty","get","set","w","String","enumerable","b","status","s","parseInt","isNaN","reason","r","requestId","id","prototype","unwrap","ctx","opts","keystore","JWK","createKeyStore","waiting","key","ephemeralKey","jwk","push","add","serverInfo","self","promise","Promise","all","then","match","length","JWS","createVerify","verify","JWE","createDecrypt","decrypt","reject","Error","result","plaintext","payload","toString","JSON","parse","module","exports"],"mappings":"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","sourcesContent":["/**!\n * lib/response.js -- KMS (Generic) Response\n *\n * Copyright (c) 2015 Cisco Systems, Inc. See LICENSE file.\n */\n \"use strict\";\n\nvar clone = require(\"lodash.clone\"),\n    jose = require(\"node-jose\");\n\nfunction KMSResponse(wrapped) {\n  wrapped = wrapped || \"\";\n  var body = {};\n\n  Object.defineProperty(this, \"wrapped\", {\n    get: function() { return wrapped; },\n    set: function(w) {\n      // clear existing body before saving wrapped\n      body = {};\n      wrapped = String(w || \"\");\n    },\n    enumerable: true\n  });\n  Object.defineProperty(this, \"body\", {\n    get: function() { return body; },\n    set: function(b) { body = (b && clone(b)) || {}; },\n    enumerable: true\n  });\n\n  Object.defineProperty(this, \"status\", {\n    get: function() { return body.status || 0; },\n    set: function(s) {\n      s = parseInt(s);\n      if (!isNaN(s)) {\n        body.status = s;\n      }\n    },\n    enumerable: true\n  });\n  Object.defineProperty(this, \"reason\", {\n    get: function() { return body.reason || \"\"; },\n    set: function(r) { body.reason = String(r || \"\"); },\n    enumerable: true\n  });\n  Object.defineProperty(this, \"requestId\", {\n    get: function() { return body.requestId || \"\"; },\n    set: function(id) { body.requestId = String(id || \"\"); },\n    enumerable: true\n  });\n}\n\nKMSResponse.prototype.unwrap = function(ctx, opts) {\n  opts = opts || {};\n\n  var keystore = jose.JWK.createKeyStore(),\n      waiting = [],\n      key;\n\n  // add ephemeral key (if any)\n  key = ctx.ephemeralKey && ctx.ephemeralKey.jwk;\n  if (key) {\n    waiting.push(keystore.add(key));\n  }\n  // add server key (if any)\n  key = ctx.serverInfo && ctx.serverInfo.key;\n  if (key) {\n    waiting.push(keystore.add(key));\n  }\n\n  var self = this;\n  var promise = Promise.all(waiting);\n  promise = promise.then(function() {\n    var wrapped = self.wrapped;\n    // count the dots\n    switch ((wrapped.match(/\\./g) || []).length) {\n      case 2:   // signed\n        return jose.JWS.createVerify(keystore).\n               verify(wrapped);\n      case 4:   // encrypted\n        return jose.JWE.createDecrypt(keystore).\n               decrypt(wrapped);\n      default:  // bogus\n        return Promise.reject(new Error(\"invalid wrapped\"));\n    }\n  });\n  promise = promise.then(function(result) {\n    // parse result to JSON\n    result = (result.plaintext || result.payload).toString(\"utf8\");\n    result = JSON.parse(result);\n    // save it before returning it\n    self.body = result;\n    return result;\n  });\n  return promise;\n};\n\nmodule.exports = KMSResponse;\n"]},"metadata":{},"sourceType":"script"}