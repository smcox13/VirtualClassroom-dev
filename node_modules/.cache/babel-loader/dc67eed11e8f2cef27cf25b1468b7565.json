{"ast":null,"code":"var _jsxFileName = \"/Users/pratison/Work/Cisco/Education/React/education-webex/src/pages/Login.js\";\nimport React from 'react';\nimport Webex from 'webex';\nimport { requestAccessToken } from './Orchestrator.js';\n/*\nexport const InitWebex = async (accessToken) => {\n  const credentials = {\n    client_id: config.sdk.credentials.client_id,\n    redirect_uri: config.sdk.credentials.redirect_uri,\n    scope: config.sdk.credentials.scope,\n    response_type: 'token',\n    idbroker: config.sdk.credentials.idbroker,\n    identity: config.sdk.credentials.identity,\n  };\n  const webex = (window.webex = Webex.init({\n    config: {\n      credentials,\n      meetings: {\n        deviceType: 'WEB',\n      },\n      services: config.sdk.services,\n      idbroker_url: config.idbroker_url,\n    },\n    // This credentials is used to pass generated access token to the guest meeting connection\n    credentials: {access_token: accessToken},\n  }));\n\n  return webex;\n};\n*/\n\nconst webex = window.webex = Webex.init({\n  config: {\n    credentials: {\n      client_id: 'C190e9a362204470aa77adb388e66e78ca175ac471e215ce269540297660be61e',\n      redirect_uri: 'http://localhost:3000/addClasses',\n      scope: 'spark:all spark:kms'\n    }\n  }\n});\nconst token = RegExp('[#&]' + 'access_token' + '=([^&]*)').exec(window.location.hash); // console.log(token);\n\n/*\nconst webex = window.webex = Webex.init({\n  config: {\n    credentials: {\n      authorizationString: 'https://webexapis.com/v1/authorize?client_id=C190e9a362204470aa77adb388e66e78ca175ac471e215ce269540297660be61e&response_type=code&redirect_uri=http%3A%2F%2Flocalhost%3A3000%2FaddClasses&scope=spark%3Aall%20spark%3Akms&state=set_state_here',\n      clientType: 'confidential',\n  },\n    }\n});\n*/\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      mail: props.location.mail\n    };\n  }\n\n  componentDidMount() {\n    requestAccessToken();\n\n    if (this.props.location.shouldLogin === 'login') {// webex.authorization.initiateLogin();\n    }\n\n    if (this.props.location.shouldLogin === 'logout') {\n      window.sessionStorage.removeItem('accessToken');\n      webex.logout();\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }\n    }, this.state.loggedIn ? \"Redirecting...\" : \"Loading...\"));\n  }\n\n}\n\nexport default Login;\n/*\n\n*/","map":{"version":3,"sources":["/Users/pratison/Work/Cisco/Education/React/education-webex/src/pages/Login.js"],"names":["React","Webex","requestAccessToken","webex","window","init","config","credentials","client_id","redirect_uri","scope","token","RegExp","exec","location","hash","Login","Component","constructor","props","state","mail","componentDidMount","shouldLogin","sessionStorage","removeItem","logout","render","loggedIn"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,kBAAR,QAAiC,mBAAjC;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0BA,MAAMC,KAAK,GAAGC,MAAM,CAACD,KAAP,GAAeF,KAAK,CAACI,IAAN,CAAW;AACtCC,EAAAA,MAAM,EAAE;AACNC,IAAAA,WAAW,EAAE;AACXC,MAAAA,SAAS,EAAE,mEADA;AAEXC,MAAAA,YAAY,EAAE,kCAFH;AAGXC,MAAAA,KAAK,EAAE;AAHI;AADP;AAD8B,CAAX,CAA7B;AASA,MAAMC,KAAK,GAAGC,MAAM,CAAC,SAAS,cAAT,GAA0B,UAA3B,CAAN,CAA6CC,IAA7C,CAAkDT,MAAM,CAACU,QAAP,CAAgBC,IAAlE,CAAd,C,CACA;;AACA;;;;;;;;;;;AAUA,MAAMC,KAAN,SAAoBhB,KAAK,CAACiB,SAA1B,CAAoC;AAEhCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAEF,KAAK,CAACL,QAAN,CAAeO;AADZ,KAAb;AAGH;;AAEDC,EAAAA,iBAAiB,GAAE;AACfpB,IAAAA,kBAAkB;;AAClB,QAAI,KAAKiB,KAAL,CAAWL,QAAX,CAAoBS,WAApB,KAAoC,OAAxC,EAAkD,CAC9C;AACH;;AAAC,QAAI,KAAKJ,KAAL,CAAWL,QAAX,CAAoBS,WAApB,KAAoC,QAAxC,EAAmD;AACjDnB,MAAAA,MAAM,CAACoB,cAAP,CAAsBC,UAAtB,CAAiC,aAAjC;AACAtB,MAAAA,KAAK,CAACuB,MAAN;AACH;AACJ;;AAEDC,EAAAA,MAAM,GAAG;AAEL,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKP,KAAL,CAAWQ,QAAX,GAAsB,gBAAtB,GAAyC,YAA9C,CADJ,CADJ;AAKH;;AA1B+B;;AA6BpC,eAAeZ,KAAf;AAEA","sourcesContent":["import React from 'react';\nimport Webex from 'webex';\nimport {requestAccessToken} from './Orchestrator.js';\n/*\nexport const InitWebex = async (accessToken) => {\n  const credentials = {\n    client_id: config.sdk.credentials.client_id,\n    redirect_uri: config.sdk.credentials.redirect_uri,\n    scope: config.sdk.credentials.scope,\n    response_type: 'token',\n    idbroker: config.sdk.credentials.idbroker,\n    identity: config.sdk.credentials.identity,\n  };\n  const webex = (window.webex = Webex.init({\n    config: {\n      credentials,\n      meetings: {\n        deviceType: 'WEB',\n      },\n      services: config.sdk.services,\n      idbroker_url: config.idbroker_url,\n    },\n    // This credentials is used to pass generated access token to the guest meeting connection\n    credentials: {access_token: accessToken},\n  }));\n\n  return webex;\n};\n*/\nconst webex = window.webex = Webex.init({\n  config: {\n    credentials: {\n      client_id: 'C190e9a362204470aa77adb388e66e78ca175ac471e215ce269540297660be61e',\n      redirect_uri: 'http://localhost:3000/addClasses',\n      scope: 'spark:all spark:kms',\n    }\n    }\n});\nconst token = RegExp('[#&]' + 'access_token' + '=([^&]*)').exec(window.location.hash);\n// console.log(token);\n/*\nconst webex = window.webex = Webex.init({\n  config: {\n    credentials: {\n      authorizationString: 'https://webexapis.com/v1/authorize?client_id=C190e9a362204470aa77adb388e66e78ca175ac471e215ce269540297660be61e&response_type=code&redirect_uri=http%3A%2F%2Flocalhost%3A3000%2FaddClasses&scope=spark%3Aall%20spark%3Akms&state=set_state_here',\n      clientType: 'confidential',\n  },\n    }\n});\n*/\nclass Login extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            mail: props.location.mail,\n        }\n    }\n\n    componentDidMount(){\n        requestAccessToken();\n        if (this.props.location.shouldLogin === 'login' ) {\n            // webex.authorization.initiateLogin();\n        } if (this.props.location.shouldLogin === 'logout' ) {\n            window.sessionStorage.removeItem('accessToken');\n            webex.logout();\n        }\n    }\n\n    render() {\n\n        return (\n            <div>\n                <h1>{this.state.loggedIn ? \"Redirecting...\" : \"Loading...\"}</h1>\n            </div>\n        );\n    }\n}\n\nexport default Login;\n\n/*\n\n*/\n"]},"metadata":{},"sourceType":"module"}