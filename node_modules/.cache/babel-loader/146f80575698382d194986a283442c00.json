{"ast":null,"code":"function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n/** @component radio */\n\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nvar RadioGroup = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(RadioGroup, _React$Component);\n\n  function RadioGroup(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n\n    _this.handleToggle = function (value) {\n      var newValues;\n      var onChange = _this.props.onChange;\n      var values = _this.state.values;\n      var isActive = values.includes(value);\n\n      if (!isActive) {\n        newValues = [value];\n        onChange(value);\n      } else {\n        return;\n      }\n\n      _this.setState({\n        values: newValues\n      });\n    };\n\n    _this.state = {\n      values: props.values || []\n    };\n    return _this;\n  }\n\n  var _proto = RadioGroup.prototype;\n\n  _proto.render = function render() {\n    var _this2 = this;\n\n    var _this$props = this.props,\n        children = _this$props.children,\n        name = _this$props.name;\n    var values = this.state.values;\n\n    var addHandlersToChildren = function addHandlersToChildren() {\n      return React.Children.map(children, function (child) {\n        var value = child.props.value;\n        return React.cloneElement(child, {\n          name: name,\n          checked: values.includes(value),\n          onChange: function onChange() {\n            return _this2.handleToggle(value);\n          }\n        });\n      });\n    };\n\n    return React.createElement(\"div\", {\n      className: \"md-radio-group\"\n    }, addHandlersToChildren());\n  };\n\n  return RadioGroup;\n}(React.Component);\n\nRadioGroup.propTypes = {\n  /** @prop Children nodes to render inside RadioGroup | null */\n  children: PropTypes.node,\n\n  /** @prop An HTML `<input>` name for each child button | '' */\n  name: PropTypes.string,\n\n  /** @prop Callback function called with value or array of values when invoked by user making a change with the RadioGroup | () => {} */\n  onChange: PropTypes.func,\n\n  /** @prop Array of values, of the active (pressed) buttons | [] */\n  values: PropTypes.array\n};\nRadioGroup.defaultProps = {\n  children: null,\n  name: '',\n  onChange: function onChange() {},\n  values: []\n};\nRadioGroup.displayName = 'RadioGroup';\nexport default RadioGroup;","map":{"version":3,"sources":["/Users/stcox2/Documents/CODE/VirtualClassroom-dev/node_modules/@momentum-ui/react/es/RadioGroup/index.js"],"names":["_inheritsLoose","subClass","superClass","prototype","Object","create","constructor","__proto__","React","PropTypes","RadioGroup","_React$Component","props","_this","call","handleToggle","value","newValues","onChange","values","state","isActive","includes","setState","_proto","render","_this2","_this$props","children","name","addHandlersToChildren","Children","map","child","cloneElement","checked","createElement","className","Component","propTypes","node","string","func","array","defaultProps","displayName"],"mappings":"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","sourcesContent":["function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\n/** @component radio */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nvar RadioGroup = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(RadioGroup, _React$Component);\n\n  function RadioGroup(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n\n    _this.handleToggle = function (value) {\n      var newValues;\n      var onChange = _this.props.onChange;\n      var values = _this.state.values;\n      var isActive = values.includes(value);\n\n      if (!isActive) {\n        newValues = [value];\n        onChange(value);\n      } else {\n        return;\n      }\n\n      _this.setState({\n        values: newValues\n      });\n    };\n\n    _this.state = {\n      values: props.values || []\n    };\n    return _this;\n  }\n\n  var _proto = RadioGroup.prototype;\n\n  _proto.render = function render() {\n    var _this2 = this;\n\n    var _this$props = this.props,\n        children = _this$props.children,\n        name = _this$props.name;\n    var values = this.state.values;\n\n    var addHandlersToChildren = function addHandlersToChildren() {\n      return React.Children.map(children, function (child) {\n        var value = child.props.value;\n        return React.cloneElement(child, {\n          name: name,\n          checked: values.includes(value),\n          onChange: function onChange() {\n            return _this2.handleToggle(value);\n          }\n        });\n      });\n    };\n\n    return React.createElement(\"div\", {\n      className: \"md-radio-group\"\n    }, addHandlersToChildren());\n  };\n\n  return RadioGroup;\n}(React.Component);\n\nRadioGroup.propTypes = {\n  /** @prop Children nodes to render inside RadioGroup | null */\n  children: PropTypes.node,\n\n  /** @prop An HTML `<input>` name for each child button | '' */\n  name: PropTypes.string,\n\n  /** @prop Callback function called with value or array of values when invoked by user making a change with the RadioGroup | () => {} */\n  onChange: PropTypes.func,\n\n  /** @prop Array of values, of the active (pressed) buttons | [] */\n  values: PropTypes.array\n};\nRadioGroup.defaultProps = {\n  children: null,\n  name: '',\n  onChange: function onChange() {},\n  values: []\n};\nRadioGroup.displayName = 'RadioGroup';\nexport default RadioGroup;"]},"metadata":{},"sourceType":"module"}