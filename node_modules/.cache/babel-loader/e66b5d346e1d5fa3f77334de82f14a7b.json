{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = undefined;\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _constants = require('../constants');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n  * Metrics Payload Event\n  * Emitted when a Metric Payload is available\n  * @event metrics:payload\n  * @instance\n  * @type {Object}\n  * @memberof MediaMetrics\n  */\n\n/**\n * @class MediaMetrics\n * @private\n */\n\n\nvar MediaMetrics = function () {\n  /**\n   * @param {Object} options\n   * @param {Object} options.config\n   * @memberof MediaMetrics\n   * @constructor\n   */\n  function MediaMetrics() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    (0, _classCallCheck3.default)(this, MediaMetrics);\n    this.namespace = _constants.MEETINGS;\n    this.config = options.config;\n    this.stats = null;\n  }\n  /**\n   * @param {MeetingStats} stats\n   * @returns {undefined}\n   * @memberof MediaMetrics\n   */\n\n\n  (0, _createClass3.default)(MediaMetrics, [{\n    key: 'setStats',\n    value: function setStats(stats) {\n      this.stats = stats;\n    }\n    /**\n     * sets up all the default senders and receivers getStats to collect data\n     * @returns {Object}\n     * @public\n     * @memberof MediaMetrics\n     */\n\n  }, {\n    key: 'initialize',\n    value: function initialize() {\n      var mqa = this.config.metrics.autoSendMQA;\n      return {\n        useConfig: true,\n        senders: [{\n          id: _constants.STATS.AUDIO_SENDER_ID,\n          correlate: _constants.STATS.AUDIO_CORRELATE,\n          mqa: mqa,\n          onData: function onData() {}\n        }, {\n          id: _constants.STATS.VIDEO_SENDER_ID,\n          correlate: _constants.STATS.VIDEO_CORRELATE,\n          mqa: mqa,\n          onData: function onData() {}\n        }, {\n          id: _constants.STATS.SHARE_SENDER_ID,\n          correlate: _constants.STATS.SHARE_CORRELATE,\n          mqa: mqa,\n          onData: function onData() {}\n        }],\n        receivers: [{\n          id: _constants.STATS.AUDIO_RECEIVER_ID,\n          correlate: _constants.STATS.AUDIO_CORRELATE,\n          mqa: mqa,\n          onData: function onData() {}\n        }, {\n          id: _constants.STATS.VIDEO_RECEIVER_ID,\n          correlate: _constants.STATS.VIDEO_CORRELATE,\n          mqa: mqa,\n          onData: function onData() {}\n        }, {\n          id: _constants.STATS.SHARE_RECEIVER_ID,\n          correlate: _constants.STATS.SHARE_CORRELATE,\n          mqa: mqa,\n          onData: function onData() {}\n        }]\n      };\n    }\n  }]);\n  return MediaMetrics;\n}();\n\nexports.default = MediaMetrics;","map":{"version":3,"sources":["metrics.js"],"names":["MediaMetrics","namespace","MEETINGS","options","stats","mqa","useConfig","senders","id","STATS","correlate","onData","receivers"],"mappings":";;;;;;;;;;;;;;;AAAA,IAAA,UAAA,GAAA,OAAA,CAAA,cAAA,CAAA;;;;;;;AAKA;;;;;;;;;AASA;;;;;;IAIqBA,Y;AAGnB;;;;;;AAMA,WAAA,YAAA,GAA0B;AAAA,QAAdG,OAAc,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAAJ,EAAI;AAAA,KAAA,GAAA,gBAAA,CAAA,OAAA,EAAA,IAAA,EAAA,YAAA;AAAA,SAR1BF,SAQ0B,GARdC,UAAAA,CAAAA,QAQc;AACxB,SAAA,MAAA,GAAcC,OAAAA,CAAd,MAAA;AACA,SAAA,KAAA,GAAA,IAAA;AACD;AAED;;;;;;;;;6BAKSC,K,EAAO;AACd,WAAA,KAAA,GAAA,KAAA;AACD;AAED;;;;;;;;;iCAMa;AACX,UAAMC,GAAAA,GAAM,KAAA,MAAA,CAAA,OAAA,CAAZ,WAAA;AAEA,aAAO;AACLC,QAAAA,SAAAA,EADK,IAAA;AAELC,QAAAA,OAAAA,EAAS,CACP;AACEC,UAAAA,EAAAA,EAAIC,UAAAA,CAAAA,KAAAA,CADN,eAAA;AAEEC,UAAAA,SAAAA,EAAWD,UAAAA,CAAAA,KAAAA,CAFb,eAAA;AAGEJ,UAAAA,GAAAA,EAHF,GAAA;AAIEM,UAAAA,MAAAA,EAAQ,SAAA,MAAA,GAAM,CAAE;AAJlB,SADO,EAOP;AACEH,UAAAA,EAAAA,EAAIC,UAAAA,CAAAA,KAAAA,CADN,eAAA;AAEEC,UAAAA,SAAAA,EAAWD,UAAAA,CAAAA,KAAAA,CAFb,eAAA;AAGEJ,UAAAA,GAAAA,EAHF,GAAA;AAIEM,UAAAA,MAAAA,EAAQ,SAAA,MAAA,GAAM,CAAE;AAJlB,SAPO,EAaP;AACEH,UAAAA,EAAAA,EAAIC,UAAAA,CAAAA,KAAAA,CADN,eAAA;AAEEC,UAAAA,SAAAA,EAAWD,UAAAA,CAAAA,KAAAA,CAFb,eAAA;AAGEJ,UAAAA,GAAAA,EAHF,GAAA;AAIEM,UAAAA,MAAAA,EAAQ,SAAA,MAAA,GAAM,CAAE;AAJlB,SAbO,CAFJ;AAsBLC,QAAAA,SAAAA,EAAW,CACT;AACEJ,UAAAA,EAAAA,EAAIC,UAAAA,CAAAA,KAAAA,CADN,iBAAA;AAEEC,UAAAA,SAAAA,EAAWD,UAAAA,CAAAA,KAAAA,CAFb,eAAA;AAGEJ,UAAAA,GAAAA,EAHF,GAAA;AAIEM,UAAAA,MAAAA,EAAQ,SAAA,MAAA,GAAM,CAAE;AAJlB,SADS,EAOT;AACEH,UAAAA,EAAAA,EAAIC,UAAAA,CAAAA,KAAAA,CADN,iBAAA;AAEEC,UAAAA,SAAAA,EAAWD,UAAAA,CAAAA,KAAAA,CAFb,eAAA;AAGEJ,UAAAA,GAAAA,EAHF,GAAA;AAIEM,UAAAA,MAAAA,EAAQ,SAAA,MAAA,GAAM,CAAE;AAJlB,SAPS,EAaT;AACEH,UAAAA,EAAAA,EAAIC,UAAAA,CAAAA,KAAAA,CADN,iBAAA;AAEEC,UAAAA,SAAAA,EAAWD,UAAAA,CAAAA,KAAAA,CAFb,eAAA;AAGEJ,UAAAA,GAAAA,EAHF,GAAA;AAIEM,UAAAA,MAAAA,EAAQ,SAAA,MAAA,GAAM,CAAE;AAJlB,SAbS;AAtBN,OAAP;AA2CD;;;;;kBA3EkBX,Y","sourcesContent":["import {\n  MEETINGS,\n  STATS\n} from '../constants';\n\n/**\n  * Metrics Payload Event\n  * Emitted when a Metric Payload is available\n  * @event metrics:payload\n  * @instance\n  * @type {Object}\n  * @memberof MediaMetrics\n  */\n\n/**\n * @class MediaMetrics\n * @private\n */\nexport default class MediaMetrics {\n  namespace = MEETINGS;\n\n  /**\n   * @param {Object} options\n   * @param {Object} options.config\n   * @memberof MediaMetrics\n   * @constructor\n   */\n  constructor(options = {}) {\n    this.config = options.config;\n    this.stats = null;\n  }\n\n  /**\n   * @param {MeetingStats} stats\n   * @returns {undefined}\n   * @memberof MediaMetrics\n   */\n  setStats(stats) {\n    this.stats = stats;\n  }\n\n  /**\n   * sets up all the default senders and receivers getStats to collect data\n   * @returns {Object}\n   * @public\n   * @memberof MediaMetrics\n   */\n  initialize() {\n    const mqa = this.config.metrics.autoSendMQA;\n\n    return {\n      useConfig: true,\n      senders: [\n        {\n          id: STATS.AUDIO_SENDER_ID,\n          correlate: STATS.AUDIO_CORRELATE,\n          mqa,\n          onData: () => {}\n        },\n        {\n          id: STATS.VIDEO_SENDER_ID,\n          correlate: STATS.VIDEO_CORRELATE,\n          mqa,\n          onData: () => {}\n        },\n        {\n          id: STATS.SHARE_SENDER_ID,\n          correlate: STATS.SHARE_CORRELATE,\n          mqa,\n          onData: () => {}\n        }\n      ],\n      receivers: [\n        {\n          id: STATS.AUDIO_RECEIVER_ID,\n          correlate: STATS.AUDIO_CORRELATE,\n          mqa,\n          onData: () => {}\n        },\n        {\n          id: STATS.VIDEO_RECEIVER_ID,\n          correlate: STATS.VIDEO_CORRELATE,\n          mqa,\n          onData: () => {}\n        },\n        {\n          id: STATS.SHARE_RECEIVER_ID,\n          correlate: STATS.SHARE_CORRELATE,\n          mqa,\n          onData: () => {}\n        }\n      ]\n    };\n  }\n}\n"]},"metadata":{},"sourceType":"script"}