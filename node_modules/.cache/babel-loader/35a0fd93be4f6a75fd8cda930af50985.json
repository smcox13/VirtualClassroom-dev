{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DryError = exports.KmsTimeoutError = exports.KmsError = undefined;\n\nvar _apply = require('babel-runtime/core-js/reflect/apply');\n\nvar _apply2 = _interopRequireDefault(_apply);\n\nvar _defineProperties = require('babel-runtime/core-js/object/define-properties');\n\nvar _defineProperties2 = _interopRequireDefault(_defineProperties);\n\nvar _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');\n\nvar _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _class, _temp, _class2, _temp2;\n/*!\n * Copyright (c) 2015-2019 Cisco Systems, Inc. See LICENSE file.\n */\n\n\nvar _common = require('@webex/common');\n\nvar _webexCore = require('@webex/webex-core');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * Error class for KMS errors\n */\n\n\nvar KmsError = exports.KmsError = (_temp = _class = function (_Exception) {\n  (0, _inherits3.default)(KmsError, _Exception);\n\n  function KmsError() {\n    (0, _classCallCheck3.default)(this, KmsError);\n    return (0, _possibleConstructorReturn3.default)(this, (KmsError.__proto__ || (0, _getPrototypeOf2.default)(KmsError)).apply(this, arguments));\n  }\n\n  (0, _createClass3.default)(KmsError, [{\n    key: 'parse',\n\n    /**\n     * @param {HttpResponse} body\n     * @returns {string}\n     */\n    value: function parse(body) {\n      body = body.body || body;\n      (0, _defineProperties2.default)(this, {\n        body: {\n          enumerable: false,\n          value: body\n        },\n        reason: {\n          enumerable: false,\n          value: body.reason\n        },\n        requestId: {\n          enumerable: false,\n          value: body.requestId\n        },\n        status: {\n          enumerable: false,\n          value: body.status\n        }\n      });\n      var message = typeof body === 'string' ? body : body.reason;\n\n      if (!message) {\n        message = this.constructor.defaultMessage;\n      }\n\n      if (body.status) {\n        message += '\\nKMS_RESPONSE_STATUS: ' + body.status;\n      }\n\n      if (body.requestId) {\n        message += '\\nKMS_REQUEST_ID: ' + body.requestId;\n      }\n\n      return message;\n    }\n  }]);\n  return KmsError;\n}(_common.Exception), _class.defaultMessage = 'An unknown error occurred while communicating with the kms. This implies we received an error response without a body.', _temp);\n/**\n * Thrown when an expected KMSResponse is not received in a timely manner\n */\n\nvar KmsTimeoutError = exports.KmsTimeoutError = function (_KmsError) {\n  (0, _inherits3.default)(KmsTimeoutError, _KmsError);\n\n  function KmsTimeoutError() {\n    (0, _classCallCheck3.default)(this, KmsTimeoutError);\n    return (0, _possibleConstructorReturn3.default)(this, (KmsTimeoutError.__proto__ || (0, _getPrototypeOf2.default)(KmsTimeoutError)).apply(this, arguments));\n  }\n\n  (0, _createClass3.default)(KmsTimeoutError, [{\n    key: 'parse',\n\n    /**\n     * @param {KmsRequest} options.request\n     * @param {KmsRequest} options.timeout\n     * @returns {string}\n     */\n    value: function parse() {\n      var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref$request = _ref.request,\n          request = _ref$request === undefined ? {} : _ref$request,\n          timeout = _ref.timeout;\n\n      var message = 'The KMS did not respond within ' + (timeout ? timeout + ' milliseconds' : 'a timely fashion');\n\n      if (request) {\n        if (request.method && request.uri) {\n          message += '\\nKMS_REQUEST: ' + request.method + ' ' + request.uri;\n        }\n\n        if (request.requestId) {\n          message += '\\nKMS_REQUEST_ID: ' + request.requestId;\n        }\n      }\n\n      return message;\n    }\n  }]);\n  return KmsTimeoutError;\n}(KmsError);\n/**\n * Emitted when a REST request includes an encrypter error\n */\n\n\nvar DryError = exports.DryError = (_temp2 = _class2 = function (_WebexHttpError) {\n  (0, _inherits3.default)(DryError, _WebexHttpError);\n\n  function DryError() {\n    (0, _classCallCheck3.default)(this, DryError);\n    return (0, _possibleConstructorReturn3.default)(this, (DryError.__proto__ || (0, _getPrototypeOf2.default)(DryError)).apply(this, arguments));\n  }\n\n  (0, _createClass3.default)(DryError, [{\n    key: 'parse',\n\n    /**\n     * @param {WebexHttpError} reason\n     * @returns {string}\n     */\n    value: function parse(reason) {\n      (0, _apply2.default)(_webexCore.WebexHttpError.prototype.parse, this, [reason._res]);\n      var body = reason._res.body.message;\n      var message = body.reason || body;\n\n      if (!message) {\n        message = this.constructor.defaultMessage;\n      }\n\n      if (this.options.url) {\n        message += '\\n' + this.options.method + ' ' + this.options.url;\n      } else if (this.options.uri) {\n        message += '\\n' + this.options.method + ' ' + this.options.uri;\n      } else {\n        message += '\\n' + this.options.method + ' ' + this.options.service.toUpperCase() + '/' + this.options.resource;\n      }\n\n      message += '\\nWEBEX_TRACKING_ID: ' + this.options.headers.trackingid;\n\n      if (body.status) {\n        message += '\\nKMS_RESPONSE_STATUS: ' + body.status;\n      }\n\n      if (body.requestId) {\n        message += '\\nKMS_REQUEST_ID: ' + body.requestId;\n      }\n\n      (0, _defineProperties2.default)(this, {\n        reason: {\n          enumerable: false,\n          value: body.reason\n        },\n        requestId: {\n          enumerable: false,\n          value: body.requestId\n        },\n        status: {\n          enumerable: false,\n          value: body.status\n        }\n      });\n      return message;\n    }\n  }]);\n  return DryError;\n}(_webexCore.WebexHttpError), _class2.defaultMessage = 'An unknown error was received from a service that proxies to the KMS', _temp2);","map":{"version":3,"sources":["kms-errors.js"],"names":["KmsError","Exception","defaultMessage","body","enumerable","value","reason","requestId","status","message","KmsTimeoutError","request","timeout","DryError","WebexHttpError"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;AAIA,IAAA,OAAA,GAAA,OAAA,CAAA,eAAA,CAAA;;AACA,IAAA,UAAA,GAAA,OAAA,CAAA,mBAAA,CAAA;;;;;;;AAEA;;;;;IAGaA,Q,WAAAA,Q;;;;;;;;;;;AAGX;;;;0BAIMG,I,EAAM;AACVA,MAAAA,IAAAA,GAAOA,IAAAA,CAAAA,IAAAA,IAAPA,IAAAA;AAEA,OAAA,GAAA,kBAAA,CAAA,OAAA,EAAA,IAAA,EAA8B;AAC5BA,QAAAA,IAAAA,EAAM;AACJC,UAAAA,UAAAA,EADI,KAAA;AAEJC,UAAAA,KAAAA,EAAOF;AAFH,SADsB;AAK5BG,QAAAA,MAAAA,EAAQ;AACNF,UAAAA,UAAAA,EADM,KAAA;AAENC,UAAAA,KAAAA,EAAOF,IAAAA,CAAKG;AAFN,SALoB;AAS5BC,QAAAA,SAAAA,EAAW;AACTH,UAAAA,UAAAA,EADS,KAAA;AAETC,UAAAA,KAAAA,EAAOF,IAAAA,CAAKI;AAFH,SATiB;AAa5BC,QAAAA,MAAAA,EAAQ;AACNJ,UAAAA,UAAAA,EADM,KAAA;AAENC,UAAAA,KAAAA,EAAOF,IAAAA,CAAKK;AAFN;AAboB,OAA9B;AAmBA,UAAIC,OAAAA,GAAU,OAAA,IAAA,KAAA,QAAA,GAAA,IAAA,GAAkCN,IAAAA,CAAhD,MAAA;;AAEA,UAAI,CAAJ,OAAA,EAAc;AACZM,QAAAA,OAAAA,GAAU,KAAA,WAAA,CAAVA,cAAAA;AACD;;AACD,UAAIN,IAAAA,CAAJ,MAAA,EAAiB;AACfM,QAAAA,OAAAA,IAAAA,4BAAqCN,IAAAA,CAArCM,MAAAA;AACD;;AACD,UAAIN,IAAAA,CAAJ,SAAA,EAAoB;AAClBM,QAAAA,OAAAA,IAAAA,uBAAgCN,IAAAA,CAAhCM,SAAAA;AACD;;AAED,aAAA,OAAA;AACD;;;EA1C2BR,OAAAA,CAAAA,S,UACrBC,c,GAAiB,wH;AA4C1B;;;;IAGaQ,e,WAAAA,e;;;;;;;;;;;AACX;;;;;4BAKoC;AAAA,UAAA,IAAA,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAAJ,EAAI;AAAA,UAAA,YAAA,GAAA,IAAA,CAA7BC,OAA6B;AAAA,UAA7BA,OAA6B,GAAA,YAAA,KAAA,SAAA,GAAnB,EAAmB,GAAA,YAAA;AAAA,UAAfC,OAAe,GAAA,IAAA,CAAfA,OAAe;;AAClC,UAAIH,OAAAA,GAAAA,qCAA4CG,OAAAA,GAAaA,OAAbA,GAAAA,eAAAA,GAAhD,kBAAIH,CAAJ;;AAEA,UAAA,OAAA,EAAa;AACX,YAAIE,OAAAA,CAAAA,MAAAA,IAAkBA,OAAAA,CAAtB,GAAA,EAAmC;AACjCF,UAAAA,OAAAA,IAAAA,oBAA6BE,OAAAA,CAA7BF,MAAAA,GAAAA,GAAAA,GAA+CE,OAAAA,CAA/CF,GAAAA;AACD;;AAED,YAAIE,OAAAA,CAAJ,SAAA,EAAuB;AACrBF,UAAAA,OAAAA,IAAAA,uBAAgCE,OAAAA,CAAhCF,SAAAA;AACD;AACF;;AAED,aAAA,OAAA;AACD;;;EApBkCT,Q;AAuBrC;;;;;IAGaa,Q,WAAAA,Q;;;;;;;;;;;AAGX;;;;0BAIMP,M,EAAQ;AACZ,OAAA,GAAA,OAAA,CAAA,OAAA,EAAcQ,UAAAA,CAAAA,cAAAA,CAAAA,SAAAA,CAAd,KAAA,EAAA,IAAA,EAAoD,CAACR,MAAAA,CAArD,IAAoD,CAApD;AACA,UAAMH,IAAAA,GAAOG,MAAAA,CAAAA,IAAAA,CAAAA,IAAAA,CAAb,OAAA;AAEA,UAAIG,OAAAA,GAAUN,IAAAA,CAAAA,MAAAA,IAAd,IAAA;;AAEA,UAAI,CAAJ,OAAA,EAAc;AACZM,QAAAA,OAAAA,GAAU,KAAA,WAAA,CAAVA,cAAAA;AACD;;AACD,UAAI,KAAA,OAAA,CAAJ,GAAA,EAAsB;AACpBA,QAAAA,OAAAA,IAAAA,OAAgB,KAAA,OAAA,CAAhBA,MAAAA,GAAAA,GAAAA,GAAuC,KAAA,OAAA,CAAvCA,GAAAA;AADF,OAAA,MAGK,IAAI,KAAA,OAAA,CAAJ,GAAA,EAAsB;AACzBA,QAAAA,OAAAA,IAAAA,OAAgB,KAAA,OAAA,CAAhBA,MAAAA,GAAAA,GAAAA,GAAuC,KAAA,OAAA,CAAvCA,GAAAA;AADG,OAAA,MAGA;AACHA,QAAAA,OAAAA,IAAAA,OAAgB,KAAA,OAAA,CAAhBA,MAAAA,GAAAA,GAAAA,GAAuC,KAAA,OAAA,CAAA,OAAA,CAAvCA,WAAuC,EAAvCA,GAAAA,GAAAA,GAA6E,KAAA,OAAA,CAA7EA,QAAAA;AACD;;AACDA,MAAAA,OAAAA,IAAAA,0BAAmC,KAAA,OAAA,CAAA,OAAA,CAAnCA,UAAAA;;AAEA,UAAIN,IAAAA,CAAJ,MAAA,EAAiB;AACfM,QAAAA,OAAAA,IAAAA,4BAAqCN,IAAAA,CAArCM,MAAAA;AACD;;AACD,UAAIN,IAAAA,CAAJ,SAAA,EAAoB;AAClBM,QAAAA,OAAAA,IAAAA,uBAAgCN,IAAAA,CAAhCM,SAAAA;AACD;;AAED,OAAA,GAAA,kBAAA,CAAA,OAAA,EAAA,IAAA,EAA8B;AAC5BH,QAAAA,MAAAA,EAAQ;AACNF,UAAAA,UAAAA,EADM,KAAA;AAENC,UAAAA,KAAAA,EAAOF,IAAAA,CAAKG;AAFN,SADoB;AAK5BC,QAAAA,SAAAA,EAAW;AACTH,UAAAA,UAAAA,EADS,KAAA;AAETC,UAAAA,KAAAA,EAAOF,IAAAA,CAAKI;AAFH,SALiB;AAS5BC,QAAAA,MAAAA,EAAQ;AACNJ,UAAAA,UAAAA,EADM,KAAA;AAENC,UAAAA,KAAAA,EAAOF,IAAAA,CAAKK;AAFN;AAToB,OAA9B;AAeA,aAAA,OAAA;AACD;;;EAlD2BM,UAAAA,CAAAA,c,WACrBZ,c,GAAiB,sE","sourcesContent":["/*!\n * Copyright (c) 2015-2019 Cisco Systems, Inc. See LICENSE file.\n */\n\nimport {Exception} from '@webex/common';\nimport {WebexHttpError} from '@webex/webex-core';\n\n/**\n * Error class for KMS errors\n */\nexport class KmsError extends Exception {\n  static defaultMessage = 'An unknown error occurred while communicating with the kms. This implies we received an error response without a body.';\n\n  /**\n   * @param {HttpResponse} body\n   * @returns {string}\n   */\n  parse(body) {\n    body = body.body || body;\n\n    Object.defineProperties(this, {\n      body: {\n        enumerable: false,\n        value: body\n      },\n      reason: {\n        enumerable: false,\n        value: body.reason\n      },\n      requestId: {\n        enumerable: false,\n        value: body.requestId\n      },\n      status: {\n        enumerable: false,\n        value: body.status\n      }\n    });\n\n    let message = typeof body === 'string' ? body : body.reason;\n\n    if (!message) {\n      message = this.constructor.defaultMessage;\n    }\n    if (body.status) {\n      message += `\\nKMS_RESPONSE_STATUS: ${body.status}`;\n    }\n    if (body.requestId) {\n      message += `\\nKMS_REQUEST_ID: ${body.requestId}`;\n    }\n\n    return message;\n  }\n}\n\n/**\n * Thrown when an expected KMSResponse is not received in a timely manner\n */\nexport class KmsTimeoutError extends KmsError {\n  /**\n   * @param {KmsRequest} options.request\n   * @param {KmsRequest} options.timeout\n   * @returns {string}\n   */\n  parse({request = {}, timeout} = {}) {\n    let message = `The KMS did not respond within ${timeout ? `${timeout} milliseconds` : 'a timely fashion'}`;\n\n    if (request) {\n      if (request.method && request.uri) {\n        message += `\\nKMS_REQUEST: ${request.method} ${request.uri}`;\n      }\n\n      if (request.requestId) {\n        message += `\\nKMS_REQUEST_ID: ${request.requestId}`;\n      }\n    }\n\n    return message;\n  }\n}\n\n/**\n * Emitted when a REST request includes an encrypter error\n */\nexport class DryError extends WebexHttpError {\n  static defaultMessage = 'An unknown error was received from a service that proxies to the KMS';\n\n  /**\n   * @param {WebexHttpError} reason\n   * @returns {string}\n   */\n  parse(reason) {\n    Reflect.apply(WebexHttpError.prototype.parse, this, [reason._res]);\n    const body = reason._res.body.message;\n\n    let message = body.reason || body;\n\n    if (!message) {\n      message = this.constructor.defaultMessage;\n    }\n    if (this.options.url) {\n      message += `\\n${this.options.method} ${this.options.url}`;\n    }\n    else if (this.options.uri) {\n      message += `\\n${this.options.method} ${this.options.uri}`;\n    }\n    else {\n      message += `\\n${this.options.method} ${this.options.service.toUpperCase()}/${this.options.resource}`;\n    }\n    message += `\\nWEBEX_TRACKING_ID: ${this.options.headers.trackingid}`;\n\n    if (body.status) {\n      message += `\\nKMS_RESPONSE_STATUS: ${body.status}`;\n    }\n    if (body.requestId) {\n      message += `\\nKMS_REQUEST_ID: ${body.requestId}`;\n    }\n\n    Object.defineProperties(this, {\n      reason: {\n        enumerable: false,\n        value: body.reason\n      },\n      requestId: {\n        enumerable: false,\n        value: body.requestId\n      },\n      status: {\n        enumerable: false,\n        value: body.status\n      }\n    });\n\n    return message;\n  }\n}\n"]},"metadata":{},"sourceType":"script"}