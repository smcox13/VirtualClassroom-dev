{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _keys = require('babel-runtime/core-js/object/keys');\n\nvar _keys2 = _interopRequireDefault(_keys);\n\nvar _ampersandState = require('ampersand-state');\n\nvar _ampersandState2 = _interopRequireDefault(_ampersandState);\n\nvar _constants = require('../constants');\n\nvar _featureCollection = require('./feature-collection');\n\nvar _featureCollection2 = _interopRequireDefault(_featureCollection);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * Feature collection parent container.\n *\n * @description\n * This class contains all of the feature collection class objects to help\n * organize the data retrieved from the **wdm** service on device registration.\n */\n// Local Dependencies\n\n\nvar FeaturesModel = _ampersandState2.default.extend({\n  // Ampersand property members.\n  collections: {\n    /**\n     * This collection contains the developer feature collection.\n     *\n     * @type {FeatureCollection}\n     */\n    developer: _featureCollection2.default,\n\n    /**\n     * This collection contains the entitlement feature collection.\n     *\n     * @type {FeatureCollection}\n     */\n    entitlement: _featureCollection2.default,\n\n    /**\n     * This collection contains the user feature collection.\n     *\n     * @type {FeatureCollection}\n     */\n    user: _featureCollection2.default\n  },\n  // Helper method members.\n\n  /**\n   * Recursively clear attributes, children, and collections.\n   *\n   * @param {Object} options - Attribute options to unset.\n   * @returns {this}\n   */\n  clear: function clear(options) {\n    var _this = this; // Clear the ampersand attributes safely if there are any. This class should\n    // never have any attributes.\n\n\n    (0, _keys2.default)(this.attributes).forEach(function (key) {\n      _this.unset(key, options);\n    }); // Clear the ampersand children safely if there are any. This class should\n    // never have any children.\n\n    /* eslint-disable-next-line no-underscore-dangle */\n\n    (0, _keys2.default)(this._children).forEach(function (key) {\n      _this[key].clear();\n    }); // Clear the ampersand collections safely.\n\n    /* eslint-disable-next-line no-underscore-dangle */\n\n    (0, _keys2.default)(this._collections).forEach(function (key) {\n      _this[key].reset();\n    });\n    return this;\n  },\n  // Ampersand method members.\n\n  /**\n   * Initializer method for FeatureModel class object.\n   *\n   * @override\n   * @returns {void}\n   */\n  initialize: function initialize() {\n    var _this2 = this; // Declare the collection event names.\n\n\n    var eventNames = ['change:value', 'add', 'remove']; // Initialize collection event listeners.\n\n    eventNames.forEach(function (eventName) {\n      _constants.FEATURE_COLLECTION_NAMES.forEach(function (collectionName) {\n        _this2[collectionName].on(eventName, function (model, options) {\n          _this2.trigger('change:' + collectionName, _this2, _this2[collectionName], options);\n        });\n      });\n    });\n  }\n}); // External dependencies.\n\n\nexports.default = FeaturesModel;","map":{"version":3,"sources":["features-model.js"],"names":["FeaturesModel","collections","developer","FeatureCollection","entitlement","user","clear","initialize","eventNames","FEATURE_COLLECTION_NAMES"],"mappings":";;;;;;;;;;AACA,IAAA,eAAA,GAAA,OAAA,CAAA,iBAAA,CAAA;;;;AAGA,IAAA,UAAA,GAAA,OAAA,CAAA,cAAA,CAAA;;AAEA,IAAA,kBAAA,GAAA,OAAA,CAAA,sBAAA,CAAA;;;;;;;;;AAEA;;;;;;;AALA;;;AAYA,IAAMA,aAAAA,GAAgB,gBAAA,CAAA,OAAA,CAAA,MAAA,CAAgB;AAEpC;AAEAC,EAAAA,WAAAA,EAAa;AACX;;;;;AAKAC,IAAAA,SAAAA,EAAWC,mBAAAA,CANA,OAAA;;AAQX;;;;;AAKAC,IAAAA,WAAAA,EAAaD,mBAAAA,CAbF,OAAA;;AAeX;;;;;AAKAE,IAAAA,IAAAA,EAAMF,mBAAAA,CAAAA;AApBK,GAJuB;AA2BpC;;AAEA;;;;;;AAMAG,EAAAA,KAnCoC,EAAA,SAAA,KAAA,CAAA,OAAA,EAmCrB;AAAA,QAAA,KAAA,GAAA,IAAA,CAAA,CACb;AACA;;;AACA,KAAA,GAAA,MAAA,CAAA,OAAA,EAAY,KAAZ,UAAA,EAAA,OAAA,CAAqC,UAAA,GAAA,EAAS;AAC5C,MAAA,KAAA,CAAA,KAAA,CAAA,GAAA,EAAA,OAAA;AADF,KAAA,EAHa,CAOb;AACA;;AACA;;AACA,KAAA,GAAA,MAAA,CAAA,OAAA,EAAY,KAAZ,SAAA,EAAA,OAAA,CAAoC,UAAA,GAAA,EAAS;AAC3C,MAAA,KAAA,CAAA,GAAA,CAAA,CAAA,KAAA;AADF,KAAA,EAVa,CAcb;;AACA;;AACA,KAAA,GAAA,MAAA,CAAA,OAAA,EAAY,KAAZ,YAAA,EAAA,OAAA,CAAuC,UAAA,GAAA,EAAS;AAC9C,MAAA,KAAA,CAAA,GAAA,CAAA,CAAA,KAAA;AADF,KAAA;AAIA,WAAA,IAAA;AAvDkC,GAAA;AA0DpC;;AAEA;;;;;;AAMAC,EAAAA,UAlEoC,EAAA,SAAA,UAAA,GAkEvB;AAAA,QAAA,MAAA,GAAA,IAAA,CAAA,CACX;;;AACA,QAAMC,UAAAA,GAAa,CAAA,cAAA,EAAA,KAAA,EAAnB,QAAmB,CAAnB,CAFW,CAIX;;AACAA,IAAAA,UAAAA,CAAAA,OAAAA,CAAmB,UAAA,SAAA,EAAe;AAChCC,MAAAA,UAAAA,CAAAA,wBAAAA,CAAAA,OAAAA,CAAiC,UAAA,cAAA,EAAoB;AACnD,QAAA,MAAA,CAAA,cAAA,CAAA,CAAA,EAAA,CAAA,SAAA,EAAmC,UAAA,KAAA,EAAA,OAAA,EAAoB;AACrD,UAAA,MAAA,CAAA,OAAA,CAAA,YAAA,cAAA,EAAA,MAAA,EAGE,MAAA,CAHF,cAGE,CAHF,EAAA,OAAA;AADF,SAAA;AADFA,OAAAA;AADFD,KAAAA;AAYD;AAnFmC,CAAhB,CAAtB,C,CAfA;;;kBAqGeR,a","sourcesContent":["// External dependencies.\nimport AmpState from 'ampersand-state';\n\n// Local Dependencies\nimport {FEATURE_COLLECTION_NAMES} from '../constants';\n\nimport FeatureCollection from './feature-collection';\n\n/**\n * Feature collection parent container.\n *\n * @description\n * This class contains all of the feature collection class objects to help\n * organize the data retrieved from the **wdm** service on device registration.\n */\nconst FeaturesModel = AmpState.extend({\n\n  // Ampersand property members.\n\n  collections: {\n    /**\n     * This collection contains the developer feature collection.\n     *\n     * @type {FeatureCollection}\n     */\n    developer: FeatureCollection,\n\n    /**\n     * This collection contains the entitlement feature collection.\n     *\n     * @type {FeatureCollection}\n     */\n    entitlement: FeatureCollection,\n\n    /**\n     * This collection contains the user feature collection.\n     *\n     * @type {FeatureCollection}\n     */\n    user: FeatureCollection\n  },\n\n  // Helper method members.\n\n  /**\n   * Recursively clear attributes, children, and collections.\n   *\n   * @param {Object} options - Attribute options to unset.\n   * @returns {this}\n   */\n  clear(options) {\n    // Clear the ampersand attributes safely if there are any. This class should\n    // never have any attributes.\n    Object.keys(this.attributes).forEach((key) => {\n      this.unset(key, options);\n    });\n\n    // Clear the ampersand children safely if there are any. This class should\n    // never have any children.\n    /* eslint-disable-next-line no-underscore-dangle */\n    Object.keys(this._children).forEach((key) => {\n      this[key].clear();\n    });\n\n    // Clear the ampersand collections safely.\n    /* eslint-disable-next-line no-underscore-dangle */\n    Object.keys(this._collections).forEach((key) => {\n      this[key].reset();\n    });\n\n    return this;\n  },\n\n  // Ampersand method members.\n\n  /**\n   * Initializer method for FeatureModel class object.\n   *\n   * @override\n   * @returns {void}\n   */\n  initialize() {\n    // Declare the collection event names.\n    const eventNames = ['change:value', 'add', 'remove'];\n\n    // Initialize collection event listeners.\n    eventNames.forEach((eventName) => {\n      FEATURE_COLLECTION_NAMES.forEach((collectionName) => {\n        this[collectionName].on(eventName, (model, options) => {\n          this.trigger(\n            `change:${collectionName}`,\n            this,\n            this[collectionName],\n            options\n          );\n        });\n      });\n    });\n  }\n});\n\nexport default FeaturesModel;\n"]},"metadata":{},"sourceType":"script"}