{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = undefined;\n\nvar _defineProperty = require('babel-runtime/core-js/reflect/define-property');\n\nvar _defineProperty2 = _interopRequireDefault(_defineProperty);\n\nvar _apply = require('babel-runtime/core-js/reflect/apply');\n\nvar _apply2 = _interopRequireDefault(_apply);\n\nvar _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');\n\nvar _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _httpCore = require('@webex/http-core');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * Webex-specific http error class\n */\n\n\nvar WebexHttpError = function (_HttpError) {\n  (0, _inherits3.default)(WebexHttpError, _HttpError);\n\n  function WebexHttpError() {\n    (0, _classCallCheck3.default)(this, WebexHttpError);\n    return (0, _possibleConstructorReturn3.default)(this, (WebexHttpError.__proto__ || (0, _getPrototypeOf2.default)(WebexHttpError)).apply(this, arguments));\n  }\n\n  (0, _createClass3.default)(WebexHttpError, [{\n    key: 'parse',\n\n    /**\n     * Very similar to {@link HttpError#parse()}, but additionally adds some\n     * useful headers to the message string\n     * @param {HttpResponse} res\n     * @returns {string}\n     */\n    value: function parse(res) {\n      var message = (0, _apply2.default)(_httpCore.HttpError.prototype.parse, this, [res]);\n      (0, _defineProperty2.default)(this, 'options', {\n        enumerable: false,\n        value: res.options\n      });\n\n      if (this.options.url) {\n        message += '\\n' + this.options.method + ' ' + this.options.url;\n      } else if (this.options.uri) {\n        message += '\\n' + this.options.method + ' ' + this.options.uri;\n      } else {\n        message += '\\n' + this.options.method + ' ' + this.options.service.toUpperCase() + '/' + this.options.resource;\n      }\n\n      message += '\\nWEBEX_TRACKING_ID: ' + this.options.headers.trackingid;\n\n      if (this.options.headers && this.options.headers['x-trans-id']) {\n        message += '\\nX-Trans-Id: ' + this.options.headers['x-trans-id'];\n      }\n\n      if (this.headers['retry-after']) {\n        (0, _defineProperty2.default)(this, 'retryAfter', {\n          enumerable: true,\n          value: this.headers['retry-after'],\n          writeable: false\n        });\n        message += '\\nRETRY-AFTER: ' + this.retryAfter;\n      }\n\n      message += '\\n';\n      return message;\n    }\n  }]);\n  return WebexHttpError;\n}(_httpCore.HttpError);\n/*!\n * Copyright (c) 2015-2019 Cisco Systems, Inc. See LICENSE file.\n */\n\n\nexports.default = WebexHttpError;\n\n_httpCore.HttpError.makeSubTypes(WebexHttpError);\n/**\n * TooManyRequests\n */\n\n\nvar TooManyRequests = function (_HttpError$BadRequest) {\n  (0, _inherits3.default)(TooManyRequests, _HttpError$BadRequest);\n\n  function TooManyRequests() {\n    (0, _classCallCheck3.default)(this, TooManyRequests);\n    return (0, _possibleConstructorReturn3.default)(this, (TooManyRequests.__proto__ || (0, _getPrototypeOf2.default)(TooManyRequests)).apply(this, arguments));\n  }\n\n  return TooManyRequests;\n}(_httpCore.HttpError.BadRequest);\n\n_httpCore.HttpError[429] = TooManyRequests;\n_httpCore.HttpError.TooManyRequests = TooManyRequests;","map":{"version":3,"sources":["webex-http-error.js"],"names":["WebexHttpError","HttpError","res","message","enumerable","value","options","writeable","TooManyRequests","BadRequest"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIA,IAAA,SAAA,GAAA,OAAA,CAAA,kBAAA,CAAA;;;;;;;AAEA;;;;;IAGqBA,c;;;;;;;;;;;AACnB;;;;;;0BAMME,G,EAAK;AACT,UAAIC,OAAAA,GAAU,CAAA,GAAA,OAAA,CAAA,OAAA,EAAcF,SAAAA,CAAAA,SAAAA,CAAAA,SAAAA,CAAd,KAAA,EAAA,IAAA,EAA+C,CAA7D,GAA6D,CAA/C,CAAd;AAEA,OAAA,GAAA,gBAAA,CAAA,OAAA,EAAA,IAAA,EAAA,SAAA,EAAwC;AACtCG,QAAAA,UAAAA,EADsC,KAAA;AAEtCC,QAAAA,KAAAA,EAAOH,GAAAA,CAAII;AAF2B,OAAxC;;AAKA,UAAI,KAAA,OAAA,CAAJ,GAAA,EAAsB;AACpBH,QAAAA,OAAAA,IAAAA,OAAgB,KAAA,OAAA,CAAhBA,MAAAA,GAAAA,GAAAA,GAAuC,KAAA,OAAA,CAAvCA,GAAAA;AADF,OAAA,MAGK,IAAI,KAAA,OAAA,CAAJ,GAAA,EAAsB;AACzBA,QAAAA,OAAAA,IAAAA,OAAgB,KAAA,OAAA,CAAhBA,MAAAA,GAAAA,GAAAA,GAAuC,KAAA,OAAA,CAAvCA,GAAAA;AADG,OAAA,MAGA;AACHA,QAAAA,OAAAA,IAAAA,OAAgB,KAAA,OAAA,CAAhBA,MAAAA,GAAAA,GAAAA,GAAuC,KAAA,OAAA,CAAA,OAAA,CAAvCA,WAAuC,EAAvCA,GAAAA,GAAAA,GAA6E,KAAA,OAAA,CAA7EA,QAAAA;AACD;;AACDA,MAAAA,OAAAA,IAAAA,0BAAmC,KAAA,OAAA,CAAA,OAAA,CAAnCA,UAAAA;;AACA,UAAI,KAAA,OAAA,CAAA,OAAA,IAAwB,KAAA,OAAA,CAAA,OAAA,CAA5B,YAA4B,CAA5B,EAAgE;AAC9DA,QAAAA,OAAAA,IAAAA,mBAA4B,KAAA,OAAA,CAAA,OAAA,CAA5BA,YAA4B,CAA5BA;AACD;;AACD,UAAI,KAAA,OAAA,CAAJ,aAAI,CAAJ,EAAiC;AAC/B,SAAA,GAAA,gBAAA,CAAA,OAAA,EAAA,IAAA,EAAA,YAAA,EAA2C;AACzCC,UAAAA,UAAAA,EADyC,IAAA;AAEzCC,UAAAA,KAAAA,EAAO,KAAA,OAAA,CAFkC,aAElC,CAFkC;AAGzCE,UAAAA,SAAAA,EAAW;AAH8B,SAA3C;AAMAJ,QAAAA,OAAAA,IAAAA,oBAA6B,KAA7BA,UAAAA;AACD;;AACDA,MAAAA,OAAAA,IAAAA,IAAAA;AAEA,aAAA,OAAA;AACD;;;EAxCyCF,SAAAA,CAAAA,S;AAT5C;;;;;kBASqBD,c;;AA2CrBC,SAAAA,CAAAA,SAAAA,CAAAA,YAAAA,CAAAA,cAAAA;AAGA;;;;;IAGMO,e;;;;;;;;;EAAwBP,SAAAA,CAAAA,SAAAA,CAAUQ,U;;AAExCR,SAAAA,CAAAA,SAAAA,CAAAA,GAAAA,IAAAA,eAAAA;AACAA,SAAAA,CAAAA,SAAAA,CAAAA,eAAAA,GAAAA,eAAAA","sourcesContent":["/*!\n * Copyright (c) 2015-2019 Cisco Systems, Inc. See LICENSE file.\n */\n\nimport {HttpError} from '@webex/http-core';\n\n/**\n * Webex-specific http error class\n */\nexport default class WebexHttpError extends HttpError {\n  /**\n   * Very similar to {@link HttpError#parse()}, but additionally adds some\n   * useful headers to the message string\n   * @param {HttpResponse} res\n   * @returns {string}\n   */\n  parse(res) {\n    let message = Reflect.apply(HttpError.prototype.parse, this, [res]);\n\n    Reflect.defineProperty(this, 'options', {\n      enumerable: false,\n      value: res.options\n    });\n\n    if (this.options.url) {\n      message += `\\n${this.options.method} ${this.options.url}`;\n    }\n    else if (this.options.uri) {\n      message += `\\n${this.options.method} ${this.options.uri}`;\n    }\n    else {\n      message += `\\n${this.options.method} ${this.options.service.toUpperCase()}/${this.options.resource}`;\n    }\n    message += `\\nWEBEX_TRACKING_ID: ${this.options.headers.trackingid}`;\n    if (this.options.headers && this.options.headers['x-trans-id']) {\n      message += `\\nX-Trans-Id: ${this.options.headers['x-trans-id']}`;\n    }\n    if (this.headers['retry-after']) {\n      Reflect.defineProperty(this, 'retryAfter', {\n        enumerable: true,\n        value: this.headers['retry-after'],\n        writeable: false\n      });\n\n      message += `\\nRETRY-AFTER: ${this.retryAfter}`;\n    }\n    message += '\\n';\n\n    return message;\n  }\n}\n\nHttpError.makeSubTypes(WebexHttpError);\n\n\n/**\n * TooManyRequests\n */\nclass TooManyRequests extends HttpError.BadRequest {}\n\nHttpError[429] = TooManyRequests;\nHttpError.TooManyRequests = TooManyRequests;\n"]},"metadata":{},"sourceType":"script"}