{"ast":null,"code":"var _jsxFileName = \"/Users/pratison/Work/Cisco/Education/React/education-webex/src/pages/ManualEntry.js\";\nimport React from 'react';\nimport { Avatar, Input, Button, EditableTextfield } from '@momentum-ui/react';\nimport { findIndex, without } from 'lodash';\nimport Header from './Header.js';\n\nclass ManualEntry extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      studentList: [],\n      firstName: null,\n      lastName: null,\n      email: null,\n      lastIndex: 1,\n      firstNameError: {},\n      lastNameError: {},\n      emailError: {}\n    };\n    this.addInfo = this.addInfo.bind(this);\n    this.updateInfo = this.updateInfo.bind(this);\n    this.deleteInfo = this.deleteInfo.bind(this);\n    this.onTextChange = this.onTextChange.bind(this);\n    this.saveClick = this.saveClick.bind(this);\n    this.cancelClick = this.cancelClick.bind(this);\n  }\n\n  componentDidMount(props) {\n    const studentObj = JSON.parse(sessionStorage.getItem('studentList'));\n\n    if (studentObj !== null) {\n      this.setState({\n        lastIndex: studentObj.length + 1,\n        studentList: studentObj\n      });\n    }\n  }\n\n  validateEmail() {\n    this.setState({\n      error: false\n    });\n    let email = this.state.mail;\n\n    if (email === null) {\n      this.setState({\n        error: true\n      });\n      return;\n    }\n\n    let lastAtPos = email.lastIndexOf('@');\n    let lastDotPos = email.lastIndexOf('.');\n\n    if (!(lastAtPos < lastDotPos && lastAtPos > 0 && email.indexOf('@@') === -1 && lastDotPos > 2 && email.length - lastDotPos > 2)) {\n      this.setState({\n        error: true\n      });\n    }\n  }\n\n  addInfo(e) {\n    e.preventDefault();\n\n    if (this.state.firstName === null) {\n      this.setState({\n        firstNameError: {\n          message: 'Please enter student first name.',\n          type: 'error'\n        }\n      });\n    } else if (this.state.lastName === null) {\n      this.setState({\n        lastNameError: {\n          message: 'Please enter student last name.',\n          type: 'error'\n        }\n      });\n    } else if (this.state.email === null) {\n      this.setState({\n        emailError: {\n          message: 'Please enter student email.',\n          type: 'error'\n        }\n      });\n    } else {\n      let newStudent = {\n        firstName: this.state.firstName,\n        lastName: this.state.lastName,\n        email: this.state.email,\n        studentId: this.state.lastIndex\n      };\n      let temp = this.state.studentList;\n      temp.push(newStudent);\n      this.setState({\n        studentList: temp,\n        lastIndex: this.state.lastIndex + 1\n      });\n      this.setState({\n        firstName: null,\n        lastName: null,\n        email: null\n      });\n    }\n  }\n\n  cancelClick(e) {\n    this.props.history.push({\n      pathname: '/fileUpload'\n    });\n  }\n\n  saveClick(e) {\n    sessionStorage.setItem('studentList', JSON.stringify(this.state.studentList));\n    this.props.history.push({\n      pathname: '/review'\n    });\n  }\n\n  onTextChange(e) {\n    const target = e.target;\n    const value = target.value;\n    const name = target.name;\n    let errorMsg = {};\n\n    if (value === '') {\n      errorMsg = {\n        message: 'Please enter student information',\n        type: 'error'\n      };\n    }\n\n    this.setState({\n      [name]: value,\n      [`${name}Error`]: errorMsg\n    });\n  }\n\n  updateInfo(name, value, id) {\n    let temp = this.state.studentList;\n    let stdIndex = findIndex(this.state.studentList, {\n      studentId: id\n    });\n    temp[stdIndex][name] = value;\n    this.setState({\n      studentList: temp\n    });\n  }\n\n  deleteInfo(item) {\n    let temp = this.state.studentList;\n    temp = without(temp, item);\n    this.setState({\n      studentList: temp\n    });\n  }\n\n  render() {\n    const hideGrid = {\n      marginTop: 20\n    };\n    let students = this.state.studentList;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"grid\",\n      style: {\n        paddingTop: 20\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      tab: \"manual\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row large-offset-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"columns large-10\",\n      style: hideGrid,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        fontSize: 16\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 25\n      }\n    }, \"Enter Students\\u2019 information manually.\"))), students.map(item => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row large-offset-1\",\n      key: item.studentId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      key: item.studentId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"columns large-2\",\n      style: hideGrid,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(EditableTextfield, {\n      handleDoneEditing: (e, data) => this.updateInfo('firstName', data.value, item.studentId),\n      inputText: item.firstName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"columns large-2\",\n      style: hideGrid,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(EditableTextfield, {\n      handleDoneEditing: (e, data) => this.updateInfo('lastName', data.value, item.studentId),\n      inputText: item.lastName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"columns large-2\",\n      style: hideGrid,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(EditableTextfield, {\n      handleDoneEditing: (e, data) => this.updateInfo('email', data.value, item.studentId),\n      inputText: item.email,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"columns large-5\",\n      style: hideGrid,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      children: \"Delete\",\n      color: \"blue-outline\",\n      onClick: e => this.deleteInfo(item),\n      style: {\n        color: 'blue',\n        borderRadius: 5\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 33\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"hr\", {\n      style: {\n        marginLeft: 20,\n        height: 1,\n        width: '95%',\n        border: 'none',\n        color: 'grey',\n        backgroundColor: 'grey'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 29\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row large-offset-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"columns large-4\",\n      style: hideGrid,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      name: \"firstName\",\n      label: \"First Name\",\n      type: \"text\",\n      inputSize: \"large-15\",\n      placeholder: \"Emily\",\n      onChange: this.onTextChange,\n      messageArr: [this.state.firstNameError],\n      htmlId: \"firstName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"columns large-4\",\n      style: hideGrid,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      name: \"lastName\",\n      label: \"Last Name\",\n      type: \"text\",\n      inputSize: \"large-15\",\n      placeholder: \"Henning\",\n      onChange: this.onTextChange,\n      messageArr: [this.state.lastNameError],\n      htmlId: \"lastName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"columns large-4\",\n      style: hideGrid,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      name: \"email\",\n      label: \"Email\",\n      type: \"email\",\n      inputSize: \"large-15\",\n      placeholder: \"emilyhenning@gmail.com\",\n      onChange: this.onTextChange,\n      messageArr: [this.state.emailError],\n      htmlId: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"columns large-offset-11 large-1\",\n      style: hideGrid,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      children: \"Add\",\n      color: \"blue\",\n      onClick: this.addInfo,\n      style: {\n        color: 'blue',\n        borderRadius: 5\n      },\n      ariaPressed: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row large-offset-1\",\n      style: {\n        marginTop: 40,\n        marginLeft: 10\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"large-10 columns\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      children: \"Back\",\n      color: \"blue-outline\",\n      onClick: this.cancelClick,\n      style: {\n        color: 'blue',\n        borderRadius: 5\n      },\n      ariaPressed: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"large-1 columns\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      children: \"Continue\",\n      color: \"blue\",\n      onClick: this.saveClick,\n      ariaPressed: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 25\n      }\n    }))));\n  }\n\n}\n\nexport default ManualEntry;","map":{"version":3,"sources":["/Users/pratison/Work/Cisco/Education/React/education-webex/src/pages/ManualEntry.js"],"names":["React","Avatar","Input","Button","EditableTextfield","findIndex","without","Header","ManualEntry","Component","constructor","props","state","studentList","firstName","lastName","email","lastIndex","firstNameError","lastNameError","emailError","addInfo","bind","updateInfo","deleteInfo","onTextChange","saveClick","cancelClick","componentDidMount","studentObj","JSON","parse","sessionStorage","getItem","setState","length","validateEmail","error","mail","lastAtPos","lastIndexOf","lastDotPos","indexOf","e","preventDefault","message","type","newStudent","studentId","temp","push","history","pathname","setItem","stringify","target","value","name","errorMsg","id","stdIndex","item","render","hideGrid","marginTop","students","paddingTop","fontSize","map","data","color","borderRadius","marginLeft","height","width","border","backgroundColor"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n    Avatar,\n    Input,\n    Button,\n    EditableTextfield,\n} from '@momentum-ui/react';\nimport { findIndex, without } from 'lodash';\nimport Header from './Header.js';\n\nclass ManualEntry extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            studentList: [],\n            firstName: null,\n            lastName: null,\n            email: null,\n            lastIndex: 1,\n            firstNameError: {},\n            lastNameError: {},\n            emailError: {},\n        };\n        this.addInfo = this.addInfo.bind(this);\n        this.updateInfo = this.updateInfo.bind(this);\n        this.deleteInfo = this.deleteInfo.bind(this);\n        this.onTextChange = this.onTextChange.bind(this);\n        this.saveClick = this.saveClick.bind(this);\n        this.cancelClick = this.cancelClick.bind(this);\n    }\n\n    componentDidMount(props) {\n        const studentObj = JSON.parse(sessionStorage.getItem('studentList'));\n        if (studentObj !== null) {\n            this.setState({\n              lastIndex: studentObj.length + 1,\n              studentList: studentObj\n            });\n        }\n    }\n\n    validateEmail() {\n        this.setState({error: false});\n        let email = this.state.mail;\n        if (email === null) {\n            this.setState({error: true});\n            return;\n        }\n        let lastAtPos = email.lastIndexOf('@');\n        let lastDotPos = email.lastIndexOf('.');\n        if (!(lastAtPos < lastDotPos &&\n              lastAtPos > 0 &&\n              email.indexOf('@@') === -1 &&\n              lastDotPos > 2 &&\n             (email.length - lastDotPos) > 2)) {\n                 this.setState({error: true});\n        }\n    }\n\n    addInfo(e) {\n        e.preventDefault();\n        if (this.state.firstName === null) {\n            this.setState({\n                firstNameError: { message: 'Please enter student first name.', type: 'error' },\n            });\n        } else if (this.state.lastName === null) {\n            this.setState({\n                lastNameError: { message: 'Please enter student last name.', type: 'error' },\n            });\n        } else if (this.state.email === null) {\n            this.setState({\n                emailError: { message: 'Please enter student email.', type: 'error' },\n            });\n        } else {\n            let newStudent = {\n                firstName: this.state.firstName,\n                lastName: this.state.lastName,\n                email: this.state.email,\n                studentId: this.state.lastIndex,\n            };\n            let temp = this.state.studentList;\n            temp.push(newStudent);\n            this.setState({\n                studentList: temp,\n                lastIndex: this.state.lastIndex + 1,\n            });\n            this.setState({\n              firstName: null,\n              lastName: null,\n              email: null,\n            });\n\n        }\n    }\n\n    cancelClick(e) {\n        this.props.history.push({\n            pathname: '/fileUpload',\n        });\n    }\n\n    saveClick(e) {\n        sessionStorage.setItem('studentList',JSON.stringify(this.state.studentList));\n\n        this.props.history.push({\n            pathname: '/review',\n        });\n    }\n\n    onTextChange(e) {\n        const target = e.target;\n        const value = target.value;\n        const name = target.name;\n\n        let errorMsg = {};\n        if (value === '') {\n            errorMsg = { message: 'Please enter student information', type: 'error' };\n        }\n        this.setState({\n          [name]: value,\n          [`${name}Error`]: errorMsg,\n        });\n    }\n\n    updateInfo(name, value, id) {\n        let temp = this.state.studentList;\n        let stdIndex = findIndex(this.state.studentList, {\n          studentId: id\n        });\n        temp[stdIndex][name] = value;\n        this.setState({\n          studentList: temp\n        });\n    }\n\n    deleteInfo(item) {\n        let temp = this.state.studentList;\n        temp = without(temp, item);\n        this.setState({\n          studentList: temp\n        });\n    }\n\n    render() {\n        const hideGrid = {\n            marginTop: 20\n        };\n\n        let students = this.state.studentList;\n\n        return (\n            <div className=\"grid\" style={{paddingTop:20}}>\n                <Header tab='manual'/>\n                <div className=\"row large-offset-1\">\n                    <div className=\"columns large-10\" style={hideGrid}>\n                        <p style={{fontSize:16}}>Enter Students’ information manually.</p>\n                    </div>\n                </div>\n                {students.map(item => (\n                    <div className=\"row large-offset-1\" key={item.studentId}>\n                        <div className=\"row\"  key={item.studentId}>\n                            <div className=\"columns large-2\" style={hideGrid}>\n                                <EditableTextfield\n                                        handleDoneEditing={(e, data) => this.updateInfo('firstName',data.value,item.studentId)}\n                                        inputText={item.firstName}\n                                      />\n                            </div>\n                            <div className=\"columns large-2\" style={hideGrid}>\n                                <EditableTextfield\n                                        handleDoneEditing={(e, data) => this.updateInfo('lastName',data.value,item.studentId)}\n                                        inputText={item.lastName}\n                                      />\n                            </div>\n                            <div className=\"columns large-2\" style={hideGrid}>\n                                <EditableTextfield\n                                        handleDoneEditing={(e, data) => this.updateInfo('email',data.value,item.studentId)}\n                                        inputText={item.email}\n                                      />\n                            </div>\n                            <div className=\"columns large-5\" style={hideGrid}>\n                                <Button\n                                    children='Delete'\n                                    color='blue-outline'\n                                    onClick={(e) => this.deleteInfo(item)}\n                                    style={{color:'blue',borderRadius:5}}\n                                  />\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <hr style={{marginLeft: 20, height: 1, width: '95%', border: 'none', color: 'grey', backgroundColor: 'grey'}}></hr>\n                        </div>\n                    </div>\n                ))}\n                <div className=\"row large-offset-1\">\n                    <div className=\"columns large-4\" style={hideGrid}>\n                        <Input\n                            name='firstName'\n                            label='First Name'\n                            type='text'\n                            inputSize='large-15'\n                            placeholder='Emily'\n                            onChange={this.onTextChange}\n                            messageArr={[ this.state.firstNameError ]}\n                            htmlId='firstName'\n                          />\n                    </div>\n                    <div className=\"columns large-4\" style={hideGrid}>\n                        <Input\n                            name='lastName'\n                            label='Last Name'\n                            type='text'\n                            inputSize='large-15'\n                            placeholder='Henning'\n                            onChange={this.onTextChange}\n                            messageArr={[ this.state.lastNameError ]}\n                            htmlId='lastName'\n                          />\n                    </div>\n                    <div className=\"columns large-4\" style={hideGrid}>\n                        <Input\n                            name='email'\n                            label='Email'\n                            type='email'\n                            inputSize='large-15'\n                            placeholder='emilyhenning@gmail.com'\n                            onChange={this.onTextChange}\n                            messageArr={[ this.state.emailError ]}\n                            htmlId='email'\n                          />\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"columns large-offset-11 large-1\" style={hideGrid}>\n                        <Button\n                            children='Add'\n                            color='blue'\n                            onClick={this.addInfo}\n                            style={{color:'blue',borderRadius:5}}\n                            ariaPressed={false}\n                          />\n                    </div>\n                </div>\n                <div className=\"row large-offset-1\" style={{marginTop:40, marginLeft:10}}>\n                    <div className=\"large-10 columns\">\n                        <Button\n                            children='Back'\n                            color='blue-outline'\n                            onClick={this.cancelClick}\n                            style={{color:'blue',borderRadius:5}}\n                            ariaPressed={false}\n                          />\n                    </div>\n                    <div className=\"large-1 columns\">\n                        <Button\n                            children='Continue'\n                            color='blue'\n                            onClick={this.saveClick}\n                            ariaPressed={false}\n                          />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default ManualEntry;\n"]},"metadata":{},"sourceType":"module"}