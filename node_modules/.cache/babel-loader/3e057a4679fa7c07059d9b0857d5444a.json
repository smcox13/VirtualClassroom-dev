{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = undefined;\n\nvar _promise = require('babel-runtime/core-js/promise');\n\nvar _promise2 = _interopRequireDefault(_promise);\n\nvar _regenerator = require('babel-runtime/regenerator');\n\nvar _regenerator2 = _interopRequireDefault(_regenerator);\n\nvar _asyncToGenerator2 = require('babel-runtime/helpers/asyncToGenerator');\n\nvar _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);\n\nvar _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');\n\nvar _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _uuid = require('uuid');\n\nvar _uuid2 = _interopRequireDefault(_uuid);\n\nvar _webexCore = require('@webex/webex-core');\n\nvar _loggerProxy = require('../common/logs/logger-proxy');\n\nvar _loggerProxy2 = _interopRequireDefault(_loggerProxy);\n\nvar _constants = require('../constants');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * @class MeetingRequest\n */\n\n\nvar MeetingRequest = function (_StatelessWebexPlugin) {\n  (0, _inherits3.default)(MeetingRequest, _StatelessWebexPlugin);\n\n  function MeetingRequest() {\n    (0, _classCallCheck3.default)(this, MeetingRequest);\n    return (0, _possibleConstructorReturn3.default)(this, (MeetingRequest.__proto__ || (0, _getPrototypeOf2.default)(MeetingRequest)).apply(this, arguments));\n  }\n\n  (0, _createClass3.default)(MeetingRequest, [{\n    key: 'joinMeeting',\n\n    /**\n     * Make a network request to join a meeting\n     * @param {Object} options\n     * @param {String} options.sipUri\n     * @param {String} options.deviceUrl\n     * @param {String} options.locusUrl\n     * @param {String} options.resourceId,\n     * @param {String} options.correlationId\n     * @returns {Promise}\n     */\n    value: function () {\n      var _ref = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee(options) {\n        var sipUri, deviceUrl, locusUrl, resourceId, correlationId, ensureConversation, moderator, hostPin, moveToResource, roapMessage, url, body;\n        return _regenerator2.default.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                sipUri = options.sipUri, deviceUrl = options.deviceUrl, locusUrl = options.locusUrl, resourceId = options.resourceId, correlationId = options.correlationId, ensureConversation = options.ensureConversation, moderator = options.moderator, hostPin = options.hostPin, moveToResource = options.moveToResource, roapMessage = options.roapMessage;\n                url = '';\n                body = {\n                  device: {\n                    url: deviceUrl,\n                    deviceType: this.config.meetings.deviceType\n                  },\n                  usingResource: resourceId || null,\n                  moveMediaToResource: resourceId && moveToResource || false,\n                  correlationId: correlationId,\n                  respOnlySdp: true,\n                  allowMultiDevice: true,\n                  ensureConversation: ensureConversation || false,\n                  supportsNativeLobby: 1\n                };\n\n                if (moderator !== undefined) {\n                  body.moderator = moderator;\n                }\n\n                if (hostPin !== undefined) {\n                  body.hostPIN = hostPin;\n                }\n\n                if (!locusUrl) {\n                  _context.next = 9;\n                  break;\n                }\n\n                url = locusUrl + '/' + _constants.PARTICIPANT;\n                _context.next = 14;\n                break;\n\n              case 9:\n                if (!sipUri) {\n                  _context.next = 14;\n                  break;\n                }\n\n                _context.next = 12;\n                return this.webex.internal.services.waitForCatalog('postauth');\n\n              case 12:\n                url = this.webex.internal.services.get('locus') + '/' + _constants.LOCI + '/' + _constants.CALL;\n                body.invitee = {\n                  address: sipUri\n                };\n\n              case 14:\n                // TODO: -- this will be resolved in SDK request\n                url = url.concat('?' + _constants.ALTERNATE_REDIRECT_TRUE);\n\n                if (resourceId === sipUri) {\n                  body.callPreferences = {\n                    requestedMedia: [_constants._SLIDES_]\n                  };\n                }\n\n                if (roapMessage) {\n                  body.localMedias = roapMessage.localMedias;\n                }\n\n                return _context.abrupt('return', this.webex.request({\n                  method: _constants.HTTP_VERBS.POST,\n                  uri: url,\n                  body: body\n                }));\n\n              case 18:\n              case 'end':\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function joinMeeting(_x) {\n        return _ref.apply(this, arguments);\n      }\n\n      return joinMeeting;\n    }()\n    /**\n     * Syns the missed delta event\n     * @param {Object} options\n     * @param {boolen} options.desync flag to get partial or whole locus object\n     * @param {String} options.syncUrl sync url to get ht elatest locus delta\n     * @returns {Promise}\n     */\n\n  }, {\n    key: 'syncMeeting',\n    value: function syncMeeting(options) {\n      /* eslint-disable no-else-return */\n      var desync = options.desync;\n      var syncUrl = options.syncUrl;\n      /* istanbul ignore else */\n\n      if (desync) {\n        // check for existing URL parameters\n        syncUrl = syncUrl.concat(syncUrl.split('?')[1] ? '&' : '?').concat(_constants.LOCUS.SYNCDEBUG + '=' + desync);\n      }\n\n      return this.request({\n        method: _constants.HTTP_VERBS.GET,\n        uri: syncUrl\n      }) // TODO: Handle if delta sync failed . Get the full locus object\n      .catch(function (err) {\n        _loggerProxy2.default.logger.error('MeetingRequest->syncMeeting#Error syncing meeting, error ' + err);\n\n        return err;\n      });\n    }\n    /**\n     * Request to get the complete locus object\n     * @param {Object} options\n     * @param {boolen} options.desync flag to get partial or whole locus object\n     * @param {String} options.locusUrl sync url to get ht elatest locus delta\n     * @returns {Promise}\n     */\n\n  }, {\n    key: 'getFullLocus',\n    value: function getFullLocus(options) {\n      var locusUrl = options.locusUrl;\n      var desync = options.desync;\n\n      if (locusUrl) {\n        if (desync) {\n          locusUrl += '?' + _constants.LOCUS.SYNCDEBUG + '=' + desync;\n        }\n\n        return this.request({\n          method: _constants.HTTP_VERBS.GET,\n          uri: locusUrl\n        }).catch(function (err) {\n          _loggerProxy2.default.logger.error('MeetingRequest->getFullLocus#Error getting full locus, error ' + err);\n\n          return err;\n        });\n      }\n\n      return _promise2.default.reject();\n    }\n    /**\n     * Make a network request to leave a meeting\n     * @param {Object} options\n     * @param {String} options.deviceUrl\n     * @param {String} options.resourceId,\n     * @param {String} options.correlationId\n     * @returns {Promise}\n     */\n\n  }, {\n    key: 'leaveMeeting',\n    value: function leaveMeeting(options) {\n      var uri = options.locusUrl + '/' + _constants.PARTICIPANT + '/' + options.selfId + '/' + _constants.LEAVE;\n      var body = {\n        device: {\n          deviceType: this.config.meetings.deviceType,\n          url: options.deviceUrl\n        },\n        usingResource: options.resourceId || null,\n        correlationId: options.correlationId\n      };\n      return this.request({\n        method: _constants.HTTP_VERBS.PUT,\n        uri: uri,\n        body: body\n      });\n    }\n    /**\n     * Make a network request to acknowledge a meeting\n     * @param {Object} options\n     * @param {String} options.locusUrl\n     * @param {String} options.deviceUrl\n     * @param {String} options.id\n     * @returns {Promise}\n     */\n\n  }, {\n    key: 'acknowledgeMeeting',\n    value: function acknowledgeMeeting(options) {\n      var uri = options.locusUrl + '/' + _constants.PARTICIPANT + '/' + _constants.ALERT;\n      var body = {\n        device: {\n          deviceType: this.config.meetings.deviceType,\n          url: options.deviceUrl\n        },\n        correlationId: options.id\n      };\n      return this.request({\n        method: _constants.HTTP_VERBS.PUT,\n        uri: uri,\n        body: body\n      });\n    }\n    /**\n     * Make a network request to acknowledge a meeting\n     * @param {Object} options\n     * @param {String} options.locusUrl\n     * @param {String} options.deviceUrl\n     * @param {String} options.id\n     * @returns {Promise}\n     */\n\n  }, {\n    key: 'recordMeeting',\n    value: function recordMeeting(options) {\n      var uri = options.locusUrl + '/' + _constants.CONTROLS;\n      var body = {\n        record: {\n          recording: options.recording,\n          paused: options.paused\n        }\n      };\n      return this.request({\n        method: _constants.HTTP_VERBS.PATCH,\n        uri: uri,\n        body: body\n      });\n    }\n  }, {\n    key: 'lockMeeting',\n    value: function lockMeeting(options) {\n      var uri = options.locusUrl + '/' + _constants.CONTROLS;\n      var body = {\n        lock: {\n          locked: options.lock\n        }\n      };\n      return this.request({\n        method: _constants.HTTP_VERBS.PATCH,\n        uri: uri,\n        body: body\n      });\n    }\n    /**\n     * Make a network request to decline a meeting\n     * @param {Object} options\n     * @param {String} options.locusUrl\n     * @param {String} options.deviceUrl\n     * @param {String} options.reason\n     * @returns {Promise}\n     */\n\n  }, {\n    key: 'declineMeeting',\n    value: function declineMeeting(options) {\n      var uri = options.locusUrl + '/' + _constants.PARTICIPANT + '/' + _constants.DECLINE;\n      var body = {\n        device: {\n          deviceType: this.config.meetings.deviceType,\n          url: options.deviceUrl\n        },\n        reason: options.reason\n      };\n      return this.request({\n        method: _constants.HTTP_VERBS.PUT,\n        uri: uri,\n        body: body\n      });\n    }\n    /**\n     * Toggle remote audio and/or video\n     * @param {Object} options options for toggling\n     * @param {String} options.selfId Locus self id??\n     * @param {String} options.locusUrl Locus url\n     * @param {String} options.deviceUrl Url of a device\n     * @param {String} options.resourceId Populated if you are paired to a device\n     * @param {String} options.localMedias local sdps\n     * @returns {Promise}\n     */\n\n  }, {\n    key: 'remoteAudioVideoToggle',\n    value: function remoteAudioVideoToggle(options) {\n      var uri = options.locusUrl + '/' + _constants.PARTICIPANT + '/' + options.selfId + '/' + _constants.MEDIA;\n      var body = {\n        device: {\n          deviceType: this.config.meetings.deviceType,\n          url: options.deviceUrl\n        },\n        usingResource: options.resourceId || null,\n        correlationId: options.correlationId,\n        respOnlySdp: true,\n        localMedias: options.localMedias\n      };\n      return this.request({\n        method: _constants.HTTP_VERBS.PUT,\n        uri: uri,\n        body: body\n      });\n    }\n    /**\n     * change the content floor grant\n     * @param {Object} options options for floor grant\n     * @param {String} options.disposition floor action (granted/released)\n     * @param {String} options.personUrl personUrl who is requesting floor\n     * @param {String} options.deviceUrl Url of a device\n     * @param {String} options.resourceId Populated if you are paired to a device\n     * @param {String} options.uri floor grant uri\n     * @returns {Promise}\n     */\n\n  }, {\n    key: 'changeMeetingFloor',\n    value: function changeMeetingFloor(options) {\n      var floorReq = {\n        disposition: options.disposition\n      };\n      /* istanbul ignore else */\n\n      if (options.disposition === _constants.FLOOR_ACTION.GRANTED) {\n        floorReq = {\n          beneficiary: {\n            url: options.personUrl,\n            devices: [{\n              deviceType: this.config.meetings.deviceType,\n              url: options.deviceUrl\n            }]\n          },\n          disposition: options.disposition,\n          requester: {\n            url: options.personUrl\n          }\n        };\n      }\n\n      return this.request({\n        uri: options.uri,\n        method: _constants.HTTP_VERBS.PUT,\n        body: {\n          floor: floorReq,\n          resourceUrl: options.resourceUrl\n        }\n      });\n    }\n    /**\n     * Sends a request to the DTMF endpoint to send tones\n     * @param {Object} options\n     * @param {String} options.locusUrl\n     * @param {String} options.deviceUrl\n     * @param {String} options.tones a string of one or more DTMF tones to send\n     * @returns {Promise}\n     */\n\n  }, {\n    key: 'sendDTMF',\n    value: function sendDTMF(_ref2) {\n      var locusUrl = _ref2.locusUrl,\n          deviceUrl = _ref2.deviceUrl,\n          tones = _ref2.tones;\n      return this.request({\n        method: _constants.HTTP_VERBS.POST,\n        uri: locusUrl + '/' + _constants.SEND_DTMF_ENDPOINT,\n        body: {\n          deviceUrl: deviceUrl,\n          dtmf: {\n            correlationId: _uuid2.default.v4(),\n            tones: tones\n          }\n        }\n      });\n    }\n  }]);\n  return MeetingRequest;\n}(_webexCore.StatelessWebexPlugin);\n\nexports.default = MeetingRequest;","map":{"version":3,"sources":["request.js"],"names":["MeetingRequest","StatelessWebexPlugin","options","sipUri","deviceUrl","locusUrl","resourceId","correlationId","ensureConversation","moderator","hostPin","moveToResource","roapMessage","url","body","device","deviceType","usingResource","moveMediaToResource","respOnlySdp","allowMultiDevice","supportsNativeLobby","PARTICIPANT","LOCI","CALL","address","ALTERNATE_REDIRECT_TRUE","requestedMedia","_SLIDES_","method","HTTP_VERBS","uri","desync","syncUrl","LOCUS","LoggerProxy","LEAVE","ALERT","id","CONTROLS","record","recording","paused","lock","locked","DECLINE","reason","MEDIA","localMedias","floorReq","disposition","FLOOR_ACTION","beneficiary","devices","requester","personUrl","floor","resourceUrl","tones","SEND_DTMF_ENDPOINT","dtmf","uuid"],"mappings":"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","sourcesContent":["import uuid from 'uuid';\nimport {StatelessWebexPlugin} from '@webex/webex-core';\n\nimport LoggerProxy from '../common/logs/logger-proxy';\nimport {\n  ALERT,\n  ALTERNATE_REDIRECT_TRUE,\n  CALL,\n  CONTROLS,\n  DECLINE,\n  FLOOR_ACTION,\n  HTTP_VERBS,\n  LEAVE,\n  LOCI,\n  LOCUS,\n  MEDIA,\n  PARTICIPANT,\n  SEND_DTMF_ENDPOINT,\n  _SLIDES_\n} from '../constants';\n\n/**\n * @class MeetingRequest\n */\nexport default class MeetingRequest extends StatelessWebexPlugin {\n  /**\n   * Make a network request to join a meeting\n   * @param {Object} options\n   * @param {String} options.sipUri\n   * @param {String} options.deviceUrl\n   * @param {String} options.locusUrl\n   * @param {String} options.resourceId,\n   * @param {String} options.correlationId\n   * @returns {Promise}\n   */\n  async joinMeeting(options) {\n    const {\n      sipUri, deviceUrl, locusUrl, resourceId, correlationId, ensureConversation, moderator, hostPin, moveToResource, roapMessage\n    } = options;\n\n    let url = '';\n\n    const body = {\n      device: {\n        url: deviceUrl,\n        deviceType: this.config.meetings.deviceType\n      },\n      usingResource: resourceId || null,\n      moveMediaToResource: resourceId && moveToResource || false,\n      correlationId,\n      respOnlySdp: true,\n      allowMultiDevice: true,\n      ensureConversation: ensureConversation || false,\n      supportsNativeLobby: 1\n    };\n\n    if (moderator !== undefined) {\n      body.moderator = moderator;\n    }\n\n    if (hostPin !== undefined) {\n      body.hostPIN = hostPin;\n    }\n\n    if (locusUrl) {\n      url = `${locusUrl}/${PARTICIPANT}`;\n    }\n    else if (sipUri) {\n      await this.webex.internal.services.waitForCatalog('postauth');\n      url = `${this.webex.internal.services.get('locus')}/${LOCI}/${CALL}`;\n      body.invitee = {\n        address: sipUri\n      };\n    }\n\n    // TODO: -- this will be resolved in SDK request\n    url = url.concat(`?${ALTERNATE_REDIRECT_TRUE}`);\n\n    if (resourceId === sipUri) {\n      body.callPreferences = {\n        requestedMedia: [_SLIDES_]\n      };\n    }\n\n    if (roapMessage) {\n      body.localMedias = roapMessage.localMedias;\n    }\n\n    return this.webex.request({\n      method: HTTP_VERBS.POST,\n      uri: url,\n      body\n    });\n  }\n\n  /**\n   * Syns the missed delta event\n   * @param {Object} options\n   * @param {boolen} options.desync flag to get partial or whole locus object\n   * @param {String} options.syncUrl sync url to get ht elatest locus delta\n   * @returns {Promise}\n   */\n  syncMeeting(options) {\n    /* eslint-disable no-else-return */\n    const {desync} = options;\n    let {syncUrl} = options;\n\n    /* istanbul ignore else */\n    if (desync) {\n      // check for existing URL parameters\n      syncUrl = syncUrl.concat(syncUrl.split('?')[1] ? '&' : '?').concat(`${LOCUS.SYNCDEBUG}=${desync}`);\n    }\n\n    return this.request({\n      method: HTTP_VERBS.GET,\n      uri: syncUrl\n    }) // TODO: Handle if delta sync failed . Get the full locus object\n      .catch((err) => {\n        LoggerProxy.logger.error(`MeetingRequest->syncMeeting#Error syncing meeting, error ${err}`);\n\n        return err;\n      });\n  }\n\n  /**\n   * Request to get the complete locus object\n   * @param {Object} options\n   * @param {boolen} options.desync flag to get partial or whole locus object\n   * @param {String} options.locusUrl sync url to get ht elatest locus delta\n   * @returns {Promise}\n   */\n\n  getFullLocus(options) {\n    let {locusUrl} = options;\n    const {desync} = options;\n\n    if (locusUrl) {\n      if (desync) {\n        locusUrl += `?${LOCUS.SYNCDEBUG}=${desync}`;\n      }\n\n      return this.request({\n        method: HTTP_VERBS.GET,\n        uri: locusUrl\n      }).catch((err) => {\n        LoggerProxy.logger.error(`MeetingRequest->getFullLocus#Error getting full locus, error ${err}`);\n\n        return err;\n      });\n    }\n\n    return Promise.reject();\n  }\n\n  /**\n   * Make a network request to leave a meeting\n   * @param {Object} options\n   * @param {String} options.deviceUrl\n   * @param {String} options.resourceId,\n   * @param {String} options.correlationId\n   * @returns {Promise}\n   */\n  leaveMeeting(options) {\n    const uri = `${options.locusUrl}/${PARTICIPANT}/${options.selfId}/${LEAVE}`;\n    const body = {\n      device: {\n        deviceType: this.config.meetings.deviceType,\n        url: options.deviceUrl\n      },\n      usingResource: options.resourceId || null,\n      correlationId: options.correlationId\n    };\n\n    return this.request({\n      method: HTTP_VERBS.PUT,\n      uri,\n      body\n    });\n  }\n\n  /**\n   * Make a network request to acknowledge a meeting\n   * @param {Object} options\n   * @param {String} options.locusUrl\n   * @param {String} options.deviceUrl\n   * @param {String} options.id\n   * @returns {Promise}\n   */\n  acknowledgeMeeting(options) {\n    const uri = `${options.locusUrl}/${PARTICIPANT}/${ALERT}`;\n    const body = {\n      device: {\n        deviceType: this.config.meetings.deviceType,\n        url: options.deviceUrl\n      },\n      correlationId: options.id\n    };\n\n    return this.request({\n      method: HTTP_VERBS.PUT,\n      uri,\n      body\n    });\n  }\n\n  /**\n   * Make a network request to acknowledge a meeting\n   * @param {Object} options\n   * @param {String} options.locusUrl\n   * @param {String} options.deviceUrl\n   * @param {String} options.id\n   * @returns {Promise}\n   */\n  recordMeeting(options) {\n    const uri = `${options.locusUrl}/${CONTROLS}`;\n    const body = {\n      record: {\n        recording: options.recording,\n        paused: options.paused\n      }\n    };\n\n    return this.request({\n      method: HTTP_VERBS.PATCH,\n      uri,\n      body\n    });\n  }\n\n  lockMeeting(options) {\n    const uri = `${options.locusUrl}/${CONTROLS}`;\n    const body = {\n      lock: {\n        locked: options.lock\n      }\n    };\n\n    return this.request({\n      method: HTTP_VERBS.PATCH,\n      uri,\n      body\n    });\n  }\n\n  /**\n   * Make a network request to decline a meeting\n   * @param {Object} options\n   * @param {String} options.locusUrl\n   * @param {String} options.deviceUrl\n   * @param {String} options.reason\n   * @returns {Promise}\n   */\n  declineMeeting(options) {\n    const uri = `${options.locusUrl}/${PARTICIPANT}/${DECLINE}`;\n    const body = {\n      device: {\n        deviceType: this.config.meetings.deviceType,\n        url: options.deviceUrl\n      },\n      reason: options.reason\n    };\n\n    return this.request({\n      method: HTTP_VERBS.PUT,\n      uri,\n      body\n    });\n  }\n\n  /**\n   * Toggle remote audio and/or video\n   * @param {Object} options options for toggling\n   * @param {String} options.selfId Locus self id??\n   * @param {String} options.locusUrl Locus url\n   * @param {String} options.deviceUrl Url of a device\n   * @param {String} options.resourceId Populated if you are paired to a device\n   * @param {String} options.localMedias local sdps\n   * @returns {Promise}\n   */\n  remoteAudioVideoToggle(options) {\n    const uri = `${options.locusUrl}/${PARTICIPANT}/${options.selfId}/${MEDIA}`;\n    const body = {\n      device: {\n        deviceType: this.config.meetings.deviceType,\n        url: options.deviceUrl\n      },\n      usingResource: options.resourceId || null,\n      correlationId: options.correlationId,\n      respOnlySdp: true,\n      localMedias: options.localMedias\n    };\n\n    return this.request({\n      method: HTTP_VERBS.PUT,\n      uri,\n      body\n    });\n  }\n\n  /**\n   * change the content floor grant\n   * @param {Object} options options for floor grant\n   * @param {String} options.disposition floor action (granted/released)\n   * @param {String} options.personUrl personUrl who is requesting floor\n   * @param {String} options.deviceUrl Url of a device\n   * @param {String} options.resourceId Populated if you are paired to a device\n   * @param {String} options.uri floor grant uri\n   * @returns {Promise}\n   */\n  changeMeetingFloor(options) {\n    let floorReq = {disposition: options.disposition};\n\n    /* istanbul ignore else */\n    if (options.disposition === FLOOR_ACTION.GRANTED) {\n      floorReq = {\n        beneficiary: {\n          url: options.personUrl,\n          devices: [\n            {\n              deviceType: this.config.meetings.deviceType,\n              url: options.deviceUrl\n            }\n          ]\n        },\n        disposition: options.disposition,\n        requester: {\n          url: options.personUrl\n        }\n      };\n    }\n\n    return this.request({\n      uri: options.uri,\n      method: HTTP_VERBS.PUT,\n      body: {\n        floor: floorReq,\n        resourceUrl: options.resourceUrl\n      }\n    });\n  }\n\n  /**\n   * Sends a request to the DTMF endpoint to send tones\n   * @param {Object} options\n   * @param {String} options.locusUrl\n   * @param {String} options.deviceUrl\n   * @param {String} options.tones a string of one or more DTMF tones to send\n   * @returns {Promise}\n   */\n  sendDTMF({locusUrl, deviceUrl, tones}) {\n    return this.request({\n      method: HTTP_VERBS.POST,\n      uri: `${locusUrl}/${SEND_DTMF_ENDPOINT}`,\n      body: {\n        deviceUrl,\n        dtmf: {\n          correlationId: uuid.v4(),\n          tones\n        }\n      }\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"script"}