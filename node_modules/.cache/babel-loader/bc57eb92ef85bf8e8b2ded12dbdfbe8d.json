{"ast":null,"code":"/*!\n * algorithms/aes-kw.js - AES-KW Key-Wrapping\n *\n * Copyright (c) 2015 Cisco Systems, Inc.  See LICENSE file.\n */\n\"use strict\";\n\nvar helpers = require(\"./helpers.js\"),\n    forge = require(\"../deps/forge.js\"),\n    DataBuffer = require(\"../util/databuffer.js\");\n\nvar A0 = new Buffer(\"a6a6a6a6a6a6a6a6\", \"hex\"); // ### helpers\n\nfunction xor(a, b) {\n  var len = Math.max(a.length, b.length);\n  var result = new Buffer(len);\n\n  for (var idx = 0; len > idx; idx++) {\n    result[idx] = (a[idx] || 0) ^ (b[idx] || 0);\n  }\n\n  return result;\n}\n\nfunction split(input, size) {\n  var output = [];\n\n  for (var idx = 0; input.length > idx; idx += size) {\n    output.push(input.slice(idx, idx + size));\n  }\n\n  return output;\n}\n\nfunction longToBigEndian(input) {\n  var hi = Math.floor(input / 4294967296),\n      lo = input % 4294967296;\n  var output = new Buffer(8);\n  output[0] = 0xff & hi >>> 24;\n  output[1] = 0xff & hi >>> 16;\n  output[2] = 0xff & hi >>> 8;\n  output[3] = 0xff & hi >>> 0;\n  output[4] = 0xff & lo >>> 24;\n  output[5] = 0xff & lo >>> 16;\n  output[6] = 0xff & lo >>> 8;\n  output[7] = 0xff & lo >>> 0;\n  return output;\n}\n\nfunction kwEncryptFN(size) {\n  function commonChecks(key, data) {\n    if (size !== key.length << 3) {\n      throw new Error(\"invalid key size\");\n    }\n\n    if (0 < data.length && 0 !== data.length % 8) {\n      throw new Error(\"invalid data length\");\n    }\n  } // ### 'fallback' implementation -- uses forge\n\n\n  var fallback = function (key, pdata) {\n    try {\n      commonChecks(key, pdata);\n    } catch (err) {\n      return Promise.reject(err);\n    } // setup cipher\n\n\n    var cipher = forge.cipher.createCipher(\"AES\", new DataBuffer(key)); // split input into chunks\n\n    var R = split(pdata, 8);\n    var A, B, count;\n    A = A0;\n\n    for (var jdx = 0; 6 > jdx; jdx++) {\n      for (var idx = 0; R.length > idx; idx++) {\n        count = R.length * jdx + idx + 1;\n        B = Buffer.concat([A, R[idx]]);\n        cipher.start();\n        cipher.update(new DataBuffer(B));\n        cipher.finish();\n        B = cipher.output.native();\n        A = xor(B.slice(0, 8), longToBigEndian(count));\n        R[idx] = B.slice(8, 16);\n      }\n    }\n\n    R = [A].concat(R);\n    var cdata = Buffer.concat(R);\n    return Promise.resolve({\n      data: cdata\n    });\n  }; // ### WebCryptoAPI implementation\n\n\n  var webcrypto = function (key, pdata) {\n    try {\n      commonChecks(key, pdata);\n    } catch (err) {\n      return Promise.reject(err);\n    }\n\n    var alg = {\n      name: \"AES-KW\"\n    };\n    var promise = [helpers.subtleCrypto.importKey(\"raw\", pdata, {\n      name: \"HMAC\",\n      hash: \"SHA-256\"\n    }, true, [\"sign\"]), helpers.subtleCrypto.importKey(\"raw\", key, alg, true, [\"wrapKey\"])];\n    promise = Promise.all(promise);\n    promise = promise.then(function (keys) {\n      return helpers.subtleCrypto.wrapKey(\"raw\", keys[0], // key\n      keys[1], // wrappingKey\n      alg);\n    });\n    promise = promise.then(function (result) {\n      result = new Buffer(result);\n      return {\n        data: result\n      };\n    });\n    return promise;\n  };\n\n  return helpers.setupFallback(null, webcrypto, fallback);\n}\n\nfunction kwDecryptFN(size) {\n  function commonChecks(key, data) {\n    if (size !== key.length << 3) {\n      throw new Error(\"invalid key size\");\n    }\n\n    if (0 < data.length - 8 && 0 !== data.length % 8) {\n      throw new Error(\"invalid data length\");\n    }\n  } // ### 'fallback' implementation -- uses forge\n\n\n  var fallback = function (key, cdata) {\n    try {\n      commonChecks(key, cdata);\n    } catch (err) {\n      return Promise.reject(err);\n    } // setup cipher\n\n\n    var cipher = forge.cipher.createDecipher(\"AES\", new DataBuffer(key)); // prepare inputs\n\n    var R = split(cdata, 8),\n        A,\n        B,\n        count;\n    A = R[0];\n    R = R.slice(1);\n\n    for (var jdx = 5; 0 <= jdx; --jdx) {\n      for (var idx = R.length - 1; 0 <= idx; --idx) {\n        count = R.length * jdx + idx + 1;\n        B = xor(A, longToBigEndian(count));\n        B = Buffer.concat([B, R[idx]]);\n        cipher.start();\n        cipher.update(new DataBuffer(B));\n        cipher.finish();\n        B = cipher.output.native();\n        A = B.slice(0, 8);\n        R[idx] = B.slice(8, 16);\n      }\n    }\n\n    if (A.toString() !== A0.toString()) {\n      return Promise.reject(new Error(\"decryption failed\"));\n    }\n\n    var pdata = Buffer.concat(R);\n    return Promise.resolve(pdata);\n  }; // ### WebCryptoAPI implementation\n\n\n  var webcrypto = function (key, cdata) {\n    try {\n      commonChecks(key, cdata);\n    } catch (err) {\n      return Promise.reject(err);\n    }\n\n    var alg = {\n      name: \"AES-KW\"\n    };\n    var promise = helpers.subtleCrypto.importKey(\"raw\", key, alg, true, [\"unwrapKey\"]);\n    promise = promise.then(function (key) {\n      return helpers.subtleCrypto.unwrapKey(\"raw\", cdata, key, alg, {\n        name: \"HMAC\",\n        hash: \"SHA-256\"\n      }, true, [\"sign\"]);\n    });\n    promise = promise.then(function (result) {\n      // unwrapped CryptoKey -- extract raw\n      return helpers.subtleCrypto.exportKey(\"raw\", result);\n    });\n    promise = promise.then(function (result) {\n      result = new Buffer(result);\n      return result;\n    });\n    return promise;\n  };\n\n  return helpers.setupFallback(null, webcrypto, fallback);\n} // ### Public API\n// * [name].encrypt\n// * [name].decrypt\n\n\nvar aesKw = {};\n[\"A128KW\", \"A192KW\", \"A256KW\"].forEach(function (alg) {\n  var size = parseInt(/A(\\d+)KW/g.exec(alg)[1]);\n  aesKw[alg] = {\n    encrypt: kwEncryptFN(size),\n    decrypt: kwDecryptFN(size)\n  };\n});\nmodule.exports = aesKw;","map":{"version":3,"sources":["/Users/pratison/Work/Cisco/Education/React/education-webex/node_modules/node-jose/lib/algorithms/aes-kw.js"],"names":["helpers","require","forge","DataBuffer","A0","Buffer","xor","a","b","len","Math","max","length","result","idx","split","input","size","output","push","slice","longToBigEndian","hi","floor","lo","kwEncryptFN","commonChecks","key","data","Error","fallback","pdata","err","Promise","reject","cipher","createCipher","R","A","B","count","jdx","concat","start","update","finish","native","cdata","resolve","webcrypto","alg","name","promise","subtleCrypto","importKey","hash","all","then","keys","wrapKey","setupFallback","kwDecryptFN","createDecipher","toString","unwrapKey","exportKey","aesKw","forEach","parseInt","exec","encrypt","decrypt","module","exports"],"mappings":"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","sourcesContent":["/*!\n * algorithms/aes-kw.js - AES-KW Key-Wrapping\n *\n * Copyright (c) 2015 Cisco Systems, Inc.  See LICENSE file.\n */\n\"use strict\";\n\nvar helpers = require(\"./helpers.js\"),\n    forge = require(\"../deps/forge.js\"),\n    DataBuffer = require(\"../util/databuffer.js\");\n\nvar A0 = new Buffer(\"a6a6a6a6a6a6a6a6\", \"hex\");\n\n// ### helpers\nfunction xor(a, b) {\n  var len = Math.max(a.length, b.length);\n  var result = new Buffer(len);\n  for (var idx = 0; len > idx; idx++) {\n    result[idx] = (a[idx] || 0) ^ (b[idx] || 0);\n  }\n  return result;\n}\n\nfunction split(input, size) {\n  var output = [];\n  for (var idx = 0; input.length > idx; idx += size) {\n    output.push(input.slice(idx, idx + size));\n  }\n  return output;\n}\n\nfunction longToBigEndian(input) {\n  var hi = Math.floor(input / 4294967296),\n      lo = input % 4294967296;\n  var output = new Buffer(8);\n  output[0] = 0xff & (hi >>> 24);\n  output[1] = 0xff & (hi >>> 16);\n  output[2] = 0xff & (hi >>> 8);\n  output[3] = 0xff & (hi >>> 0);\n  output[4] = 0xff & (lo >>> 24);\n  output[5] = 0xff & (lo >>> 16);\n  output[6] = 0xff & (lo >>> 8);\n  output[7] = 0xff & (lo >>> 0);\n  return output;\n}\n\nfunction kwEncryptFN(size) {\n  function commonChecks(key, data) {\n    if (size !== (key.length << 3)) {\n      throw new Error(\"invalid key size\");\n    }\n    if (0 < data.length && 0 !== (data.length % 8)) {\n      throw new Error(\"invalid data length\");\n    }\n  }\n\n  // ### 'fallback' implementation -- uses forge\n  var fallback = function(key, pdata) {\n    try {\n      commonChecks(key, pdata);\n    } catch (err) {\n      return Promise.reject(err);\n    }\n\n    // setup cipher\n    var cipher = forge.cipher.createCipher(\"AES\", new DataBuffer(key));\n\n    // split input into chunks\n    var R = split(pdata, 8);\n    var A,\n        B,\n        count;\n    A = A0;\n    for (var jdx = 0; 6 > jdx; jdx++) {\n      for (var idx = 0; R.length > idx; idx++) {\n        count = (R.length * jdx) + idx + 1;\n        B = Buffer.concat([A, R[idx]]);\n        cipher.start();\n        cipher.update(new DataBuffer(B));\n        cipher.finish();\n        B = cipher.output.native();\n\n        A = xor(B.slice(0, 8),\n                longToBigEndian(count));\n        R[idx] = B.slice(8, 16);\n      }\n    }\n    R = [A].concat(R);\n    var cdata = Buffer.concat(R);\n    return Promise.resolve({\n      data: cdata\n    });\n  };\n  // ### WebCryptoAPI implementation\n  var webcrypto = function(key, pdata) {\n    try {\n      commonChecks(key, pdata);\n    } catch (err) {\n      return Promise.reject(err);\n    }\n\n    var alg = {\n      name: \"AES-KW\"\n    };\n    var promise = [\n      helpers.subtleCrypto.importKey(\"raw\", pdata, { name: \"HMAC\", hash: \"SHA-256\" }, true, [\"sign\"]),\n      helpers.subtleCrypto.importKey(\"raw\", key, alg, true, [\"wrapKey\"])\n    ];\n    promise = Promise.all(promise);\n    promise = promise.then(function(keys) {\n      return helpers.subtleCrypto.wrapKey(\"raw\",\n                                          keys[0], // key\n                                          keys[1], // wrappingKey\n                                          alg);\n    });\n    promise = promise.then(function(result) {\n      result = new Buffer(result);\n\n      return {\n        data: result\n      };\n    });\n    return promise;\n  };\n\n  return helpers.setupFallback(null, webcrypto, fallback);\n}\nfunction kwDecryptFN(size) {\n  function commonChecks(key, data) {\n    if (size !== (key.length << 3)) {\n      throw new Error(\"invalid key size\");\n    }\n    if (0 < (data.length - 8) && 0 !== (data.length % 8)) {\n      throw new Error(\"invalid data length\");\n    }\n  }\n\n  // ### 'fallback' implementation -- uses forge\n  var fallback = function(key, cdata) {\n    try {\n      commonChecks(key, cdata);\n    } catch (err) {\n      return Promise.reject(err);\n    }\n\n    // setup cipher\n    var cipher = forge.cipher.createDecipher(\"AES\", new DataBuffer(key));\n\n    // prepare inputs\n    var R = split(cdata, 8),\n        A,\n        B,\n        count;\n    A = R[0];\n    R = R.slice(1);\n    for (var jdx = 5; 0 <= jdx; --jdx) {\n      for (var idx = R.length - 1; 0 <= idx; --idx) {\n        count = (R.length * jdx) + idx + 1;\n        B = xor(A,\n                longToBigEndian(count));\n        B = Buffer.concat([B, R[idx]]);\n        cipher.start();\n        cipher.update(new DataBuffer(B));\n        cipher.finish();\n        B = cipher.output.native();\n\n        A = B.slice(0, 8);\n        R[idx] = B.slice(8, 16);\n      }\n    }\n    if (A.toString() !== A0.toString()) {\n      return Promise.reject(new Error(\"decryption failed\"));\n    }\n    var pdata = Buffer.concat(R);\n    return Promise.resolve(pdata);\n  };\n  // ### WebCryptoAPI implementation\n  var webcrypto = function(key, cdata) {\n    try {\n      commonChecks(key, cdata);\n    } catch (err) {\n      return Promise.reject(err);\n    }\n\n    var alg = {\n      name: \"AES-KW\"\n    };\n    var promise = helpers.subtleCrypto.importKey(\"raw\", key, alg, true, [\"unwrapKey\"]);\n    promise = promise.then(function(key) {\n      return helpers.subtleCrypto.unwrapKey(\"raw\", cdata, key, alg, {name: \"HMAC\", hash: \"SHA-256\"}, true, [\"sign\"]);\n    });\n    promise = promise.then(function(result) {\n      // unwrapped CryptoKey -- extract raw\n      return helpers.subtleCrypto.exportKey(\"raw\", result);\n    });\n    promise = promise.then(function(result) {\n      result = new Buffer(result);\n      return result;\n    });\n    return promise;\n  };\n\n  return helpers.setupFallback(null, webcrypto, fallback);\n}\n\n// ### Public API\n// * [name].encrypt\n// * [name].decrypt\nvar aesKw = {};\n[\n  \"A128KW\",\n  \"A192KW\",\n  \"A256KW\"\n].forEach(function(alg) {\n  var size = parseInt(/A(\\d+)KW/g.exec(alg)[1]);\n  aesKw[alg] = {\n    encrypt: kwEncryptFN(size),\n    decrypt: kwDecryptFN(size)\n  };\n});\n\nmodule.exports = aesKw;\n"]},"metadata":{},"sourceType":"script"}