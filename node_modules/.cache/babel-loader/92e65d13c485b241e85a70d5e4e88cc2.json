{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _loggerConfig = require('./logger-config');\n\nvar _loggerConfig2 = _interopRequireDefault(_loggerConfig);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar LoggerProxy = {\n  logger: {\n    info: function info() {\n      console.error('LoggerProxy->info#NO LOGGER DEFINED');\n    },\n    log: function log() {\n      console.error('LoggerProxy->log#NO LOGGER DEFINED');\n    },\n    error: function error() {\n      console.error('LoggerProxy->error#NO LOGGER DEFINED');\n    },\n    warn: function warn() {\n      console.error('LoggerProxy->warn#NO LOGGER DEFINED');\n    },\n    trace: function trace() {\n      console.error('LoggerProxy->trace#NO LOGGER DEFINED');\n    },\n    debug: function debug() {\n      console.error('LoggerProxy->debug#NO LOGGER DEFINED');\n    }\n  }\n};\n\nLoggerProxy.set = function (logger) {\n  if (!_loggerConfig2.default.enable) {\n    LoggerProxy.logger = {\n      info: function info() {},\n      log: function log() {},\n      error: function error() {},\n      warn: function warn() {},\n      trace: function trace() {},\n      debug: function debug() {}\n    };\n  }\n\n  LoggerProxy.logger = logger;\n};\n\nLoggerProxy.get = function () {\n  return LoggerProxy.logger;\n};\n\nexports.default = LoggerProxy;","map":{"version":3,"sources":["logger-proxy.js"],"names":["LoggerProxy","logger","info","console","log","error","warn","trace","debug","LoggerConfig"],"mappings":";;;;;;AAAA,IAAA,aAAA,GAAA,OAAA,CAAA,iBAAA,CAAA;;;;;;;;;;AAEA,IAAMA,WAAAA,GAAc;AAClBC,EAAAA,MAAAA,EAAQ;AACNC,IAAAA,IAAAA,EAAM,SAAA,IAAA,GAAM;AAAEC,MAAAA,OAAAA,CAAAA,KAAAA,CAAAA,qCAAAA;AADR,KAAA;AAENC,IAAAA,GAAAA,EAAK,SAAA,GAAA,GAAM;AAAED,MAAAA,OAAAA,CAAAA,KAAAA,CAAAA,oCAAAA;AAFP,KAAA;AAGNE,IAAAA,KAAAA,EAAO,SAAA,KAAA,GAAM;AAAEF,MAAAA,OAAAA,CAAAA,KAAAA,CAAAA,sCAAAA;AAHT,KAAA;AAING,IAAAA,IAAAA,EAAM,SAAA,IAAA,GAAM;AAAEH,MAAAA,OAAAA,CAAAA,KAAAA,CAAAA,qCAAAA;AAJR,KAAA;AAKNI,IAAAA,KAAAA,EAAO,SAAA,KAAA,GAAM;AAAEJ,MAAAA,OAAAA,CAAAA,KAAAA,CAAAA,sCAAAA;AALT,KAAA;AAMNK,IAAAA,KAAAA,EAAO,SAAA,KAAA,GAAM;AAAEL,MAAAA,OAAAA,CAAAA,KAAAA,CAAAA,sCAAAA;AAAwD;AANjE;AADU,CAApB;;AAWAH,WAAAA,CAAAA,GAAAA,GAAkB,UAAA,MAAA,EAAY;AAC5B,MAAI,CAACS,cAAAA,CAAAA,OAAAA,CAAL,MAAA,EAA0B;AACxBT,IAAAA,WAAAA,CAAAA,MAAAA,GAAqB;AACnBE,MAAAA,IAAAA,EAAM,SAAA,IAAA,GAAM,CADO,CAAA;AAEnBE,MAAAA,GAAAA,EAAK,SAAA,GAAA,GAAM,CAFQ,CAAA;AAGnBC,MAAAA,KAAAA,EAAO,SAAA,KAAA,GAAM,CAHM,CAAA;AAInBC,MAAAA,IAAAA,EAAM,SAAA,IAAA,GAAM,CAJO,CAAA;AAKnBC,MAAAA,KAAAA,EAAO,SAAA,KAAA,GAAM,CALM,CAAA;AAMnBC,MAAAA,KAAAA,EAAO,SAAA,KAAA,GAAM,CAAE;AANI,KAArBR;AAQD;;AACDA,EAAAA,WAAAA,CAAAA,MAAAA,GAAAA,MAAAA;AAXFA,CAAAA;;AAcAA,WAAAA,CAAAA,GAAAA,GAAkB,YAAA;AAAA,SAAMA,WAAAA,CAAN,MAAA;AAAlBA,CAAAA;;kBAEeA,W","sourcesContent":["import LoggerConfig from './logger-config';\n\nconst LoggerProxy = {\n  logger: {\n    info: () => { console.error('LoggerProxy->info#NO LOGGER DEFINED'); },\n    log: () => { console.error('LoggerProxy->log#NO LOGGER DEFINED'); },\n    error: () => { console.error('LoggerProxy->error#NO LOGGER DEFINED'); },\n    warn: () => { console.error('LoggerProxy->warn#NO LOGGER DEFINED'); },\n    trace: () => { console.error('LoggerProxy->trace#NO LOGGER DEFINED'); },\n    debug: () => { console.error('LoggerProxy->debug#NO LOGGER DEFINED'); }\n  }\n};\n\nLoggerProxy.set = (logger) => {\n  if (!LoggerConfig.enable) {\n    LoggerProxy.logger = {\n      info: () => {},\n      log: () => {},\n      error: () => {},\n      warn: () => {},\n      trace: () => {},\n      debug: () => {}\n    };\n  }\n  LoggerProxy.logger = logger;\n};\n\nLoggerProxy.get = () => LoggerProxy.logger;\n\nexport default LoggerProxy;\n"]},"metadata":{},"sourceType":"script"}