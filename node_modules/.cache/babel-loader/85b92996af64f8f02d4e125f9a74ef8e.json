{"ast":null,"code":"function padString(input) {\n  var segmentLength = 4;\n  var stringLength = input.length;\n  var diff = stringLength % segmentLength;\n\n  if (!diff) {\n    return input;\n  }\n\n  var position = stringLength;\n  var padLength = segmentLength - diff;\n  var paddedStringLength = stringLength + padLength;\n  var buffer = Buffer.alloc(paddedStringLength);\n  buffer.write(input);\n\n  while (padLength--) {\n    buffer.write('=', position++);\n  }\n\n  return buffer.toString();\n}\n\nfunction encode(input, encoding) {\n  if (encoding === void 0) {\n    encoding = 'utf8';\n  }\n\n  if (Buffer.isBuffer(input)) {\n    return fromBase64(input.toString('base64'));\n  }\n\n  return fromBase64(Buffer.from(input, encoding).toString('base64'));\n}\n\nfunction decode(base64url, encoding) {\n  if (encoding === void 0) {\n    encoding = 'utf8';\n  }\n\n  return Buffer.from(toBase64(base64url), 'base64').toString(encoding);\n}\n\nfunction toBase64(base64url) {\n  base64url = base64url.toString();\n  return padString(base64url).replace(/\\-/g, '+').replace(/_/g, '/');\n}\n\nfunction fromBase64(base64) {\n  return base64.replace(/=/g, '').replace(/\\+/g, '-').replace(/\\//g, '_');\n}\n\nfunction toBuffer(base64url) {\n  return Buffer.from(toBase64(base64url), 'base64');\n}\n\nvar b64u = encode;\nb64u.encode = encode;\nb64u.decode = decode;\nb64u.toBase64 = toBase64;\nb64u.fromBase64 = fromBase64;\nb64u.toBuffer = toBuffer;\nexport default b64u;","map":{"version":3,"sources":["/Users/pratison/Work/Cisco/Education/React/education-webex/node_modules/b64u/dist/b64u.m.js"],"names":["padString","input","segmentLength","stringLength","length","diff","position","padLength","paddedStringLength","buffer","Buffer","alloc","write","toString","encode","encoding","isBuffer","fromBase64","from","decode","base64url","toBase64","replace","base64","toBuffer","b64u"],"mappings":"AAAA,SAASA,SAAT,CAAmBC,KAAnB,EAA0B;AACtB,MAAIC,aAAa,GAAG,CAApB;AACA,MAAIC,YAAY,GAAGF,KAAK,CAACG,MAAzB;AACA,MAAIC,IAAI,GAAGF,YAAY,GAAGD,aAA1B;;AACA,MAAI,CAACG,IAAL,EAAW;AACP,WAAOJ,KAAP;AACH;;AACD,MAAIK,QAAQ,GAAGH,YAAf;AACA,MAAII,SAAS,GAAGL,aAAa,GAAGG,IAAhC;AACA,MAAIG,kBAAkB,GAAGL,YAAY,GAAGI,SAAxC;AACA,MAAIE,MAAM,GAAGC,MAAM,CAACC,KAAP,CAAaH,kBAAb,CAAb;AACAC,EAAAA,MAAM,CAACG,KAAP,CAAaX,KAAb;;AACA,SAAOM,SAAS,EAAhB,EAAoB;AAChBE,IAAAA,MAAM,CAACG,KAAP,CAAa,GAAb,EAAkBN,QAAQ,EAA1B;AACH;;AACD,SAAOG,MAAM,CAACI,QAAP,EAAP;AACH;;AACD,SAASC,MAAT,CAAgBb,KAAhB,EAAuBc,QAAvB,EAAiC;AAC7B,MAAIA,QAAQ,KAAK,KAAK,CAAtB,EAAyB;AAAEA,IAAAA,QAAQ,GAAG,MAAX;AAAoB;;AAC/C,MAAIL,MAAM,CAACM,QAAP,CAAgBf,KAAhB,CAAJ,EAA4B;AACxB,WAAOgB,UAAU,CAAChB,KAAK,CAACY,QAAN,CAAe,QAAf,CAAD,CAAjB;AACH;;AACD,SAAOI,UAAU,CAACP,MAAM,CAACQ,IAAP,CAAYjB,KAAZ,EAAmBc,QAAnB,EAA6BF,QAA7B,CAAsC,QAAtC,CAAD,CAAjB;AACH;;AACD,SAASM,MAAT,CAAgBC,SAAhB,EAA2BL,QAA3B,EAAqC;AACjC,MAAIA,QAAQ,KAAK,KAAK,CAAtB,EAAyB;AAAEA,IAAAA,QAAQ,GAAG,MAAX;AAAoB;;AAC/C,SAAOL,MAAM,CAACQ,IAAP,CAAYG,QAAQ,CAACD,SAAD,CAApB,EAAiC,QAAjC,EAA2CP,QAA3C,CAAoDE,QAApD,CAAP;AACH;;AACD,SAASM,QAAT,CAAkBD,SAAlB,EAA6B;AACzBA,EAAAA,SAAS,GAAGA,SAAS,CAACP,QAAV,EAAZ;AACA,SAAOb,SAAS,CAACoB,SAAD,CAAT,CACFE,OADE,CACM,KADN,EACa,GADb,EAEFA,OAFE,CAEM,IAFN,EAEY,GAFZ,CAAP;AAGH;;AACD,SAASL,UAAT,CAAoBM,MAApB,EAA4B;AACxB,SAAOA,MAAM,CACRD,OADE,CACM,IADN,EACY,EADZ,EAEFA,OAFE,CAEM,KAFN,EAEa,GAFb,EAGFA,OAHE,CAGM,KAHN,EAGa,GAHb,CAAP;AAIH;;AACD,SAASE,QAAT,CAAkBJ,SAAlB,EAA6B;AACzB,SAAOV,MAAM,CAACQ,IAAP,CAAYG,QAAQ,CAACD,SAAD,CAApB,EAAiC,QAAjC,CAAP;AACH;;AACD,IAAIK,IAAI,GAAGX,MAAX;AACAW,IAAI,CAACX,MAAL,GAAcA,MAAd;AACAW,IAAI,CAACN,MAAL,GAAcA,MAAd;AACAM,IAAI,CAACJ,QAAL,GAAgBA,QAAhB;AACAI,IAAI,CAACR,UAAL,GAAkBA,UAAlB;AACAQ,IAAI,CAACD,QAAL,GAAgBA,QAAhB;AACA,eAAeC,IAAf","sourcesContent":["function padString(input) {\n    var segmentLength = 4;\n    var stringLength = input.length;\n    var diff = stringLength % segmentLength;\n    if (!diff) {\n        return input;\n    }\n    var position = stringLength;\n    var padLength = segmentLength - diff;\n    var paddedStringLength = stringLength + padLength;\n    var buffer = Buffer.alloc(paddedStringLength);\n    buffer.write(input);\n    while (padLength--) {\n        buffer.write('=', position++);\n    }\n    return buffer.toString();\n}\nfunction encode(input, encoding) {\n    if (encoding === void 0) { encoding = 'utf8'; }\n    if (Buffer.isBuffer(input)) {\n        return fromBase64(input.toString('base64'));\n    }\n    return fromBase64(Buffer.from(input, encoding).toString('base64'));\n}\nfunction decode(base64url, encoding) {\n    if (encoding === void 0) { encoding = 'utf8'; }\n    return Buffer.from(toBase64(base64url), 'base64').toString(encoding);\n}\nfunction toBase64(base64url) {\n    base64url = base64url.toString();\n    return padString(base64url)\n        .replace(/\\-/g, '+')\n        .replace(/_/g, '/');\n}\nfunction fromBase64(base64) {\n    return base64\n        .replace(/=/g, '')\n        .replace(/\\+/g, '-')\n        .replace(/\\//g, '_');\n}\nfunction toBuffer(base64url) {\n    return Buffer.from(toBase64(base64url), 'base64');\n}\nvar b64u = encode;\nb64u.encode = encode;\nb64u.decode = decode;\nb64u.toBase64 = toBase64;\nb64u.fromBase64 = fromBase64;\nb64u.toBuffer = toBuffer;\nexport default b64u;\n"]},"metadata":{},"sourceType":"module"}