{"ast":null,"code":"var _jsxFileName = \"/Users/pratison/Work/Cisco/Education/React/education-webex/src/pages/FileUpload.js\";\nimport React from 'react';\nimport { Avatar, Button } from '@momentum-ui/react';\nimport readXlsxFile from 'read-excel-file';\nimport Header from './Header.js';\n\nclass FileUpload extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      uploadedFile: null,\n      studentList: null,\n      lastIndex: 1\n    };\n    this.fileRef = React.createRef();\n    this.uploadClicked = this.uploadClicked.bind(this);\n    this.onSelectFile = this.onSelectFile.bind(this);\n    this.saveClick = this.saveClick.bind(this);\n    this.cancelClick = this.cancelClick.bind(this);\n  }\n\n  componentDidMount(props) {\n    const fileObj = this.props.location.uploadedFile;\n    const studentObj = this.props.location.studentList;\n\n    if (fileObj !== undefined) {\n      this.setState({\n        uploadedFile: fileObj\n      });\n    }\n\n    if (studentObj !== undefined) {\n      this.setState({\n        studentList: studentObj\n      });\n    }\n  }\n\n  uploadClicked(e) {\n    console.log(this.state.uploadedFile);\n\n    if (this.state.uploadedFile === null) {\n      this.fileRef.current.click();\n    } else {\n      this.setState({\n        uploadedFile: null\n      });\n    }\n  }\n\n  onSelectFile(e) {\n    e.stopPropagation();\n    e.preventDefault();\n    var file = e.target.files[0];\n    this.setState({\n      uploadedFile: file.name\n    });\n    const schema = {\n      'First Name': {\n        prop: 'firstName',\n        type: String,\n        required: true\n      },\n      'Last Name': {\n        prop: 'lastName',\n        type: String,\n        required: true\n      },\n      'Email': {\n        prop: 'email',\n        type: String,\n        required: true\n      }\n    };\n    readXlsxFile(file, {\n      schema\n    }).then(({\n      rows,\n      errors\n    }) => {\n      if (errors.length === 0) {\n        const students = rows.map(item => {\n          item.studentId = this.state.lastIndex;\n          this.setState({\n            lastIndex: this.state.lastIndex + 1\n          });\n          return item;\n        });\n        this.setState({\n          studentList: students\n        });\n      } else {\n        alert('Invalid file. Kindly follow file Template!');\n      }\n    });\n  }\n\n  downloadClicked(e) {\n    window.location.href = `${process.env.PUBLIC_URL}/studentList.xlsx`;\n  }\n\n  cancelClick(e) {\n    this.props.history.push({\n      pathname: '/classroomSetup',\n      classObj: this.props.location.classObj,\n      studentList: this.state.studentList,\n      uploadedFile: this.state.uploadedFile\n    });\n  }\n\n  saveClick(e) {\n    this.props.history.push({\n      pathname: '/addStudents',\n      classObj: this.props.location.classObj,\n      studentList: this.state.studentList,\n      uploadedFile: this.state.uploadedFile\n    });\n  }\n\n  render() {\n    const hideGrid = {\n      marginTop: 20\n    };\n    let uploadedFile = this.state.uploadedFile;\n    const fileObj = this.props.location.uploadedFile;\n\n    if (fileObj !== undefined) {\n      uploadedFile = fileObj;\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"grid\",\n      style: {\n        paddingTop: 20\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      tab: \"file\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row large-offset-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"columns large-6\",\n      style: hideGrid,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      style: {\n        marginLeft: 10\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        fontSize: 16\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 29\n      }\n    }, \"Upload Students information from an excel file (.XLS or .XLSX). Files must adhere to the format shown to the right.\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      style: {\n        marginTop: 30,\n        marginLeft: 10\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"t\", {\n      style: uploadedFile === null ? {\n        display: \"none\"\n      } : {\n        marginRight: 20\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 29\n      }\n    }, uploadedFile), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"file\",\n      ref: this.fileRef,\n      style: {\n        display: \"none\"\n      },\n      onChange: this.onSelectFile,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      children: uploadedFile === null ? 'Upload from file' : 'Delete',\n      color: \"blue\",\n      onClick: this.uploadClicked,\n      ariaPressed: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      children: \"Download Template\",\n      color: \"blue-outline\",\n      onClick: this.downloadClicked,\n      ariaPressed: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 31\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"columns large-6\",\n      style: hideGrid,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      alt: \"fileImageHolder\",\n      src: \"fileImageHolder.png\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row large-offset-1\",\n      style: {\n        marginTop: 40,\n        marginLeft: 10\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"large-2 columns\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      children: \"Back\",\n      color: \"blue-outline\",\n      onClick: this.cancelClick,\n      style: {\n        color: 'blue',\n        borderRadius: 5\n      },\n      ariaPressed: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"large-1 columns\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      children: \"Continue\",\n      color: \"blue\",\n      onClick: this.saveClick,\n      ariaPressed: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 25\n      }\n    }))));\n  }\n\n}\n\nexport default FileUpload;","map":{"version":3,"sources":["/Users/pratison/Work/Cisco/Education/React/education-webex/src/pages/FileUpload.js"],"names":["React","Avatar","Button","readXlsxFile","Header","FileUpload","Component","constructor","props","state","uploadedFile","studentList","lastIndex","fileRef","createRef","uploadClicked","bind","onSelectFile","saveClick","cancelClick","componentDidMount","fileObj","location","studentObj","undefined","setState","e","console","log","current","click","stopPropagation","preventDefault","file","target","files","name","schema","prop","type","String","required","then","rows","errors","length","students","map","item","studentId","alert","downloadClicked","window","href","process","env","PUBLIC_URL","history","push","pathname","classObj","render","hideGrid","marginTop","paddingTop","marginLeft","fontSize","display","marginRight","color","borderRadius"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EACQC,MADR,QAEO,oBAFP;AAGA,OAAOC,YAAP,MAAyB,iBAAzB;AACA,OAAOC,MAAP,MAAmB,aAAnB;;AAEA,MAAMC,UAAN,SAAyBL,KAAK,CAACM,SAA/B,CAAyC;AACrCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACTC,MAAAA,YAAY,EAAE,IADL;AAETC,MAAAA,WAAW,EAAE,IAFJ;AAGTC,MAAAA,SAAS,EAAE;AAHF,KAAb;AAKA,SAAKC,OAAL,GAAeb,KAAK,CAACc,SAAN,EAAf;AACA,SAAKC,aAAL,GAAqB,KAAKA,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB,CAArB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKE,SAAL,GAAiB,KAAKA,SAAL,CAAeF,IAAf,CAAoB,IAApB,CAAjB;AACA,SAAKG,WAAL,GAAmB,KAAKA,WAAL,CAAiBH,IAAjB,CAAsB,IAAtB,CAAnB;AACH;;AAEAI,EAAAA,iBAAiB,CAACZ,KAAD,EAAQ;AACrB,UAAMa,OAAO,GAAG,KAAKb,KAAL,CAAWc,QAAX,CAAoBZ,YAApC;AACA,UAAMa,UAAU,GAAG,KAAKf,KAAL,CAAWc,QAAX,CAAoBX,WAAvC;;AACA,QAAIU,OAAO,KAAKG,SAAhB,EAA2B;AACvB,WAAKC,QAAL,CAAc;AAAEf,QAAAA,YAAY,EAAEW;AAAhB,OAAd;AACH;;AACD,QAAIE,UAAU,KAAKC,SAAnB,EAA8B;AAC1B,WAAKC,QAAL,CAAc;AAAEd,QAAAA,WAAW,EAAEY;AAAf,OAAd;AACH;AACJ;;AAEFR,EAAAA,aAAa,CAACW,CAAD,EAAI;AACbC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKnB,KAAL,CAAWC,YAAvB;;AACA,QAAI,KAAKD,KAAL,CAAWC,YAAX,KAA4B,IAAhC,EAAuC;AACnC,WAAKG,OAAL,CAAagB,OAAb,CAAqBC,KAArB;AACH,KAFD,MAEO;AACH,WAAKL,QAAL,CAAc;AACVf,QAAAA,YAAY,EAAE;AADJ,OAAd;AAGH;AACJ;;AAEDO,EAAAA,YAAY,CAACS,CAAD,EAAI;AACZA,IAAAA,CAAC,CAACK,eAAF;AACAL,IAAAA,CAAC,CAACM,cAAF;AACA,QAAIC,IAAI,GAAGP,CAAC,CAACQ,MAAF,CAASC,KAAT,CAAe,CAAf,CAAX;AACA,SAAKV,QAAL,CAAc;AACVf,MAAAA,YAAY,EAAEuB,IAAI,CAACG;AADT,KAAd;AAGA,UAAMC,MAAM,GAAG;AACC,oBAAc;AACVC,QAAAA,IAAI,EAAE,WADI;AAEVC,QAAAA,IAAI,EAAEC,MAFI;AAGVC,QAAAA,QAAQ,EAAE;AAHA,OADf;AAMC,mBAAa;AACTH,QAAAA,IAAI,EAAE,UADG;AAETC,QAAAA,IAAI,EAAEC,MAFG;AAGTC,QAAAA,QAAQ,EAAE;AAHD,OANd;AAWC,eAAS;AACLH,QAAAA,IAAI,EAAE,OADD;AAELC,QAAAA,IAAI,EAAEC,MAFD;AAGLC,QAAAA,QAAQ,EAAE;AAHL;AAXV,KAAf;AAiBAtC,IAAAA,YAAY,CAAC8B,IAAD,EAAO;AAAEI,MAAAA;AAAF,KAAP,CAAZ,CACCK,IADD,CACM,CAAC;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,KAAD,KAAsB;AACxB,UAAIA,MAAM,CAACC,MAAP,KAAkB,CAAtB,EAAyB;AACrB,cAAMC,QAAQ,GAAGH,IAAI,CAACI,GAAL,CAASC,IAAI,IAAI;AAC9BA,UAAAA,IAAI,CAACC,SAAL,GAAiB,KAAKxC,KAAL,CAAWG,SAA5B;AACA,eAAKa,QAAL,CAAc;AAAEb,YAAAA,SAAS,EAAE,KAAKH,KAAL,CAAWG,SAAX,GAAuB;AAApC,WAAd;AACA,iBAAOoC,IAAP;AACH,SAJgB,CAAjB;AAMA,aAAKvB,QAAL,CAAc;AACZd,UAAAA,WAAW,EAAEmC;AADD,SAAd;AAGH,OAVD,MAUO;AACHI,QAAAA,KAAK,CAAC,4CAAD,CAAL;AACH;AACJ,KAfD;AAgBH;;AAEDC,EAAAA,eAAe,CAACzB,CAAD,EAAI;AACf0B,IAAAA,MAAM,CAAC9B,QAAP,CAAgB+B,IAAhB,GAAsB,GAAEC,OAAO,CAACC,GAAR,CAAYC,UAAW,mBAA/C;AACH;;AAEDrC,EAAAA,WAAW,CAACO,CAAD,EAAI;AACX,SAAKlB,KAAL,CAAWiD,OAAX,CAAmBC,IAAnB,CAAwB;AACpBC,MAAAA,QAAQ,EAAE,iBADU;AAEpBC,MAAAA,QAAQ,EAAE,KAAKpD,KAAL,CAAWc,QAAX,CAAoBsC,QAFV;AAGpBjD,MAAAA,WAAW,EAAE,KAAKF,KAAL,CAAWE,WAHJ;AAIpBD,MAAAA,YAAY,EAAE,KAAKD,KAAL,CAAWC;AAJL,KAAxB;AAMH;;AAEDQ,EAAAA,SAAS,CAACQ,CAAD,EAAI;AACT,SAAKlB,KAAL,CAAWiD,OAAX,CAAmBC,IAAnB,CAAwB;AACpBC,MAAAA,QAAQ,EAAE,cADU;AAEpBC,MAAAA,QAAQ,EAAE,KAAKpD,KAAL,CAAWc,QAAX,CAAoBsC,QAFV;AAGpBjD,MAAAA,WAAW,EAAE,KAAKF,KAAL,CAAWE,WAHJ;AAIpBD,MAAAA,YAAY,EAAE,KAAKD,KAAL,CAAWC;AAJL,KAAxB;AAMH;;AAEDmD,EAAAA,MAAM,GAAG;AACL,UAAMC,QAAQ,GAAG;AACbC,MAAAA,SAAS,EAAE;AADE,KAAjB;AAIA,QAAIrD,YAAY,GAAG,KAAKD,KAAL,CAAWC,YAA9B;AACA,UAAMW,OAAO,GAAG,KAAKb,KAAL,CAAWc,QAAX,CAAoBZ,YAApC;;AACA,QAAIW,OAAO,KAAKG,SAAhB,EAA2B;AACvBd,MAAAA,YAAY,GAAGW,OAAf;AACH;;AAED,wBACI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAsB,MAAA,KAAK,EAAE;AAAC2C,QAAAA,UAAU,EAAC;AAAZ,OAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,MAAD;AAAQ,MAAA,GAAG,EAAC,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAiC,MAAA,KAAK,EAAEF,QAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAqB,MAAA,KAAK,EAAE;AAACG,QAAAA,UAAU,EAAE;AAAb,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAG,MAAA,KAAK,EAAE;AAACC,QAAAA,QAAQ,EAAC;AAAV,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6HADJ,CADJ,eAKI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAqB,MAAA,KAAK,EAAE;AAACH,QAAAA,SAAS,EAAE,EAAZ;AAAgBE,QAAAA,UAAU,EAAE;AAA5B,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAG,MAAA,KAAK,EAAEvD,YAAY,KAAK,IAAjB,GAAwB;AAACyD,QAAAA,OAAO,EAAE;AAAV,OAAxB,GAA4C;AAACC,QAAAA,WAAW,EAAE;AAAd,OAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0E1D,YAA1E,CADJ,eAEI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,GAAG,EAAE,KAAKG,OAA7B;AAAsC,MAAA,KAAK,EAAE;AAACsD,QAAAA,OAAO,EAAE;AAAV,OAA7C;AAAgE,MAAA,QAAQ,EAAE,KAAKlD,YAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,eAGI,oBAAC,MAAD;AACI,MAAA,QAAQ,EAAEP,YAAY,KAAK,IAAjB,GAAwB,kBAAxB,GAA6C,QAD3D;AAEI,MAAA,KAAK,EAAC,MAFV;AAGI,MAAA,OAAO,EAAE,KAAKK,aAHlB;AAII,MAAA,WAAW,EAAE,KAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,eASM,oBAAC,MAAD;AACI,MAAA,QAAQ,EAAC,mBADb;AAEI,MAAA,KAAK,EAAC,cAFV;AAGI,MAAA,OAAO,EAAE,KAAKoC,eAHlB;AAII,MAAA,WAAW,EAAE,KAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATN,CALJ,CADJ,eAuBI;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAiC,MAAA,KAAK,EAAEW,QAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAM,MAAA,GAAG,EAAC,iBAAV;AAA4B,MAAA,GAAG,EAAC,qBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAvBJ,CAFJ,eA6BI;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAoC,MAAA,KAAK,EAAE;AAACC,QAAAA,SAAS,EAAC,EAAX;AAAeE,QAAAA,UAAU,EAAC;AAA1B,OAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,MAAD;AACI,MAAA,QAAQ,EAAC,MADb;AAEI,MAAA,KAAK,EAAC,cAFV;AAGI,MAAA,OAAO,EAAE,KAAK9C,WAHlB;AAII,MAAA,KAAK,EAAE;AAACkD,QAAAA,KAAK,EAAC,MAAP;AAAcC,QAAAA,YAAY,EAAC;AAA3B,OAJX;AAKI,MAAA,WAAW,EAAE,KALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,eAUI;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,MAAD;AACI,MAAA,QAAQ,EAAC,UADb;AAEI,MAAA,KAAK,EAAC,MAFV;AAGI,MAAA,OAAO,EAAE,KAAKpD,SAHlB;AAII,MAAA,WAAW,EAAE,KAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAVJ,CA7BJ,CADJ;AAmDH;;AApKoC;;AAuKzC,eAAeb,UAAf","sourcesContent":["import React from 'react';\nimport { Avatar,\n        Button,\n} from '@momentum-ui/react';\nimport readXlsxFile from 'read-excel-file'\nimport Header from './Header.js';\n\nclass FileUpload extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            uploadedFile: null,\n            studentList: null,\n            lastIndex: 1,\n        }\n        this.fileRef = React.createRef();\n        this.uploadClicked = this.uploadClicked.bind(this);\n        this.onSelectFile = this.onSelectFile.bind(this);\n        this.saveClick = this.saveClick.bind(this);\n        this.cancelClick = this.cancelClick.bind(this);\n    }\n\n     componentDidMount(props) {\n         const fileObj = this.props.location.uploadedFile;\n         const studentObj = this.props.location.studentList;\n         if (fileObj !== undefined) {\n             this.setState({ uploadedFile: fileObj });\n         }\n         if (studentObj !== undefined) {\n             this.setState({ studentList: studentObj });\n         }\n     }\n\n    uploadClicked(e) {\n        console.log(this.state.uploadedFile);\n        if (this.state.uploadedFile === null ) {\n            this.fileRef.current.click();\n        } else {\n            this.setState({\n                uploadedFile: null,\n            });\n        }\n    }\n\n    onSelectFile(e) {\n        e.stopPropagation();\n        e.preventDefault();\n        var file = e.target.files[0];\n        this.setState({\n            uploadedFile: file.name,\n        });\n        const schema = {\n                        'First Name': {\n                            prop: 'firstName',\n                            type: String,\n                            required: true\n                        },\n                        'Last Name': {\n                            prop: 'lastName',\n                            type: String,\n                            required: true\n                        },\n                        'Email': {\n                            prop: 'email',\n                            type: String,\n                            required: true\n                        },\n                    }\n        readXlsxFile(file, { schema })\n        .then(({ rows, errors }) => {\n            if (errors.length === 0) {\n                const students = rows.map(item => {\n                    item.studentId = this.state.lastIndex;\n                    this.setState({ lastIndex: this.state.lastIndex + 1 });\n                    return item;\n                });\n\n                this.setState({\n                  studentList: students\n                });\n            } else {\n                alert('Invalid file. Kindly follow file Template!')\n            }\n        });\n    }\n\n    downloadClicked(e) {\n        window.location.href=`${process.env.PUBLIC_URL}/studentList.xlsx`;\n    }\n\n    cancelClick(e) {\n        this.props.history.push({\n            pathname: '/classroomSetup',\n            classObj: this.props.location.classObj,\n            studentList: this.state.studentList,\n            uploadedFile: this.state.uploadedFile,\n        });\n    }\n\n    saveClick(e) {\n        this.props.history.push({\n            pathname: '/addStudents',\n            classObj: this.props.location.classObj,\n            studentList: this.state.studentList,\n            uploadedFile: this.state.uploadedFile,\n        });\n    }\n\n    render() {\n        const hideGrid = {\n            marginTop: 20\n        };\n\n        let uploadedFile = this.state.uploadedFile;\n        const fileObj = this.props.location.uploadedFile;\n        if (fileObj !== undefined) {\n            uploadedFile = fileObj;\n        }\n\n        return (\n            <div className=\"grid\" style={{paddingTop:20}}>\n                <Header tab='file'/>\n                <div className=\"row large-offset-1\">\n                    <div className=\"columns large-6\" style={hideGrid}>\n                        <div className=\"row\" style={{marginLeft: 10}}>\n                            <p style={{fontSize:16}}>Upload Students information from an excel file (.XLS or .XLSX). Files\n                            must adhere to the format shown to the right.</p>\n                        </div>\n                        <div className=\"row\" style={{marginTop: 30, marginLeft: 10}}>\n                            <t style={uploadedFile === null ? {display: \"none\"} : {marginRight: 20}}>{uploadedFile}</t>\n                            <input type=\"file\" ref={this.fileRef} style={{display: \"none\"}} onChange={this.onSelectFile}/>\n                            <Button\n                                children={uploadedFile === null ? 'Upload from file' : 'Delete'}\n                                color='blue'\n                                onClick={this.uploadClicked}\n                                ariaPressed={false}\n                              />\n                              <Button\n                                  children='Download Template'\n                                  color='blue-outline'\n                                  onClick={this.downloadClicked}\n                                  ariaPressed={false}\n                                />\n                         </div>\n                    </div>\n                    <div className=\"columns large-6\" style={hideGrid}>\n                        <img  alt=\"fileImageHolder\" src=\"fileImageHolder.png\"/>\n                    </div>\n                </div>\n                <div className=\"row large-offset-1\" style={{marginTop:40, marginLeft:10}}>\n                    <div className=\"large-2 columns\">\n                        <Button\n                            children='Back'\n                            color='blue-outline'\n                            onClick={this.cancelClick}\n                            style={{color:'blue',borderRadius:5}}\n                            ariaPressed={false}\n                          />\n                    </div>\n                    <div className=\"large-1 columns\">\n                        <Button\n                            children='Continue'\n                            color='blue'\n                            onClick={this.saveClick}\n                            ariaPressed={false}\n                          />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default FileUpload;\n"]},"metadata":{},"sourceType":"module"}