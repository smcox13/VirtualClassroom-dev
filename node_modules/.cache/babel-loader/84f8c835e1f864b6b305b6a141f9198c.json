{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.filterEscapeSync = exports.filterEscape = exports.filterSync = exports.filter = exports.escapeSync = exports.escape = undefined;\n\nvar _keys = require('babel-runtime/core-js/object/keys');\n\nvar _keys2 = _interopRequireDefault(_keys);\n\nvar _promise = require('babel-runtime/core-js/promise');\n\nvar _promise2 = _interopRequireDefault(_promise);\n\nvar _reduce2 = require('lodash/reduce');\n\nvar _reduce3 = _interopRequireDefault(_reduce2);\n\nvar _includes2 = require('lodash/includes');\n\nvar _includes3 = _interopRequireDefault(_includes2);\n\nvar _forEach2 = require('lodash/forEach');\n\nvar _forEach3 = _interopRequireDefault(_forEach2);\n\nvar _curry2 = require('lodash/curry');\n\nvar _curry3 = _interopRequireDefault(_curry2);\n\nvar _htmlBase = require('./html-base');\n\nObject.defineProperty(exports, 'escape', {\n  enumerable: true,\n  get: function get() {\n    return _htmlBase.escape;\n  }\n});\nObject.defineProperty(exports, 'escapeSync', {\n  enumerable: true,\n  get: function get() {\n    return _htmlBase.escapeSync;\n  }\n});\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * Some browsers don't implement {@link Element#remove()} or\n * {@link NodeList#remove()} or {@link HTMLCollection#remove()}. This wrapper\n * calls the appropriate `#remove()` method if available, or falls back to a\n * non-global-polluting polyfill.\n * @param {Element|NodeList|HTMLCollection} node\n * @returns {undefined}\n */\n\n\nfunction removeNode(node) {\n  if (node.remove) {\n    node.remove();\n    return;\n  }\n\n  if (node.parentElement) {\n    node.parentElement.removeChild(node);\n    return;\n  }\n\n  if ('length' in node) {\n    for (var i = node.length - 1; i >= 0; i -= 1) {\n      removeNode(node[i]);\n    }\n\n    return;\n  }\n\n  throw new Error('Could not find a way to remove node');\n}\n/**\n * @param {Object} allowedTags\n * @param {Array<string>} allowedStyles\n * @param {string} html\n * @private\n * @returns {string}\n */\n\n\nfunction _filter() {\n  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  return new _promise2.default(function (resolve) {\n    resolve(_filterSync.apply(undefined, args));\n  });\n}\n/**\n * Curried async HTML filter.\n * @param {Object} allowedTags Map of tagName -> array of allowed attributes\n * @param {Array<string>} allowedStyles Array of allowed styles\n * @param {string} html html to filter\n * @returns {string}\n */\n\n\nvar filter = exports.filter = (0, _curry3.default)(_filter, 4);\n/**\n * @param {function} processCallback callback function to do additional\n * processing on node. of the form process(node)\n * @param {Object} allowedTags\n * @param {Array<string>} allowedStyles\n * @param {string} html\n * @private\n * @returns {string}\n */\n\nfunction _filterSync(processCallback, allowedTags, allowedStyles, html) {\n  if (!html || !allowedStyles || !allowedTags) {\n    if (html.length === 0) {\n      return html;\n    }\n\n    throw new Error('`allowedTags`, `allowedStyles`, and `html` must be provided');\n  }\n\n  var doc = new DOMParser().parseFromString(html, 'text/html');\n  depthFirstForEach(doc.body.childNodes, filterNode);\n  processCallback(doc.body);\n\n  if (html.indexOf('body') === 1) {\n    return '<body>' + doc.body.innerHTML + '</body>';\n  }\n\n  return doc.body.innerHTML;\n  /**\n   * @param {Node} node\n   * @private\n   * @returns {undefined}\n   */\n\n  function filterNode(node) {\n    if (!isElement(node)) {\n      return;\n    }\n\n    var nodeName = node.nodeName.toLowerCase();\n    var allowedTagNames = (0, _keys2.default)(allowedTags);\n    depthFirstForEach(node.childNodes, filterNode);\n\n    if ((0, _includes3.default)(allowedTagNames, nodeName)) {\n      var allowedAttributes = allowedTags[nodeName];\n      (0, _forEach3.default)(listAttributeNames(node.attributes), function (attrName) {\n        if (!(0, _includes3.default)(allowedAttributes, attrName)) {\n          node.removeAttribute(attrName);\n        } else if (attrName === 'href' || attrName === 'src') {\n          var attrValue = node.attributes.getNamedItem(attrName).value.trim().toLowerCase(); // We're doing at runtime what the no-script-url rule does at compile\n          // time\n          // eslint-disable-next-line no-script-url\n\n          if (attrValue.indexOf('javascript:') === 0 || attrValue.indexOf('vbscript:') === 0) {\n            reparent(node);\n          }\n        } else if (attrName === 'style') {\n          var styles = node.attributes.getNamedItem('style').value.split(';').map(function (style) {\n            var styleName = trim(style.split(':')[0]);\n\n            if ((0, _includes3.default)(allowedStyles, styleName)) {\n              return style;\n            }\n\n            return null;\n          }).filter(function (style) {\n            return Boolean(style);\n          }).join(';');\n          node.setAttribute('style', styles);\n        }\n      });\n    } else {\n      reparent(node);\n    }\n  }\n}\n/**\n * Same as _filter, but escapes rather than removes disallowed values\n * @param {Function} processCallback\n * @param {Object} allowedTags\n * @param {Array<string>} allowedStyles\n * @param {string} html\n * @returns {Promise<string>}\n */\n\n\nfunction _filterEscape() {\n  for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    args[_key2] = arguments[_key2];\n  }\n\n  return new _promise2.default(function (resolve) {\n    resolve(_filterEscapeSync.apply(undefined, args));\n  });\n}\n/**\n * Same as _filterSync, but escapes rather than removes disallowed values\n * @param {Function} processCallback\n * @param {Object} allowedTags\n * @param {Array<string>} allowedStyles\n * @param {string} html\n * @returns {string}\n */\n\n\nfunction _filterEscapeSync(processCallback, allowedTags, allowedStyles, html) {\n  if (!html || !allowedStyles || !allowedTags) {\n    if (html.length === 0) {\n      return html;\n    }\n\n    throw new Error('`allowedTags`, `allowedStyles`, and `html` must be provided');\n  }\n\n  var doc = new DOMParser().parseFromString(html, 'text/html');\n  depthFirstForEach(doc.body.childNodes, filterNode);\n  processCallback(doc.body);\n\n  if (html.indexOf('body') === 1) {\n    return '<body>' + doc.body.innerHTML + '</body>';\n  }\n\n  return doc.body.innerHTML;\n  /**\n   * @param {Node} node\n   * @private\n   * @returns {undefined}\n   */\n\n  function filterNode(node) {\n    if (!isElement(node)) {\n      return;\n    }\n\n    depthFirstForEach(node.childNodes, filterNode);\n    var nodeName = node.nodeName.toLowerCase();\n    var allowedTagNames = (0, _keys2.default)(allowedTags);\n\n    if ((0, _includes3.default)(allowedTagNames, nodeName)) {\n      var allowedAttributes = allowedTags[nodeName];\n      (0, _forEach3.default)(listAttributeNames(node.attributes), function (attrName) {\n        if (!(0, _includes3.default)(allowedAttributes, attrName)) {\n          node.removeAttribute(attrName);\n        } else if (attrName === 'href' || attrName === 'src') {\n          var attrValue = node.attributes.getNamedItem(attrName).value.toLowerCase(); // We're doing at runtime what the no-script-url rule does at compile\n          // time\n          // eslint-disable-next-line no-script-url\n\n          if (attrValue.indexOf('javascript:') === 0 || attrValue.indexOf('vbscript:') === 0) {\n            reparent(node);\n          }\n        } else if (attrName === 'style') {\n          var styles = node.attributes.getNamedItem('style').value.split(';').map(function (style) {\n            var styleName = trim(style.split(':')[0]);\n\n            if ((0, _includes3.default)(allowedStyles, styleName)) {\n              return style;\n            }\n\n            return null;\n          }).filter(function (style) {\n            return Boolean(style);\n          }).join(';');\n          node.setAttribute('style', styles);\n        }\n      });\n    } else {\n      escapeNode(node);\n    }\n  }\n}\n/**\n * Escapes a given html node\n * @param {Node} node\n * @returns {undefined}\n */\n\n\nfunction escapeNode(node) {\n  var before = document.createTextNode('<' + node.nodeName.toLowerCase() + '>');\n  var after = document.createTextNode('</' + node.nodeName.toLowerCase() + '>');\n  node.parentNode.insertBefore(before, node);\n\n  while (node.childNodes.length > 0) {\n    node.parentNode.insertBefore(node.childNodes[0], node);\n  }\n\n  node.parentNode.insertBefore(after, node);\n  removeNode(node);\n}\n\nvar trimPattern = /^\\s|\\s$/g;\n/**\n * @param {string} str\n * @returns {string}\n */\n\nfunction trim(str) {\n  return str.replace(trimPattern, '');\n}\n/**\n * @param {Node} node\n * @private\n * @returns {undefined}\n */\n\n\nfunction reparent(node) {\n  while (node.childNodes.length > 0) {\n    node.parentNode.insertBefore(node.childNodes[0], node);\n  }\n\n  removeNode(node);\n}\n/**\n * @param {NamedNodeMap} attributes\n * @private\n * @returns {Array<string>}\n */\n\n\nfunction listAttributeNames(attributes) {\n  return (0, _reduce3.default)(attributes, function (attrNames, attr) {\n    attrNames.push(attr.name);\n    return attrNames;\n  }, []);\n}\n/**\n * @param {Array} list\n * @param {Function} fn\n * @private\n * @returns {undefined}\n */\n\n\nfunction depthFirstForEach(list, fn) {\n  for (var i = list.length; i >= 0; i -= 1) {\n    fn(list[i]);\n  }\n}\n/**\n * @param {Node} o\n * @private\n * @returns {Boolean}\n */\n\n\nfunction isElement(o) {\n  if (!o) {\n    return false;\n  }\n\n  if (o.ownerDocument === undefined) {\n    return false;\n  }\n\n  if (o.nodeType !== 1) {\n    return false;\n  }\n\n  if (typeof o.nodeName !== 'string') {\n    return false;\n  }\n\n  return true;\n}\n/**\n * Curried HTML filter.\n * @param {Object} allowedTags Map of tagName -> array of allowed attributes\n * @param {Array<string>} allowedStyles Array of allowed styles\n * @param {string} html html to filter\n * @returns {string}\n */\n\n\nvar filterSync = exports.filterSync = (0, _curry3.default)(_filterSync, 4);\n/**\n * Curried HTML filter that escapes rather than removes disallowed tags\n * @param {Object} allowedTags Map of tagName -> array of allowed attributes\n * @param {Array<string>} allowedStyles Array of allowed styles\n * @param {string} html html to filter\n * @returns {Promise<string>}\n */\n\nvar filterEscape = exports.filterEscape = (0, _curry3.default)(_filterEscape, 4);\n/**\n * Curried HTML filter that escapes rather than removes disallowed tags\n * @param {Object} allowedTags Map of tagName -> array of allowed attributes\n * @param {Array<string>} allowedStyles Array of allowed styles\n * @param {string} html html to filter\n * @returns {string}\n */\n\nvar filterEscapeSync = exports.filterEscapeSync = (0, _curry3.default)(_filterEscapeSync, 4);","map":{"version":3,"sources":["html.shim.js"],"names":["escape","escapeSync","node","i","removeNode","args","resolve","_filterSync","filter","html","doc","depthFirstForEach","processCallback","isElement","nodeName","allowedTagNames","allowedAttributes","allowedTags","listAttributeNames","attrName","attrValue","reparent","styles","styleName","trim","style","Boolean","_filterEscapeSync","escapeNode","before","document","after","trimPattern","str","attrNames","attr","list","fn","o","filterSync","filterEscape","filterEscapeSync"],"mappings":"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","sourcesContent":["/*!\n * Copyright (c) 2015-2019 Cisco Systems, Inc. See LICENSE file.\n */\n\n/* eslint-env browser */\n\nimport {curry, forEach, includes, reduce} from 'lodash';\n\nexport {escape, escapeSync} from './html-base';\n\n/**\n * Some browsers don't implement {@link Element#remove()} or\n * {@link NodeList#remove()} or {@link HTMLCollection#remove()}. This wrapper\n * calls the appropriate `#remove()` method if available, or falls back to a\n * non-global-polluting polyfill.\n * @param {Element|NodeList|HTMLCollection} node\n * @returns {undefined}\n */\nfunction removeNode(node) {\n  if (node.remove) {\n    node.remove();\n\n    return;\n  }\n\n  if (node.parentElement) {\n    node.parentElement.removeChild(node);\n\n    return;\n  }\n\n  if ('length' in node) {\n    for (let i = node.length - 1; i >= 0; i -= 1) {\n      removeNode(node[i]);\n    }\n\n    return;\n  }\n\n  throw new Error('Could not find a way to remove node');\n}\n\n/**\n * @param {Object} allowedTags\n * @param {Array<string>} allowedStyles\n * @param {string} html\n * @private\n * @returns {string}\n */\nfunction _filter(...args) {\n  return new Promise((resolve) => {\n    resolve(_filterSync(...args));\n  });\n}\n\n/**\n * Curried async HTML filter.\n * @param {Object} allowedTags Map of tagName -> array of allowed attributes\n * @param {Array<string>} allowedStyles Array of allowed styles\n * @param {string} html html to filter\n * @returns {string}\n */\nexport const filter = curry(_filter, 4);\n\n/**\n * @param {function} processCallback callback function to do additional\n * processing on node. of the form process(node)\n * @param {Object} allowedTags\n * @param {Array<string>} allowedStyles\n * @param {string} html\n * @private\n * @returns {string}\n */\nfunction _filterSync(processCallback, allowedTags, allowedStyles, html) {\n  if (!html || !allowedStyles || !allowedTags) {\n    if (html.length === 0) {\n      return html;\n    }\n\n    throw new Error('`allowedTags`, `allowedStyles`, and `html` must be provided');\n  }\n\n  const doc = (new DOMParser()).parseFromString(html, 'text/html');\n\n  depthFirstForEach(doc.body.childNodes, filterNode);\n  processCallback(doc.body);\n\n  if (html.indexOf('body') === 1) {\n    return `<body>${doc.body.innerHTML}</body>`;\n  }\n\n  return doc.body.innerHTML;\n\n  /**\n   * @param {Node} node\n   * @private\n   * @returns {undefined}\n   */\n  function filterNode(node) {\n    if (!isElement(node)) {\n      return;\n    }\n\n    const nodeName = node.nodeName.toLowerCase();\n    const allowedTagNames = Object.keys(allowedTags);\n\n    depthFirstForEach(node.childNodes, filterNode);\n\n    if (includes(allowedTagNames, nodeName)) {\n      const allowedAttributes = allowedTags[nodeName];\n\n      forEach(listAttributeNames(node.attributes), (attrName) => {\n        if (!includes(allowedAttributes, attrName)) {\n          node.removeAttribute(attrName);\n        }\n        else if (attrName === 'href' || attrName === 'src') {\n          const attrValue = node.attributes.getNamedItem(attrName).value.trim().toLowerCase();\n\n          // We're doing at runtime what the no-script-url rule does at compile\n          // time\n          // eslint-disable-next-line no-script-url\n          if (attrValue.indexOf('javascript:') === 0 || attrValue.indexOf('vbscript:') === 0) {\n            reparent(node);\n          }\n        }\n        else if (attrName === 'style') {\n          const styles = node\n            .attributes\n            .getNamedItem('style')\n            .value\n            .split(';')\n            .map((style) => {\n              const styleName = trim(style.split(':')[0]);\n\n              if (includes(allowedStyles, styleName)) {\n                return style;\n              }\n\n              return null;\n            })\n            .filter((style) => Boolean(style))\n            .join(';');\n\n          node.setAttribute('style', styles);\n        }\n      });\n    }\n    else {\n      reparent(node);\n    }\n  }\n}\n\n/**\n * Same as _filter, but escapes rather than removes disallowed values\n * @param {Function} processCallback\n * @param {Object} allowedTags\n * @param {Array<string>} allowedStyles\n * @param {string} html\n * @returns {Promise<string>}\n */\nfunction _filterEscape(...args) {\n  return new Promise((resolve) => {\n    resolve(_filterEscapeSync(...args));\n  });\n}\n\n/**\n * Same as _filterSync, but escapes rather than removes disallowed values\n * @param {Function} processCallback\n * @param {Object} allowedTags\n * @param {Array<string>} allowedStyles\n * @param {string} html\n * @returns {string}\n */\nfunction _filterEscapeSync(processCallback, allowedTags, allowedStyles, html) {\n  if (!html || !allowedStyles || !allowedTags) {\n    if (html.length === 0) {\n      return html;\n    }\n\n    throw new Error('`allowedTags`, `allowedStyles`, and `html` must be provided');\n  }\n\n  const doc = (new DOMParser()).parseFromString(html, 'text/html');\n\n  depthFirstForEach(doc.body.childNodes, filterNode);\n  processCallback(doc.body);\n\n  if (html.indexOf('body') === 1) {\n    return `<body>${doc.body.innerHTML}</body>`;\n  }\n\n  return doc.body.innerHTML;\n\n  /**\n   * @param {Node} node\n   * @private\n   * @returns {undefined}\n   */\n  function filterNode(node) {\n    if (!isElement(node)) {\n      return;\n    }\n\n    depthFirstForEach(node.childNodes, filterNode);\n\n    const nodeName = node.nodeName.toLowerCase();\n    const allowedTagNames = Object.keys(allowedTags);\n\n    if (includes(allowedTagNames, nodeName)) {\n      const allowedAttributes = allowedTags[nodeName];\n\n      forEach(listAttributeNames(node.attributes), (attrName) => {\n        if (!includes(allowedAttributes, attrName)) {\n          node.removeAttribute(attrName);\n        }\n        else if (attrName === 'href' || attrName === 'src') {\n          const attrValue = node.attributes.getNamedItem(attrName).value.toLowerCase();\n\n          // We're doing at runtime what the no-script-url rule does at compile\n          // time\n          // eslint-disable-next-line no-script-url\n          if (attrValue.indexOf('javascript:') === 0 || attrValue.indexOf('vbscript:') === 0) {\n            reparent(node);\n          }\n        }\n        else if (attrName === 'style') {\n          const styles = node\n            .attributes\n            .getNamedItem('style')\n            .value\n            .split(';')\n            .map((style) => {\n              const styleName = trim(style.split(':')[0]);\n\n              if (includes(allowedStyles, styleName)) {\n                return style;\n              }\n\n              return null;\n            })\n            .filter((style) => Boolean(style))\n            .join(';');\n\n          node.setAttribute('style', styles);\n        }\n      });\n    }\n    else {\n      escapeNode(node);\n    }\n  }\n}\n\n/**\n * Escapes a given html node\n * @param {Node} node\n * @returns {undefined}\n */\nfunction escapeNode(node) {\n  const before = document.createTextNode(`<${node.nodeName.toLowerCase()}>`);\n  const after = document.createTextNode(`</${node.nodeName.toLowerCase()}>`);\n\n  node.parentNode.insertBefore(before, node);\n  while (node.childNodes.length > 0) {\n    node.parentNode.insertBefore(node.childNodes[0], node);\n  }\n  node.parentNode.insertBefore(after, node);\n\n  removeNode(node);\n}\n\nconst trimPattern = /^\\s|\\s$/g;\n\n/**\n * @param {string} str\n * @returns {string}\n */\nfunction trim(str) {\n  return str.replace(trimPattern, '');\n}\n\n/**\n * @param {Node} node\n * @private\n * @returns {undefined}\n */\nfunction reparent(node) {\n  while (node.childNodes.length > 0) {\n    node.parentNode.insertBefore(node.childNodes[0], node);\n  }\n  removeNode(node);\n}\n\n/**\n * @param {NamedNodeMap} attributes\n * @private\n * @returns {Array<string>}\n */\nfunction listAttributeNames(attributes) {\n  return reduce(attributes, (attrNames, attr) => {\n    attrNames.push(attr.name);\n\n    return attrNames;\n  }, []);\n}\n\n/**\n * @param {Array} list\n * @param {Function} fn\n * @private\n * @returns {undefined}\n */\nfunction depthFirstForEach(list, fn) {\n  for (let i = list.length; i >= 0; i -= 1) {\n    fn(list[i]);\n  }\n}\n\n/**\n * @param {Node} o\n * @private\n * @returns {Boolean}\n */\nfunction isElement(o) {\n  if (!o) {\n    return false;\n  }\n\n  if (o.ownerDocument === undefined) {\n    return false;\n  }\n\n  if (o.nodeType !== 1) {\n    return false;\n  }\n\n  if (typeof o.nodeName !== 'string') {\n    return false;\n  }\n\n  return true;\n}\n\n/**\n * Curried HTML filter.\n * @param {Object} allowedTags Map of tagName -> array of allowed attributes\n * @param {Array<string>} allowedStyles Array of allowed styles\n * @param {string} html html to filter\n * @returns {string}\n */\nexport const filterSync = curry(_filterSync, 4);\n\n/**\n * Curried HTML filter that escapes rather than removes disallowed tags\n * @param {Object} allowedTags Map of tagName -> array of allowed attributes\n * @param {Array<string>} allowedStyles Array of allowed styles\n * @param {string} html html to filter\n * @returns {Promise<string>}\n */\nexport const filterEscape = curry(_filterEscape, 4);\n\n/**\n * Curried HTML filter that escapes rather than removes disallowed tags\n * @param {Object} allowedTags Map of tagName -> array of allowed attributes\n * @param {Array<string>} allowedStyles Array of allowed styles\n * @param {string} html html to filter\n * @returns {string}\n */\nexport const filterEscapeSync = curry(_filterEscapeSync, 4);\n"]},"metadata":{},"sourceType":"script"}