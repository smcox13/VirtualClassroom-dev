{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n/** @component badge */\n\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nvar Badge = function Badge(props) {\n  var className = props.className,\n      rounded = props.rounded,\n      color = props.color,\n      otherHTMLProps = _objectWithoutPropertiesLoose(props, [\"className\", \"rounded\", \"color\"]);\n\n  return React.createElement(\"span\", _extends({\n    className: \"md-badge\" + (\"\" + (rounded && ' md-badge--round' || '')) + (\"\" + (color && \" md-badge--\" + color || '')) + (\"\" + (className && \" \" + className || ''))\n  }, otherHTMLProps), props.children);\n};\n\nBadge.displayName = 'Badge';\nBadge.propTypes = {\n  /** @prop Children nodes to render inside Accordion | null */\n  children: PropTypes.node,\n\n  /** @prop Optional css class string | '' */\n  className: PropTypes.string,\n\n  /** @prop Optional color prop type | null */\n  color: PropTypes.string,\n\n  /** @prop Optional rounded corners for the Badge | false */\n  rounded: PropTypes.bool\n};\nBadge.defaultProps = {\n  children: null,\n  className: '',\n  rounded: false\n};\nexport default Badge;","map":{"version":3,"sources":["/Users/pratison/Work/Cisco/Education/React/education-webex/node_modules/@momentum-ui/react/es/Badge/index.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","_objectWithoutPropertiesLoose","excluded","sourceKeys","keys","indexOf","React","PropTypes","Badge","props","className","rounded","color","otherHTMLProps","createElement","children","displayName","propTypes","node","string","bool","defaultProps"],"mappings":"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","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/** @component badge */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nvar Badge = function Badge(props) {\n  var className = props.className,\n      rounded = props.rounded,\n      color = props.color,\n      otherHTMLProps = _objectWithoutPropertiesLoose(props, [\"className\", \"rounded\", \"color\"]);\n\n  return React.createElement(\"span\", _extends({\n    className: \"md-badge\" + (\"\" + (rounded && ' md-badge--round' || '')) + (\"\" + (color && \" md-badge--\" + color || '')) + (\"\" + (className && \" \" + className || ''))\n  }, otherHTMLProps), props.children);\n};\n\nBadge.displayName = 'Badge';\nBadge.propTypes = {\n  /** @prop Children nodes to render inside Accordion | null */\n  children: PropTypes.node,\n\n  /** @prop Optional css class string | '' */\n  className: PropTypes.string,\n\n  /** @prop Optional color prop type | null */\n  color: PropTypes.string,\n\n  /** @prop Optional rounded corners for the Badge | false */\n  rounded: PropTypes.bool\n};\nBadge.defaultProps = {\n  children: null,\n  className: '',\n  rounded: false\n};\nexport default Badge;"]},"metadata":{},"sourceType":"module"}