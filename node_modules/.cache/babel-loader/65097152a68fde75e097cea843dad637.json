{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/*!\n * Copyright (c) 2015-2019 Cisco Systems, Inc. See LICENSE file.\n */\n\nexports.default = {\n  mercury: {\n    /**\n     * Milliseconds between pings sent up the socket\n     * @type {number}\n     */\n    pingInterval: process.env.MERCURY_PING_INTERVAL || 15000,\n\n    /**\n     * Milliseconds to wait for a pong before declaring the connection dead\n     * @type {number}\n     */\n    pongTimeout: process.env.MERCURY_PONG_TIMEOUT || 14000,\n\n    /**\n     * Maximum milliseconds between connection attempts\n     * @type {Number}\n     */\n    backoffTimeMax: process.env.MERCURY_BACKOFF_TIME_MAX || 32000,\n\n    /**\n     * Initial milliseconds between connection attempts\n     * @type {Number}\n     */\n    backoffTimeReset: process.env.MERCURY_BACKOFF_TIME_RESET || 1000,\n\n    /**\n     * Milliseconds to wait for a close frame before declaring the socket dead and\n     * discarding it\n     * @type {[type]}\n     */\n    forceCloseDelay: process.env.MERCURY_FORCE_CLOSE_DELAY || 2000\n  }\n};","map":{"version":3,"sources":["config.js"],"names":["mercury","pingInterval","process","pongTimeout","backoffTimeMax","backoffTimeReset","forceCloseDelay"],"mappings":";;;;;AAAA;;;;kBAIe;AACbA,EAAAA,OAAAA,EAAS;AACP;;;;AAIAC,IAAAA,YAAAA,EAAcC,OAAAA,CAAAA,GAAAA,CAAAA,qBAAAA,IALP,KAAA;;AAMP;;;;AAIAC,IAAAA,WAAAA,EAAaD,OAAAA,CAAAA,GAAAA,CAAAA,oBAAAA,IAVN,KAAA;;AAWP;;;;AAIAE,IAAAA,cAAAA,EAAgBF,OAAAA,CAAAA,GAAAA,CAAAA,wBAAAA,IAfT,KAAA;;AAgBP;;;;AAIAG,IAAAA,gBAAAA,EAAkBH,OAAAA,CAAAA,GAAAA,CAAAA,0BAAAA,IApBX,IAAA;;AAqBP;;;;;AAKAI,IAAAA,eAAAA,EAAiBJ,OAAAA,CAAAA,GAAAA,CAAAA,yBAAAA,IAAyC;AA1BnD;AADI,C","sourcesContent":["/*!\n * Copyright (c) 2015-2019 Cisco Systems, Inc. See LICENSE file.\n */\n\nexport default {\n  mercury: {\n    /**\n     * Milliseconds between pings sent up the socket\n     * @type {number}\n     */\n    pingInterval: process.env.MERCURY_PING_INTERVAL || 15000,\n    /**\n     * Milliseconds to wait for a pong before declaring the connection dead\n     * @type {number}\n     */\n    pongTimeout: process.env.MERCURY_PONG_TIMEOUT || 14000,\n    /**\n     * Maximum milliseconds between connection attempts\n     * @type {Number}\n     */\n    backoffTimeMax: process.env.MERCURY_BACKOFF_TIME_MAX || 32000,\n    /**\n     * Initial milliseconds between connection attempts\n     * @type {Number}\n     */\n    backoffTimeReset: process.env.MERCURY_BACKOFF_TIME_RESET || 1000,\n    /**\n     * Milliseconds to wait for a close frame before declaring the socket dead and\n     * discarding it\n     * @type {[type]}\n     */\n    forceCloseDelay: process.env.MERCURY_FORCE_CLOSE_DELAY || 2000\n  }\n};\n"]},"metadata":{},"sourceType":"script"}