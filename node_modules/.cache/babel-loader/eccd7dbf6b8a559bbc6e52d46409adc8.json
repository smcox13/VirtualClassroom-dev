{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _common = require('@webex/common');\n\nexports.default = {\n  device: {\n    /**\n     * The duration to wait for the catalog to populate in seconds.\n     *\n     * @type {number}\n     */\n    canRegisterWaitDuration: 10,\n\n    /**\n     * The default configuration group when sending registration requests.\n     *\n     * @type {Object}\n     */\n    defaults: {\n      /**\n       * The default body configuration of registration requests.\n       *\n       * @type {Object}\n       */\n      body: {\n        name: (typeof process.title === 'string' ? process.title.trim() : undefined) || _common.inBrowser && 'browser' || 'javascript',\n        deviceType: 'WEB',\n        model: 'web-js-sdk',\n        localizedModel: 'webex-js-sdk',\n        systemName: 'WEBEX_JS_SDK',\n        systemVersion: '1.0.0'\n      }\n    },\n\n    /**\n     * When true, the **wdm** service will enforce an inactivity duration.\n     *\n     * @type {boolean}\n     */\n    enableInactivityEnforcement: false,\n\n    /**\n     * When true, the device registration will include a ttl value of\n     * {@link config.device.ephemeralDeviceTTL} and refresh on an interval of\n     * {@link config.device.ephemeralDeviceTTL} / 2 + 60 seconds.\n     *\n     * @type {boolean}\n     */\n    ephemeral: false,\n\n    /**\n     * The ttl value to include in device registration if\n     * {@link config.device.ephemeral} is true. Measured in seconds.\n     *\n     * @type {boolean}\n     */\n    ephemeralDeviceTTL: 30 * 60\n  }\n};","map":{"version":3,"sources":["config.js"],"names":["device","canRegisterWaitDuration","defaults","body","name","process","inBrowser","deviceType","model","localizedModel","systemName","systemVersion","enableInactivityEnforcement","ephemeral","ephemeralDeviceTTL"],"mappings":";;;;;;AAAA,IAAA,OAAA,GAAA,OAAA,CAAA,eAAA,CAAA;;kBAEe;AACbA,EAAAA,MAAAA,EAAQ;AAEN;;;;;AAKAC,IAAAA,uBAAAA,EAPM,EAAA;;AASN;;;;;AAKAC,IAAAA,QAAAA,EAAU;AAER;;;;;AAKAC,MAAAA,IAAAA,EAAM;AACJC,QAAAA,IAAAA,EAAM,CAAC,OAAOC,OAAAA,CAAP,KAAA,KAAA,QAAA,GACLA,OAAAA,CAAAA,KAAAA,CADK,IACLA,EADK,GAAD,SAAA,KAEJC,OAAAA,CAAAA,SAAAA,IAFI,SAAA,IADF,YAAA;AAIJC,QAAAA,UAAAA,EAJI,KAAA;AAKJC,QAAAA,KAAAA,EALI,YAAA;AAMJC,QAAAA,cAAAA,EANI,cAAA;AAOJC,QAAAA,UAAAA,EAPI,cAAA;AAQJC,QAAAA,aAAAA,EAAe;AARX;AAPE,KAdJ;;AAiCN;;;;;AAKAC,IAAAA,2BAAAA,EAtCM,KAAA;;AAwCN;;;;;;;AAOAC,IAAAA,SAAAA,EA/CM,KAAA;;AAiDN;;;;;;AAMAC,IAAAA,kBAAAA,EAAoB,KAAK;AAvDnB;AADK,C","sourcesContent":["import {inBrowser} from '@webex/common';\n\nexport default {\n  device: {\n\n    /**\n     * The duration to wait for the catalog to populate in seconds.\n     *\n     * @type {number}\n     */\n    canRegisterWaitDuration: 10,\n\n    /**\n     * The default configuration group when sending registration requests.\n     *\n     * @type {Object}\n     */\n    defaults: {\n\n      /**\n       * The default body configuration of registration requests.\n       *\n       * @type {Object}\n       */\n      body: {\n        name: (typeof process.title === 'string' ?\n          process.title.trim() : undefined) ||\n          inBrowser && 'browser' || 'javascript',\n        deviceType: 'WEB',\n        model: 'web-js-sdk',\n        localizedModel: 'webex-js-sdk',\n        systemName: 'WEBEX_JS_SDK',\n        systemVersion: '1.0.0'\n      }\n    },\n\n    /**\n     * When true, the **wdm** service will enforce an inactivity duration.\n     *\n     * @type {boolean}\n     */\n    enableInactivityEnforcement: false,\n\n    /**\n     * When true, the device registration will include a ttl value of\n     * {@link config.device.ephemeralDeviceTTL} and refresh on an interval of\n     * {@link config.device.ephemeralDeviceTTL} / 2 + 60 seconds.\n     *\n     * @type {boolean}\n     */\n    ephemeral: false,\n\n    /**\n     * The ttl value to include in device registration if\n     * {@link config.device.ephemeral} is true. Measured in seconds.\n     *\n     * @type {boolean}\n     */\n    ephemeralDeviceTTL: 30 * 60\n  }\n};\n"]},"metadata":{},"sourceType":"script"}