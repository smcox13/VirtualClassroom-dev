{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = undefined;\n\nvar _create = require('babel-runtime/core-js/object/create');\n\nvar _create2 = _interopRequireDefault(_create);\n\nvar _setPrototypeOf = require('babel-runtime/core-js/object/set-prototype-of');\n\nvar _setPrototypeOf2 = _interopRequireDefault(_setPrototypeOf);\n\nvar _from = require('babel-runtime/core-js/array/from');\n\nvar _from2 = _interopRequireDefault(_from);\n\nvar _construct = require('babel-runtime/core-js/reflect/construct');\n\nvar _construct2 = _interopRequireDefault(_construct);\n\nvar _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');\n\nvar _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _class, _temp;\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _extendableBuiltin(cls) {\n  function ExtendableBuiltin() {\n    var instance = (0, _construct2.default)(cls, (0, _from2.default)(arguments));\n    (0, _setPrototypeOf2.default)(instance, (0, _getPrototypeOf2.default)(this));\n    return instance;\n  }\n\n  ExtendableBuiltin.prototype = (0, _create2.default)(cls.prototype, {\n    constructor: {\n      value: cls,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n\n  if (_setPrototypeOf2.default) {\n    (0, _setPrototypeOf2.default)(ExtendableBuiltin, cls);\n  } else {\n    ExtendableBuiltin.__proto__ = cls;\n  }\n\n  return ExtendableBuiltin;\n}\n/*!\n * Copyright (c) 2015-2019 Cisco Systems, Inc. See LICENSE file.\n */\n\n/**\n * Base Exception class\n */\n\n\nvar Exception = (_temp = _class = function (_extendableBuiltin2) {\n  (0, _inherits3.default)(Exception, _extendableBuiltin2);\n  /**\n   * constructor\n   * @param {mixed} args\n   * @returns {Exception}\n   */\n\n  function Exception() {\n    var _ref;\n\n    (0, _classCallCheck3.default)(this, Exception);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var _this = (0, _possibleConstructorReturn3.default)(this, (_ref = Exception.__proto__ || (0, _getPrototypeOf2.default)(Exception)).call.apply(_ref, [this].concat(args)));\n\n    var message = void 0;\n\n    if (_this.parse) {\n      message = _this.parse.apply(_this, args);\n    } else if (_this.constructor.parse) {\n      var _this$constructor;\n\n      message = (_this$constructor = _this.constructor).parse.apply(_this$constructor, args);\n    }\n\n    if (!message) {\n      message = _this.constructor.defaultMessage;\n    }\n\n    _this.name = _this.constructor.name;\n    _this.message = message;\n    return _this;\n  }\n  /**\n   * Generates the value assigned to `this.message`. You'll probably want to\n   * override this in your custom Exception\n   * @param {mixed} args\n   * @returns {string}\n   */\n\n\n  (0, _createClass3.default)(Exception, null, [{\n    key: 'parse',\n    value: function parse() {\n      return arguments.length <= 0 ? undefined : arguments[0];\n    }\n  }]);\n  return Exception;\n}(_extendableBuiltin(Error)), _class.defaultMessage = 'An error occurred', _temp);\nexports.default = Exception;","map":{"version":3,"sources":["exception.js"],"names":["Exception","Error","defaultMessage","args","message"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AAIA;;;;;IAGqBA,S;;AAGnB;;;;;;AAKA,WAAA,SAAA,GAAqB;AAAA,QAAA,IAAA;;AAAA,KAAA,GAAA,gBAAA,CAAA,OAAA,EAAA,IAAA,EAAA,SAAA;;AAAA,SAAA,IAAA,IAAA,GAAA,SAAA,CAAA,MAAA,EAANG,IAAM,GAAA,KAAA,CAAA,IAAA,CAAA,EAAA,IAAA,GAAA,CAAA,EAAA,IAAA,GAAA,IAAA,EAAA,IAAA,EAAA,EAAA;AAANA,MAAAA,IAAM,CAAA,IAAA,CAANA,GAAM,SAAA,CAAA,IAAA,CAANA;AAAM;;AAAA,QAAA,KAAA,GAAA,CAAA,GAAA,2BAAA,CAAA,OAAA,EAAA,IAAA,EAAA,CAAA,IAAA,GAAA,SAAA,CAAA,SAAA,IAAA,CAAA,GAAA,gBAAA,CAAA,OAAA,EAAA,SAAA,CAAA,EAAA,IAAA,CAAA,KAAA,CAAA,IAAA,EAAA,CAAA,IAAA,EAAA,MAAA,CAAA,IAAA,CAAA,CAAA,CAAA;;AAGnB,QAAIC,OAAAA,GAAAA,KAAJ,CAAA;;AAEA,QAAI,KAAA,CAAJ,KAAA,EAAgB;AACdA,MAAAA,OAAAA,GAAU,KAAA,CAAA,KAAA,CAAA,KAAA,CAAA,KAAA,EAAVA,IAAU,CAAVA;AADF,KAAA,MAGK,IAAI,KAAA,CAAA,WAAA,CAAJ,KAAA,EAA4B;AAAA,UAAA,iBAAA;;AAC/BA,MAAAA,OAAAA,GAAU,CAAA,iBAAA,GAAA,KAAA,CAAA,WAAA,EAAA,KAAA,CAAA,KAAA,CAAA,iBAAA,EAAVA,IAAU,CAAVA;AACD;;AAED,QAAI,CAAJ,OAAA,EAAc;AACZA,MAAAA,OAAAA,GAAU,KAAA,CAAA,WAAA,CAAVA,cAAAA;AACD;;AAED,IAAA,KAAA,CAAA,IAAA,GAAY,KAAA,CAAA,WAAA,CAAZ,IAAA;AAEA,IAAA,KAAA,CAAA,OAAA,GAAA,OAAA;AAlBmB,WAAA,KAAA;AAmBpB;AAED;;;;;;;;;;4BAMsB;AACpB,aAAA,SAAA,CAAA,MAAA,IAAA,CAAA,GAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA;AACD;;;qBArCoCH,K,WAC9BC,c,GAAiB,mB;kBADLF,S","sourcesContent":["/*!\n * Copyright (c) 2015-2019 Cisco Systems, Inc. See LICENSE file.\n */\n\n/**\n * Base Exception class\n */\nexport default class Exception extends Error {\n  static defaultMessage = 'An error occurred';\n\n  /**\n   * constructor\n   * @param {mixed} args\n   * @returns {Exception}\n   */\n  constructor(...args) {\n    super(...args);\n\n    let message;\n\n    if (this.parse) {\n      message = this.parse(...args);\n    }\n    else if (this.constructor.parse) {\n      message = this.constructor.parse(...args);\n    }\n\n    if (!message) {\n      message = this.constructor.defaultMessage;\n    }\n\n    this.name = this.constructor.name;\n\n    this.message = message;\n  }\n\n  /**\n   * Generates the value assigned to `this.message`. You'll probably want to\n   * override this in your custom Exception\n   * @param {mixed} args\n   * @returns {string}\n   */\n  static parse(...args) {\n    return args[0];\n  }\n}\n"]},"metadata":{},"sourceType":"script"}