{"ast":null,"code":"var uniqueId = require('lodash/uniqueId');\n\nvar eventSplitter = /\\s+/; // A difficult-to-believe, but optimized internal dispatch function for\n// triggering events. Tries to keep the usual cases speedy.\n\nexports.triggerEvents = function triggerEvents(events, args) {\n  var ev;\n  var i = -1;\n  var l = events.length;\n  var a1 = args[0];\n  var a2 = args[1];\n  var a3 = args[2];\n\n  switch (args.length) {\n    case 0:\n      while (++i < l) (ev = events[i]).callback.call(ev.ctx);\n\n      return;\n\n    case 1:\n      while (++i < l) (ev = events[i]).callback.call(ev.ctx, a1);\n\n      return;\n\n    case 2:\n      while (++i < l) (ev = events[i]).callback.call(ev.ctx, a1, a2);\n\n      return;\n\n    case 3:\n      while (++i < l) (ev = events[i]).callback.call(ev.ctx, a1, a2, a3);\n\n      return;\n\n    default:\n      while (++i < l) (ev = events[i]).callback.apply(ev.ctx, args);\n\n      return;\n  }\n}; // Implement fancy features of the Events API such as multiple event\n// names `\"change blur\"` and jQuery-style event maps `{change: action}`\n// in terms of the existing API.\n\n\nexports.eventsApi = function eventsApi(obj, action, name, rest) {\n  if (!name) return true; // Handle event maps.\n\n  if (typeof name === 'object') {\n    for (var key in name) {\n      obj[action].apply(obj, [key, name[key]].concat(rest));\n    }\n\n    return false;\n  } // Handle space separated event names.\n\n\n  if (eventSplitter.test(name)) {\n    var names = name.split(eventSplitter);\n\n    for (var i = 0, l = names.length; i < l; i++) {\n      obj[action].apply(obj, [names[i]].concat(rest));\n    }\n\n    return false;\n  }\n\n  return true;\n}; // Inversion-of-control versions of `on` and `once`. Tell *this* object to\n// listen to an event in another object ... keeping track of what it's\n// listening to.\n\n\nexports.createListenMethod = function createListenMethod(implementation) {\n  return function listenMethod(obj, name, callback) {\n    if (!obj) {\n      throw new Error('Trying to listenTo event: \\'' + name + '\\' but the target object is undefined');\n    }\n\n    var listeningTo = this._listeningTo || (this._listeningTo = {});\n    var id = obj._listenId || (obj._listenId = uniqueId('l'));\n    listeningTo[id] = obj;\n    if (!callback && typeof name === 'object') callback = this;\n\n    if (typeof obj[implementation] !== 'function') {\n      throw new Error('Trying to listenTo event: \\'' + name + '\\' on object: ' + obj.toString() + ' but it does not have an \\'on\\' method so is unbindable');\n    }\n\n    obj[implementation](name, callback, this);\n    return this;\n  };\n};","map":{"version":3,"sources":["/Users/pratison/Work/Cisco/Education/React/education-webex/node_modules/ampersand-events/libs/utils.js"],"names":["uniqueId","require","eventSplitter","exports","triggerEvents","events","args","ev","i","l","length","a1","a2","a3","callback","call","ctx","apply","eventsApi","obj","action","name","rest","key","concat","test","names","split","createListenMethod","implementation","listenMethod","Error","listeningTo","_listeningTo","id","_listenId","toString"],"mappings":"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","sourcesContent":["var uniqueId = require('lodash/uniqueId');\nvar eventSplitter = /\\s+/;\n\n// A difficult-to-believe, but optimized internal dispatch function for\n// triggering events. Tries to keep the usual cases speedy.\nexports.triggerEvents = function triggerEvents(events, args) {\n    var ev;\n    var i = -1;\n    var l = events.length;\n    var a1 = args[0];\n    var a2 = args[1];\n    var a3 = args[2];\n    switch (args.length) {\n        case 0: while (++i < l) (ev = events[i]).callback.call(ev.ctx); return;\n        case 1: while (++i < l) (ev = events[i]).callback.call(ev.ctx, a1); return;\n        case 2: while (++i < l) (ev = events[i]).callback.call(ev.ctx, a1, a2); return;\n        case 3: while (++i < l) (ev = events[i]).callback.call(ev.ctx, a1, a2, a3); return;\n        default: while (++i < l) (ev = events[i]).callback.apply(ev.ctx, args); return;\n    }\n};\n\n// Implement fancy features of the Events API such as multiple event\n// names `\"change blur\"` and jQuery-style event maps `{change: action}`\n// in terms of the existing API.\nexports.eventsApi = function eventsApi(obj, action, name, rest) {\n    if (!name) return true;\n\n    // Handle event maps.\n    if (typeof name === 'object') {\n        for (var key in name) {\n            obj[action].apply(obj, [key, name[key]].concat(rest));\n        }\n        return false;\n    }\n\n    // Handle space separated event names.\n    if (eventSplitter.test(name)) {\n        var names = name.split(eventSplitter);\n        for (var i = 0, l = names.length; i < l; i++) {\n            obj[action].apply(obj, [names[i]].concat(rest));\n        }\n        return false;\n    }\n\n    return true;\n};\n\n// Inversion-of-control versions of `on` and `once`. Tell *this* object to\n// listen to an event in another object ... keeping track of what it's\n// listening to.\nexports.createListenMethod = function createListenMethod(implementation) {\n    return function listenMethod(obj, name, callback) {\n        if (!obj) {\n            throw new Error('Trying to listenTo event: \\'' + name + '\\' but the target object is undefined');\n        }\n        var listeningTo = this._listeningTo || (this._listeningTo = {});\n        var id = obj._listenId || (obj._listenId = uniqueId('l'));\n        listeningTo[id] = obj;\n        if (!callback && typeof name === 'object') callback = this;\n        if (typeof obj[implementation] !== 'function') {\n            throw new Error('Trying to listenTo event: \\'' + name + '\\' on object: ' + obj.toString() + ' but it does not have an \\'on\\' method so is unbindable');\n        }\n        obj[implementation](name, callback, this);\n        return this;\n    };\n};\n"]},"metadata":{},"sourceType":"script"}