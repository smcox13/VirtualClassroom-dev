{"ast":null,"code":"var tabbable = require('tabbable');\n\nvar listeningFocusTrap = null;\n\nfunction focusTrap(element, userOptions) {\n  var tabbableNodes = [];\n  var firstTabbableNode = null;\n  var lastTabbableNode = null;\n  var nodeFocusedBeforeActivation = null;\n  var active = false;\n  var paused = false;\n  var tabEvent = null;\n  var container = typeof element === 'string' ? document.querySelector(element) : element;\n  var config = userOptions || {};\n  config.returnFocusOnDeactivate = userOptions && userOptions.returnFocusOnDeactivate !== undefined ? userOptions.returnFocusOnDeactivate : true;\n  config.escapeDeactivates = userOptions && userOptions.escapeDeactivates !== undefined ? userOptions.escapeDeactivates : true;\n  var trap = {\n    activate: activate,\n    deactivate: deactivate,\n    pause: pause,\n    unpause: unpause\n  };\n  return trap;\n\n  function activate(activateOptions) {\n    if (active) return;\n    var defaultedActivateOptions = {\n      onActivate: activateOptions && activateOptions.onActivate !== undefined ? activateOptions.onActivate : config.onActivate\n    };\n    active = true;\n    paused = false;\n    nodeFocusedBeforeActivation = document.activeElement;\n\n    if (defaultedActivateOptions.onActivate) {\n      defaultedActivateOptions.onActivate();\n    }\n\n    addListeners();\n    return trap;\n  }\n\n  function deactivate(deactivateOptions) {\n    if (!active) return;\n    var defaultedDeactivateOptions = {\n      returnFocus: deactivateOptions && deactivateOptions.returnFocus !== undefined ? deactivateOptions.returnFocus : config.returnFocusOnDeactivate,\n      onDeactivate: deactivateOptions && deactivateOptions.onDeactivate !== undefined ? deactivateOptions.onDeactivate : config.onDeactivate\n    };\n    removeListeners();\n\n    if (defaultedDeactivateOptions.onDeactivate) {\n      defaultedDeactivateOptions.onDeactivate();\n    }\n\n    if (defaultedDeactivateOptions.returnFocus) {\n      setTimeout(function () {\n        tryFocus(nodeFocusedBeforeActivation);\n      }, 0);\n    }\n\n    active = false;\n    paused = false;\n    return this;\n  }\n\n  function pause() {\n    if (paused || !active) return;\n    paused = true;\n    removeListeners();\n  }\n\n  function unpause() {\n    if (!paused || !active) return;\n    paused = false;\n    addListeners();\n  }\n\n  function addListeners() {\n    if (!active) return; // There can be only one listening focus trap at a time\n\n    if (listeningFocusTrap) {\n      listeningFocusTrap.pause();\n    }\n\n    listeningFocusTrap = trap;\n    updateTabbableNodes(); // Ensure that the focused element doesn't capture the event that caused the focus trap activation\n\n    setTimeout(function () {\n      tryFocus(firstFocusNode());\n    }, 0);\n    document.addEventListener('focus', checkFocus, true);\n    document.addEventListener('click', checkClick, true);\n    document.addEventListener('mousedown', checkPointerDown, true);\n    document.addEventListener('touchstart', checkPointerDown, true);\n    document.addEventListener('keydown', checkKey, true);\n    return trap;\n  }\n\n  function removeListeners() {\n    if (!active || listeningFocusTrap !== trap) return;\n    document.removeEventListener('focus', checkFocus, true);\n    document.removeEventListener('click', checkClick, true);\n    document.removeEventListener('mousedown', checkPointerDown, true);\n    document.removeEventListener('touchstart', checkPointerDown, true);\n    document.removeEventListener('keydown', checkKey, true);\n    listeningFocusTrap = null;\n    return trap;\n  }\n\n  function getNodeForOption(optionName) {\n    var optionValue = config[optionName];\n    var node = optionValue;\n\n    if (!optionValue) {\n      return null;\n    }\n\n    if (typeof optionValue === 'string') {\n      node = document.querySelector(optionValue);\n\n      if (!node) {\n        throw new Error('`' + optionName + '` refers to no known node');\n      }\n    }\n\n    if (typeof optionValue === 'function') {\n      node = optionValue();\n\n      if (!node) {\n        throw new Error('`' + optionName + '` did not return a node');\n      }\n    }\n\n    return node;\n  }\n\n  function firstFocusNode() {\n    var node;\n\n    if (getNodeForOption('initialFocus') !== null) {\n      node = getNodeForOption('initialFocus');\n    } else if (container.contains(document.activeElement)) {\n      node = document.activeElement;\n    } else {\n      node = tabbableNodes[0] || getNodeForOption('fallbackFocus');\n    }\n\n    if (!node) {\n      throw new Error('You can\\'t have a focus-trap without at least one focusable element');\n    }\n\n    return node;\n  } // This needs to be done on mousedown and touchstart instead of click\n  // so that it precedes the focus event\n\n\n  function checkPointerDown(e) {\n    if (config.clickOutsideDeactivates && !container.contains(e.target)) {\n      deactivate({\n        returnFocus: false\n      });\n    }\n  }\n\n  function checkClick(e) {\n    if (config.clickOutsideDeactivates) return;\n    if (container.contains(e.target)) return;\n    e.preventDefault();\n    e.stopImmediatePropagation();\n  }\n\n  function checkFocus(e) {\n    if (container.contains(e.target)) return;\n    e.preventDefault();\n    e.stopImmediatePropagation(); // Checking for a blur method here resolves a Firefox issue (#15)\n\n    if (typeof e.target.blur === 'function') e.target.blur();\n\n    if (tabEvent) {\n      readjustFocus(tabEvent);\n    }\n  }\n\n  function checkKey(e) {\n    if (e.key === 'Tab' || e.keyCode === 9) {\n      handleTab(e);\n    }\n\n    if (config.escapeDeactivates !== false && isEscapeEvent(e)) {\n      deactivate();\n    }\n  }\n\n  function handleTab(e) {\n    updateTabbableNodes();\n\n    if (e.target.hasAttribute('tabindex') && Number(e.target.getAttribute('tabindex')) < 0) {\n      return tabEvent = e;\n    }\n\n    e.preventDefault();\n    var currentFocusIndex = tabbableNodes.indexOf(e.target);\n\n    if (e.shiftKey) {\n      if (e.target === firstTabbableNode || tabbableNodes.indexOf(e.target) === -1) {\n        return tryFocus(lastTabbableNode);\n      }\n\n      return tryFocus(tabbableNodes[currentFocusIndex - 1]);\n    }\n\n    if (e.target === lastTabbableNode) return tryFocus(firstTabbableNode);\n    tryFocus(tabbableNodes[currentFocusIndex + 1]);\n  }\n\n  function updateTabbableNodes() {\n    tabbableNodes = tabbable(container);\n    firstTabbableNode = tabbableNodes[0];\n    lastTabbableNode = tabbableNodes[tabbableNodes.length - 1];\n  }\n\n  function readjustFocus(e) {\n    if (e.shiftKey) return tryFocus(lastTabbableNode);\n    tryFocus(firstTabbableNode);\n  }\n}\n\nfunction isEscapeEvent(e) {\n  return e.key === 'Escape' || e.key === 'Esc' || e.keyCode === 27;\n}\n\nfunction tryFocus(node) {\n  if (!node || !node.focus) return;\n  if (node === document.activeElement) return;\n  node.focus();\n\n  if (node.tagName.toLowerCase() === 'input') {\n    node.select();\n  }\n}\n\nmodule.exports = focusTrap;","map":{"version":3,"sources":["/Users/pratison/Work/Cisco/Education/React/education-webex/node_modules/focus-trap/index.js"],"names":["tabbable","require","listeningFocusTrap","focusTrap","element","userOptions","tabbableNodes","firstTabbableNode","lastTabbableNode","nodeFocusedBeforeActivation","active","paused","tabEvent","container","document","querySelector","config","returnFocusOnDeactivate","undefined","escapeDeactivates","trap","activate","deactivate","pause","unpause","activateOptions","defaultedActivateOptions","onActivate","activeElement","addListeners","deactivateOptions","defaultedDeactivateOptions","returnFocus","onDeactivate","removeListeners","setTimeout","tryFocus","updateTabbableNodes","firstFocusNode","addEventListener","checkFocus","checkClick","checkPointerDown","checkKey","removeEventListener","getNodeForOption","optionName","optionValue","node","Error","contains","e","clickOutsideDeactivates","target","preventDefault","stopImmediatePropagation","blur","readjustFocus","key","keyCode","handleTab","isEscapeEvent","hasAttribute","Number","getAttribute","currentFocusIndex","indexOf","shiftKey","length","focus","tagName","toLowerCase","select","module","exports"],"mappings":"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","sourcesContent":["var tabbable = require('tabbable');\n\nvar listeningFocusTrap = null;\n\nfunction focusTrap(element, userOptions) {\n  var tabbableNodes = [];\n  var firstTabbableNode = null;\n  var lastTabbableNode = null;\n  var nodeFocusedBeforeActivation = null;\n  var active = false;\n  var paused = false;\n  var tabEvent = null;\n\n  var container = (typeof element === 'string')\n    ? document.querySelector(element)\n    : element;\n\n  var config = userOptions || {};\n  config.returnFocusOnDeactivate = (userOptions && userOptions.returnFocusOnDeactivate !== undefined)\n    ? userOptions.returnFocusOnDeactivate\n    : true;\n  config.escapeDeactivates = (userOptions && userOptions.escapeDeactivates !== undefined)\n    ? userOptions.escapeDeactivates\n    : true;\n\n  var trap = {\n    activate: activate,\n    deactivate: deactivate,\n    pause: pause,\n    unpause: unpause,\n  };\n\n  return trap;\n\n  function activate(activateOptions) {\n    if (active) return;\n\n    var defaultedActivateOptions = {\n      onActivate: (activateOptions && activateOptions.onActivate !== undefined)\n        ? activateOptions.onActivate\n        : config.onActivate,\n    };\n\n    active = true;\n    paused = false;\n    nodeFocusedBeforeActivation = document.activeElement;\n\n    if (defaultedActivateOptions.onActivate) {\n      defaultedActivateOptions.onActivate();\n    }\n\n    addListeners();\n    return trap;\n  }\n\n  function deactivate(deactivateOptions) {\n    if (!active) return;\n\n    var defaultedDeactivateOptions = {\n      returnFocus: (deactivateOptions && deactivateOptions.returnFocus !== undefined)\n        ? deactivateOptions.returnFocus\n        : config.returnFocusOnDeactivate,\n      onDeactivate: (deactivateOptions && deactivateOptions.onDeactivate !== undefined)\n        ? deactivateOptions.onDeactivate\n        : config.onDeactivate,\n    };\n\n    removeListeners();\n\n    if (defaultedDeactivateOptions.onDeactivate) {\n      defaultedDeactivateOptions.onDeactivate();\n    }\n\n    if (defaultedDeactivateOptions.returnFocus) {\n      setTimeout(function () {\n        tryFocus(nodeFocusedBeforeActivation);\n      }, 0);\n    }\n\n    active = false;\n    paused = false;\n    return this;\n  }\n\n  function pause() {\n    if (paused || !active) return;\n    paused = true;\n    removeListeners();\n  }\n\n  function unpause() {\n    if (!paused || !active) return;\n    paused = false;\n    addListeners();\n  }\n\n  function addListeners() {\n    if (!active) return;\n\n    // There can be only one listening focus trap at a time\n    if (listeningFocusTrap) {\n      listeningFocusTrap.pause();\n    }\n    listeningFocusTrap = trap;\n\n    updateTabbableNodes();\n    // Ensure that the focused element doesn't capture the event that caused the focus trap activation\n    setTimeout(function () {\n      tryFocus(firstFocusNode());\n    }, 0);\n    document.addEventListener('focus', checkFocus, true);\n    document.addEventListener('click', checkClick, true);\n    document.addEventListener('mousedown', checkPointerDown, true);\n    document.addEventListener('touchstart', checkPointerDown, true);\n    document.addEventListener('keydown', checkKey, true);\n\n    return trap;\n  }\n\n  function removeListeners() {\n    if (!active || listeningFocusTrap !== trap) return;\n\n    document.removeEventListener('focus', checkFocus, true);\n    document.removeEventListener('click', checkClick, true);\n    document.removeEventListener('mousedown', checkPointerDown, true);\n    document.removeEventListener('touchstart', checkPointerDown, true);\n    document.removeEventListener('keydown', checkKey, true);\n\n    listeningFocusTrap = null;\n\n    return trap;\n  }\n\n  function getNodeForOption(optionName) {\n    var optionValue = config[optionName];\n    var node = optionValue;\n    if (!optionValue) {\n      return null;\n    }\n    if (typeof optionValue === 'string') {\n      node = document.querySelector(optionValue);\n      if (!node) {\n        throw new Error('`' + optionName + '` refers to no known node');\n      }\n    }\n    if (typeof optionValue === 'function') {\n      node = optionValue();\n      if (!node) {\n        throw new Error('`' + optionName + '` did not return a node');\n      }\n    }\n    return node;\n  }\n\n  function firstFocusNode() {\n    var node;\n    if (getNodeForOption('initialFocus') !== null) {\n      node = getNodeForOption('initialFocus');\n    } else if (container.contains(document.activeElement)) {\n      node = document.activeElement;\n    } else {\n      node = tabbableNodes[0] || getNodeForOption('fallbackFocus');\n    }\n\n    if (!node) {\n      throw new Error('You can\\'t have a focus-trap without at least one focusable element');\n    }\n\n    return node;\n  }\n\n  // This needs to be done on mousedown and touchstart instead of click\n  // so that it precedes the focus event\n  function checkPointerDown(e) {\n    if (config.clickOutsideDeactivates && !container.contains(e.target)) {\n      deactivate({ returnFocus: false });\n    }\n  }\n\n  function checkClick(e) {\n    if (config.clickOutsideDeactivates) return;\n    if (container.contains(e.target)) return;\n    e.preventDefault();\n    e.stopImmediatePropagation();\n  }\n\n  function checkFocus(e) {\n    if (container.contains(e.target)) return;\n    e.preventDefault();\n    e.stopImmediatePropagation();\n    // Checking for a blur method here resolves a Firefox issue (#15)\n    if (typeof e.target.blur === 'function') e.target.blur();\n\n    if (tabEvent) {\n      readjustFocus(tabEvent);\n    }\n  }\n\n  function checkKey(e) {\n    if (e.key === 'Tab' || e.keyCode === 9) {\n      handleTab(e);\n    }\n\n    if (config.escapeDeactivates !== false && isEscapeEvent(e)) {\n      deactivate();\n    }\n  }\n\n  function handleTab(e) {\n    updateTabbableNodes();\n\n    if (e.target.hasAttribute('tabindex') && Number(e.target.getAttribute('tabindex')) < 0) {\n      return tabEvent = e;\n    }\n\n    e.preventDefault();\n    var currentFocusIndex = tabbableNodes.indexOf(e.target);\n\n    if (e.shiftKey) {\n      if (e.target === firstTabbableNode || tabbableNodes.indexOf(e.target) === -1) {\n        return tryFocus(lastTabbableNode);\n      }\n      return tryFocus(tabbableNodes[currentFocusIndex - 1]);\n    }\n\n    if (e.target === lastTabbableNode) return tryFocus(firstTabbableNode);\n\n    tryFocus(tabbableNodes[currentFocusIndex + 1]);\n  }\n\n  function updateTabbableNodes() {\n    tabbableNodes = tabbable(container);\n    firstTabbableNode = tabbableNodes[0];\n    lastTabbableNode = tabbableNodes[tabbableNodes.length - 1];\n  }\n\n  function readjustFocus(e) {\n    if (e.shiftKey) return tryFocus(lastTabbableNode);\n\n    tryFocus(firstTabbableNode);\n  }\n}\n\nfunction isEscapeEvent(e) {\n  return e.key === 'Escape' || e.key === 'Esc' || e.keyCode === 27;\n}\n\nfunction tryFocus(node) {\n  if (!node || !node.focus) return;\n  if (node === document.activeElement)  return;\n\n  node.focus();\n  if (node.tagName.toLowerCase() === 'input') {\n    node.select();\n  }\n}\n\nmodule.exports = focusTrap;\n"]},"metadata":{},"sourceType":"script"}