{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.config = exports.default = undefined;\n\nvar _lyra = require('./lyra');\n\nObject.defineProperty(exports, 'default', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_lyra).default;\n  }\n});\n\nrequire('@webex/internal-plugin-mercury');\n\nrequire('@webex/internal-plugin-encryption');\n\nrequire('@webex/internal-plugin-conversation');\n\nrequire('@webex/internal-plugin-feature');\n\nvar _webexCore = require('@webex/webex-core');\n\nvar _lyra2 = _interopRequireDefault(_lyra);\n\nvar _config = require('./config');\n\nvar _config2 = _interopRequireDefault(_config);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\n(0, _webexCore.registerInternalPlugin)('lyra', _lyra2.default, {\n  config: _config2.default\n});\n/*!\n * Copyright (c) 2015-2019 Cisco Systems, Inc. See LICENSE file.\n */\n\nexports.config = _config2.default;","map":{"version":3,"sources":["index.js"],"names":["Lyra","config","default"],"mappings":";;;;;;;AAUA,IAAA,KAAA,GAAA,OAAA,CAAA,QAAA,CAAA;;;;;yCAOQE,O;;;;AAbR,OAAA,CAAA,gCAAA,CAAA;;AACA,OAAA,CAAA,mCAAA,CAAA;;AACA,OAAA,CAAA,qCAAA,CAAA;;AACA,OAAA,CAAA,gCAAA,CAAA;;AAEA,IAAA,UAAA,GAAA,OAAA,CAAA,mBAAA,CAAA;;;;AAEA,IAAA,OAAA,GAAA,OAAA,CAAA,UAAA,CAAA;;;;;;;;;;AAEA,CAAA,GAAA,UAAA,CAAA,sBAAA,EAAA,MAAA,EAA+BF,MAAAA,CAA/B,OAAA,EAAqC;AACnCC,EAAAA,MAAAA,EAAAA,QAAAA,CAAAA;AADmC,CAArC;AAbA;;;;QAkBQA,M,GAAAA,QAAAA,CAAAA,O","sourcesContent":["/*!\n * Copyright (c) 2015-2019 Cisco Systems, Inc. See LICENSE file.\n */\n\nimport '@webex/internal-plugin-mercury';\nimport '@webex/internal-plugin-encryption';\nimport '@webex/internal-plugin-conversation';\nimport '@webex/internal-plugin-feature';\n\nimport {registerInternalPlugin} from '@webex/webex-core';\nimport Lyra from './lyra';\nimport config from './config';\n\nregisterInternalPlugin('lyra', Lyra, {\n  config\n});\n\nexport {default} from './lyra';\nexport {config};\n"]},"metadata":{},"sourceType":"script"}