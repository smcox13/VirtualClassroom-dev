{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _keys = require('babel-runtime/core-js/object/keys');\n\nvar _keys2 = _interopRequireDefault(_keys);\n\nvar _stringify = require('babel-runtime/core-js/json/stringify');\n\nvar _stringify2 = _interopRequireDefault(_stringify);\n\nvar _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');\n\nvar _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _webexCore = require('@webex/webex-core');\n\nvar _loggerProxy = require('../common/logs/logger-proxy');\n\nvar _loggerProxy2 = _interopRequireDefault(_loggerProxy);\n\nvar _constants = require('../constants');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * @class RechabilityRequest\n */\n\n\nvar RechabilityRequest = function (_StatelessWebexPlugin) {\n  (0, _inherits3.default)(RechabilityRequest, _StatelessWebexPlugin);\n\n  function RechabilityRequest() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    (0, _classCallCheck3.default)(this, RechabilityRequest);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = RechabilityRequest.__proto__ || (0, _getPrototypeOf2.default)(RechabilityRequest)).call.apply(_ref, [this].concat(args))), _this), _this.getClusters = function () {\n      return _this.request({\n        method: _constants.HTTP_VERBS.GET,\n        shouldRefreshAccessToken: false,\n        api: _constants.API.CALLIOPEDISCOVERY,\n        resource: _constants.RESOURCE.CLUSTERS\n      }).then(function (res) {\n        var clusters = res.body.clusters;\n\n        _loggerProxy2.default.logger.info('ReachabilityRequest->getClusters#get clusters successful:' + (0, _stringify2.default)(clusters));\n\n        return (0, _keys2.default)(clusters);\n      });\n    }, _this.remoteSDPForClusters = function (localSDPList) {\n      return _this.request({\n        method: _constants.HTTP_VERBS.POST,\n        shouldRefreshAccessToken: false,\n        api: _constants.API.CALLIOPEDISCOVERY,\n        resource: _constants.RESOURCE.REACHABILITY,\n        body: {\n          offers: localSDPList\n        }\n      }).then(function (res) {\n        _loggerProxy2.default.logger.info('ReachabilityRequest->remoteSDPForClusters#Remote SDPs got succcessfully');\n\n        return res.body;\n      });\n    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);\n  }\n  /**\n   * gets the cluster information\n   * @returns {Promise}\n   */\n\n  /**\n     * gets remote SDP For Clusters\n     * @param {Object} localSDPList localSDPs for the cluster\n     * @returns {Object}\n     */\n\n\n  return RechabilityRequest;\n}(_webexCore.StatelessWebexPlugin);\n\nexports.default = RechabilityRequest;","map":{"version":3,"sources":["request.js"],"names":["RechabilityRequest","StatelessWebexPlugin","getClusters","method","HTTP_VERBS","shouldRefreshAccessToken","api","API","resource","RESOURCE","CLUSTERS","clusters","res","LoggerProxy","remoteSDPForClusters","body","offers"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAA,UAAA,GAAA,OAAA,CAAA,mBAAA,CAAA;;AAEA,IAAA,YAAA,GAAA,OAAA,CAAA,6BAAA,CAAA;;;;AACA,IAAA,UAAA,GAAA,OAAA,CAAA,cAAA,CAAA;;;;;;;AAMA;;;;;IAGMA,kB;;;;;;;;;;;;;;oOAKNE,W,GAAc,YAAA;AAAA,aAAM,KAAA,CAAA,OAAA,CAAa;AAC/BC,QAAAA,MAAAA,EAAQC,UAAAA,CAAAA,UAAAA,CADuB,GAAA;AAE/BC,QAAAA,wBAAAA,EAF+B,KAAA;AAG/BC,QAAAA,GAAAA,EAAKC,UAAAA,CAAAA,GAAAA,CAH0B,iBAAA;AAI/BC,QAAAA,QAAAA,EAAUC,UAAAA,CAAAA,QAAAA,CAASC;AAJY,OAAb,EAAA,IAAA,CAMZ,UAAA,GAAA,EAAS;AAAA,YACNC,QADM,GACMC,GAAAA,CADN,IACMA,CADN,QAAA;;AAGbC,QAAAA,aAAAA,CAAAA,OAAAA,CAAAA,MAAAA,CAAAA,IAAAA,CAAAA,8DAAoF,CAAA,GAAA,WAAA,CAAA,OAAA,EAApFA,QAAoF,CAApFA;;AAEA,eAAO,CAAA,GAAA,MAAA,CAAA,OAAA,EAAP,QAAO,CAAP;AAXU,OAAM,CAAN;aAmBdC,oB,GAAuB,UAAA,YAAA,EAAA;AAAA,aAAkB,KAAA,CAAA,OAAA,CAAa;AACpDX,QAAAA,MAAAA,EAAQC,UAAAA,CAAAA,UAAAA,CAD4C,IAAA;AAEpDC,QAAAA,wBAAAA,EAFoD,KAAA;AAGpDC,QAAAA,GAAAA,EAAKC,UAAAA,CAAAA,GAAAA,CAH+C,iBAAA;AAIpDC,QAAAA,QAAAA,EAAUC,UAAAA,CAAAA,QAAAA,CAJ0C,YAAA;AAKpDM,QAAAA,IAAAA,EAAM;AAACC,UAAAA,MAAAA,EAAD;AAAA;AAL8C,OAAb,EAAA,IAAA,CAOjC,UAAA,GAAA,EAAS;AACbH,QAAAA,aAAAA,CAAAA,OAAAA,CAAAA,MAAAA,CAAAA,IAAAA,CAAAA,yEAAAA;;AAEA,eAAOD,GAAAA,CAAP,IAAA;AAVmB,OAAkB,CAAlB;;;AAvBrB;;;;;AAkBF;;;;;;;;EAnBiCX,UAAAA,CAAAA,oB;;kBAsClBD,kB","sourcesContent":["import {StatelessWebexPlugin} from '@webex/webex-core';\n\nimport LoggerProxy from '../common/logs/logger-proxy';\nimport {\n  HTTP_VERBS,\n  RESOURCE,\n  API\n} from '../constants';\n\n/**\n * @class RechabilityRequest\n */\nclass RechabilityRequest extends StatelessWebexPlugin {\n  /**\n   * gets the cluster information\n   * @returns {Promise}\n   */\ngetClusters = () => this.request({\n  method: HTTP_VERBS.GET,\n  shouldRefreshAccessToken: false,\n  api: API.CALLIOPEDISCOVERY,\n  resource: RESOURCE.CLUSTERS\n})\n  .then((res) => {\n    const {clusters} = res.body;\n\n    LoggerProxy.logger.info(`ReachabilityRequest->getClusters#get clusters successful:${JSON.stringify(clusters)}`);\n\n    return Object.keys(clusters);\n  });\n\n/**\n   * gets remote SDP For Clusters\n   * @param {Object} localSDPList localSDPs for the cluster\n   * @returns {Object}\n   */\nremoteSDPForClusters = (localSDPList) => this.request({\n  method: HTTP_VERBS.POST,\n  shouldRefreshAccessToken: false,\n  api: API.CALLIOPEDISCOVERY,\n  resource: RESOURCE.REACHABILITY,\n  body: {offers: localSDPList}\n})\n  .then((res) => {\n    LoggerProxy.logger.info('ReachabilityRequest->remoteSDPForClusters#Remote SDPs got succcessfully');\n\n    return res.body;\n  });\n}\n\nexport default RechabilityRequest;\n"]},"metadata":{},"sourceType":"script"}