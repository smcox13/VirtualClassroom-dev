{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = undefined;\n\nvar _promise = require('babel-runtime/core-js/promise');\n\nvar _promise2 = _interopRequireDefault(_promise);\n\nvar _typeof2 = require('babel-runtime/helpers/typeof');\n\nvar _typeof3 = _interopRequireDefault(_typeof2);\n\nvar _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');\n\nvar _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _omit2 = require('lodash/omit');\n\nvar _omit3 = _interopRequireDefault(_omit2);\n\nvar _get2 = require('lodash/get');\n\nvar _get3 = _interopRequireDefault(_get2);\n\nvar _util = require('util');\n\nvar _util2 = _interopRequireDefault(_util);\n\nvar _httpCore = require('@webex/http-core');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * @class\n */\n\n/*!\n * Copyright (c) 2015-2019 Cisco Systems, Inc. See LICENSE file.\n */\n\n\nvar ResponseLoggerInterceptor = function (_Interceptor) {\n  (0, _inherits3.default)(ResponseLoggerInterceptor, _Interceptor);\n\n  function ResponseLoggerInterceptor() {\n    (0, _classCallCheck3.default)(this, ResponseLoggerInterceptor);\n    return (0, _possibleConstructorReturn3.default)(this, (ResponseLoggerInterceptor.__proto__ || (0, _getPrototypeOf2.default)(ResponseLoggerInterceptor)).apply(this, arguments));\n  }\n\n  (0, _createClass3.default)(ResponseLoggerInterceptor, [{\n    key: 'onResponse',\n\n    /**\n     * @see Interceptor#onRequest\n     * @param {Object} options\n     * @param {HttpResponse} response\n     * @returns {Object}\n     */\n    value: function onResponse(options, response) {\n      var now = new Date();\n      this.printResponseHeader(options, response);\n      var logger = (0, _get3.default)(this, 'webex.logger', console);\n\n      if (process.env.ENABLE_VERBOSE_NETWORK_LOGGING) {\n        logger.info('timestamp (end): ', now.getTime(), now.toISOString());\n\n        if (typeof response.body === 'string' || Buffer.isBuffer(response.body)) {\n          logger.info('Response: ', 'Not printed, it`s probably a file');\n        } else if ((0, _typeof3.default)(response.body) === 'object') {\n          try {\n            logger.info('Response: ', _util2.default.inspect((0, _omit3.default)(response.body, 'features'), {\n              depth: null\n            }));\n          } catch (err) {\n            logger.info('Response: ', '[Not Serializable]', err);\n          }\n        }\n      }\n\n      logger.info('\\\\**********************************************************************/');\n      return response;\n    }\n    /**\n     * @see Interceptor#onRequest\n     * @param {Object} options\n     * @param {Object} reason\n     * @returns {Object}\n     */\n\n  }, {\n    key: 'onResponseError',\n    value: function onResponseError(options, reason) {\n      var now = new Date();\n      this.printResponseHeader(options, reason);\n      var logger = (0, _get3.default)(this, 'webex.logger', console);\n\n      if (process.env.ENABLE_VERBOSE_NETWORK_LOGGING) {\n        logger.info('timestamp (end): ', now.getTime(), now.toISOString());\n\n        try {\n          logger.error('Response: ', _util2.default.inspect(reason.body, {\n            depth: null\n          }));\n        } catch (err) {\n          logger.error('Response: ', reason.body);\n        }\n      }\n\n      logger.info('\\\\**********************************************************************/');\n      return _promise2.default.reject(reason);\n    }\n    /**\n     * Prints the basic header\n     * @param {Object} options\n     * @param {HttpResponse|WebexHttpError} response\n     * @returns {undefined}\n     */\n\n  }, {\n    key: 'printResponseHeader',\n    value: function printResponseHeader(options, response) {\n      var logger = (0, _get3.default)(this, 'webex.logger', console);\n      logger.info('Status Code:', response.statusCode);\n      logger.info('WEBEX_TRACKINGID:', (0, _get3.default)(options, 'headers.trackingid') || (0, _get3.default)(response, 'headers.trackingid'));\n      logger.info('Network duration:', options.$timings.networkEnd - options.$timings.networkStart);\n      logger.info('Processing duration:', options.$timings.requestEnd - options.$timings.requestStart);\n    }\n  }], [{\n    key: 'create',\n\n    /**\n     * @returns {ResponseLoggerInterceptor}\n     */\n    value: function create() {\n      return new ResponseLoggerInterceptor({\n        webex: this\n      });\n    }\n  }]);\n  return ResponseLoggerInterceptor;\n}(_httpCore.Interceptor);\n\nexports.default = ResponseLoggerInterceptor;","map":{"version":3,"sources":["response-logger.js"],"names":["ResponseLoggerInterceptor","Interceptor","webex","options","response","now","logger","process","Buffer","util","depth","reason"],"mappings":"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","sourcesContent":["/*!\n * Copyright (c) 2015-2019 Cisco Systems, Inc. See LICENSE file.\n */\n\nimport {get, omit} from 'lodash';\nimport util from 'util';\nimport {Interceptor} from '@webex/http-core';\n\n/**\n * @class\n */\nexport default class ResponseLoggerInterceptor extends Interceptor {\n  /**\n   * @returns {ResponseLoggerInterceptor}\n   */\n  static create() {\n    return new ResponseLoggerInterceptor({webex: this});\n  }\n\n  /**\n   * @see Interceptor#onRequest\n   * @param {Object} options\n   * @param {HttpResponse} response\n   * @returns {Object}\n   */\n  onResponse(options, response) {\n    const now = new Date();\n\n    this.printResponseHeader(options, response);\n\n    const logger = get(this, 'webex.logger', console);\n\n    if (process.env.ENABLE_VERBOSE_NETWORK_LOGGING) {\n      logger.info('timestamp (end): ', now.getTime(), now.toISOString());\n      if (typeof response.body === 'string' || Buffer.isBuffer(response.body)) {\n        logger.info('Response: ', 'Not printed, it`s probably a file');\n      }\n      else if (typeof response.body === 'object') {\n        try {\n          logger.info('Response: ', util.inspect(omit(response.body, 'features'), {depth: null}));\n        }\n        catch (err) {\n          logger.info('Response: ', '[Not Serializable]', err);\n        }\n      }\n    }\n    logger.info('\\\\**********************************************************************/');\n\n    return response;\n  }\n\n  /**\n   * @see Interceptor#onRequest\n   * @param {Object} options\n   * @param {Object} reason\n   * @returns {Object}\n   */\n  onResponseError(options, reason) {\n    const now = new Date();\n\n    this.printResponseHeader(options, reason);\n\n    const logger = get(this, 'webex.logger', console);\n\n    if (process.env.ENABLE_VERBOSE_NETWORK_LOGGING) {\n      logger.info('timestamp (end): ', now.getTime(), now.toISOString());\n      try {\n        logger.error('Response: ', util.inspect(reason.body, {depth: null}));\n      }\n      catch (err) {\n        logger.error('Response: ', reason.body);\n      }\n    }\n    logger.info('\\\\**********************************************************************/');\n\n    return Promise.reject(reason);\n  }\n\n  /**\n   * Prints the basic header\n   * @param {Object} options\n   * @param {HttpResponse|WebexHttpError} response\n   * @returns {undefined}\n   */\n  printResponseHeader(options, response) {\n    const logger = get(this, 'webex.logger', console);\n\n    logger.info('Status Code:', response.statusCode);\n    logger.info('WEBEX_TRACKINGID:', get(options, 'headers.trackingid') || get(response, 'headers.trackingid'));\n    logger.info('Network duration:', options.$timings.networkEnd - options.$timings.networkStart);\n    logger.info('Processing duration:', options.$timings.requestEnd - options.$timings.requestStart);\n  }\n}\n"]},"metadata":{},"sourceType":"script"}