{"version":3,"sources":["pages/Landing.js","pages/Orchestrator.js","pages/Login.js","pages/Header.js","pages/Home.js","pages/GeneralForm.js","pages/FileUpload.js","pages/ManualEntry.js","pages/Review.js","pages/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["Landing","textChange","text","setState","mail","target","value","validateEmail","onSubmit","event","window","sessionStorage","setItem","state","error","alert","props","history","push","pathname","shouldLogin","bind","this","email","lastAtPos","lastIndexOf","lastDotPos","indexOf","length","localStorage","removeItem","className","style","display","justifyContent","alignItems","height","fontSize","marginTop","name","type","inputSize","placeholder","onChange","onFocus","onBlur","borderRadius","children","color","disabled","onClick","ariaPressed","paddingTop","href","src","width","alt","React","Component","API_URL","requestCreateSpace","spaceInfo","a","getItem","token","method","headers","Headers","Authorization","body","requestOptions","fetch","response","json","data","console","log","spaceID","Login","undefined","location","delegate","authInfo","then","access_token","setTimeout","requestAccessToken","centerAllign","size","Header","tab","hideGrid","tabBar","textAlign","border","active","backgroundColor","title","Home","addClasses","to","classList","JSON","parse","paddingBottom","map","item","key","spaceId","paddingLeft","time","open","GeneralForm","startTimeSelected","h","m","z","day","hour","startTime","endTimeSelected","endTime","courseNumber","period","recurrence","date","Date","classNameError","courseNumberError","onTextChange","toggleSwitch","saveClick","cancelClick","obj","e","handleInputClick","errorMsg","message","preventDefault","newClass","lastDay","classObj","stringify","label","messageArr","htmlId","defaultValue","onSelect","opts","selectedTime","inputId","direction","shouldCloseOnSelect","ref","simulateClick","background","readOnly","checked","FileUpload","uploadedFile","studentList","lastIndex","fileRef","createRef","uploadClicked","onSelectFile","fileObj","studentObj","current","click","stopPropagation","file","files","schema","prop","String","required","readXlsxFile","rows","errors","students","studentId","process","marginRight","downloadClicked","marginLeft","ManualEntry","firstName","lastName","firstNameError","lastNameError","emailError","addInfo","updateInfo","deleteInfo","newStudent","temp","id","findIndex","without","handleDoneEditing","inputText","Review","showDialog","showActivity","modalDialogRef","activityDialogRef","editClass","editStudents","closeModal","participants","student","privilege","teacher","caseNumber","teamId","classroom","icon","applicationId","onHide","show","headerLabel","ariaLabel","NotFound","App","path","component","exact","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.02a701f8.chunk.js","sourcesContent":["import React from 'react';\nimport { Input, Button } from '@momentum-ui/react';\n\nclass Landing extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            mail: null,\n            error: true\n        };\n        this.validateEmail = this.validateEmail.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n\n    textChange = text => {\n        this.setState( {mail: text.target.value} )\n        this.validateEmail();\n    }\n\n    validateEmail() {\n        this.setState({error: false});\n        let email = this.state.mail;\n        if (email === null) {\n            this.setState({error: true});\n            return ;\n        }\n        let lastAtPos = email.lastIndexOf('@');\n        let lastDotPos = email.lastIndexOf('.');\n        if (!(lastAtPos < lastDotPos &&\n              lastAtPos > 0 &&\n              email.indexOf('@@') === -1 &&\n              lastDotPos > 2 &&\n             (email.length - lastDotPos) > 2)) {\n                 this.setState({error: true});\n        }\n    }\n\n    onSubmit = (event) => {\n        this.validateEmail();\n        window.sessionStorage.setItem('accessToken','abc');\n        if (!this.state.error) {\n            this.props.history.push({\n                pathname: '/auth',\n                mail: this.state.mail,\n                shouldLogin: 'login',\n            });\n        } else {\n            alert('Please enter valid email address!');\n        }\n    }\n\n    render() {\n        localStorage.removeItem('classList');\n        return (\n            <div className=\"grid\" style={{display: 'flex',  justifyContent:'center', alignItems:'center', height: '100vh'}}>\n              <div className=\"row\">\n                <div className=\"large-4 large-offset-1 columns\">\n                    <p style={{fontSize:22}}>Cisco Webex Teams </p>\n                    <p style={{fontSize:30}}>Seamlessly take your classroom virtual.</p>\n                    <p style={{fontSize:16}}>\n                        Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n                        Suspendisse molestie in felis id tincidunt. Ut suscipit vestibulum sagittis.\n                        Nam ultrices porta sapien, sed tincidunt urna egestas id.\n                        Sed finibus felis eget turpis posuere, sed dapibus dui pretium.\n                    </p>\n                    <div className=\"row\" style={{marginTop:20}}>\n                      <div className=\"large-8 columns\">\n                          <Input\n                              name='defaultInput'\n                              type='email'\n                              inputSize='large-15'\n                              placeholder='Enter your work Email address'\n                              onChange={this.textChange}\n                              onFocus={this.onFocus}\n                              onBlur={this.textChange}\n                              style={{borderRadius:'18px'}}\n                            />\n                      </div>\n                      <div className=\"large-4 columns\">\n                          <Button\n                              children='Start for free'\n                              color='blue'\n                              disabled={this.state.error}\n                              onClick={this.onSubmit}\n                              ariaPressed={false}\n                            />\n                      </div>\n                    </div>\n                    <p style={{fontSize:11, paddingTop:10}}>\n                      By clicking 'Start for free' you understand and agree to the\n                      <a href=\"https://www.cisco.com/c/en/us/about/legal/terms-conditions.html\"> Cisco Terms of Services.</a>\n                    </p>\n                </div>\n                <div className=\"large-6 columns\">\n                    <img  src=\"story.png\" style={{width:500, height:350}} alt=\"Simple Story Illustration\"/>\n                </div>\n              </div>\n            </div>\n        );\n    }\n}\nexport default Landing;\n\n/*\nnavToLogin = () => {\n    window.location.href=\"/login/pratison@cisco.com\"\n}\n<button onClick={() => this.navToLogin()}>Start for Free</button>\n*/\n\n/*\n<Link to={{\n    pathname: '/login',\n    mail: this.state.mail\n}}>\n</Link>\n*/\n","const API_URL = 'https://corch.pegatsdemo.com/prweb/PRRestService/';\n// Testing\nconst CLIENT_ID = '40103787840015937566';\nconst CLIENT_SECRET = '4394A7AFA1AE900AD96606478619229B';\n\nexport function requestAccessToken(delegate) {\n    const authInfo = `grant_type=client_credentials&client_id=${CLIENT_ID}&client_secret=${CLIENT_SECRET}`;\n    const requestOptions = {\n        method: 'POST',\n        headers: new Headers({\n            'Content-Type': 'application/x-www-form-urlencoded',\n        }),\n        body: authInfo,\n    };\n\n    return fetch(`${API_URL}oauth2/v1/token`, requestOptions)\n    .then(response => response.json())\n    .then(response => sessionStorage.setItem('access_token',response.access_token))\n    .then(response => setTimeout(delegate,100));\n}\n\nexport async function requestCreateSpace(spaceInfo) {\n    const token = await sessionStorage.getItem('access_token');\n    const requestOptions = await {\n        method: 'POST',\n        headers: new Headers({\n            Authorization: `Bearer ${token}`,\n            'Content-Type': 'application/json',\n        }),\n        body: spaceInfo,\n    };\n\n    try {\n        const response = await fetch(`${API_URL}ControllerPilot/v1/CreateSpace`, requestOptions);\n        const data = await response.json();\n        await console.log(data);\n        return await data.spaceID;\n    } catch (err) {\n        console.log(err);\n    }\n    // .then(response => response.json());\n    // .then(response => console.log(response));\n    // .then(response => setTimeout(delegate,100));\n}\n","import React from 'react';\nimport {requestAccessToken} from './Orchestrator.js';\nimport {\n    Input,\n    Button\n} from '@momentum-ui/react';\n\nclass Login extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            mail: props.location.mail,\n            error: true,\n        }\n        this.textChange = this.textChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n\n    textChange = text => {\n        if (this.props.location.mail !== undefined) {\n            sessionStorage.setItem('userInfo',this.props.location.mail);\n            this.setState( {error: false} )\n        }\n    }\n\n    onSubmit = (event) => {\n        requestAccessToken(() => this.props.history.push('/addClasses'));\n        // this.props.history.push({\n        //     pathname: '/addClasses',\n        // });\n    }\n\n    render() {\n        const mail = this.props.location.mail;\n        const centerAllign = {display: 'flex',  justifyContent:'center', alignItems:'center'};\n        return (\n            <div className=\"grid\">\n                <div className=\"row\" style={centerAllign}>\n                    <img  src=\"webex.png\" style={{width:100, height:100, marginTop:200}} alt=\"Webex logo\"/>\n                </div>\n                <div className=\"row\" style={centerAllign}>\n                    <t style={{marginTop: 20}}>Hello {mail}</t>\n                </div>\n                <div className=\"row\" style={centerAllign}>\n                    <Input\n                        name='defaultInput'\n                        type='password'\n                        inputSize='large-15'\n                        placeholder='Password'\n                        onChange={this.textChange}\n                        style={{borderRadius:'18px', marginTop: 20}}\n                      />\n                </div>\n                <div className=\"row\" style={centerAllign}>\n                    <Button\n                        children='Sign In'\n                        color='blue'\n                        size={20}\n                        disabled={this.state.error}\n                        onClick={this.onSubmit}\n                        ariaPressed={false}\n                      />\n                </div>\n                <div className=\"row\" style={centerAllign}>\n                      <a href=\"https://help.webex.com/en-us/\" style={{marginTop: 20}}> Forgot password?</a>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Login;\n\n/*\nconst webex = window.webex = Webex.init({\n  config: {\n    credentials: {\n      client_id: 'C190e9a362204470aa77adb388e66e78ca175ac471e215ce269540297660be61e',\n      redirect_uri: 'http://localhost:3000/addClasses',\n      scope: 'spark:all spark:kms',\n    }\n    }\n});\nconst token = RegExp('[#&]' + 'access_token' + '=([^&]*)').exec(window.location.hash);\n\nif (this.props.location.shouldLogin === 'login' ) {\n    webex.authorization.initiateLogin();\n} if (this.props.location.shouldLogin === 'logout' ) {\n    window.sessionStorage.removeItem('accessToken');\n    webex.logout();\n}\n*/\n\n/*\nconst webex = window.webex = Webex.init({\n  config: {\n    credentials: {\n      authorizationString: 'https://webexapis.com/v1/authorize?client_id=C190e9a362204470aa77adb388e66e78ca175ac471e215ce269540297660be61e&response_type=code&redirect_uri=http%3A%2F%2Flocalhost%3A3000%2FaddClasses&scope=spark%3Aall%20spark%3Akms&state=set_state_here',\n      clientType: 'confidential',\n  },\n    }\n});\n*/\n","import React from 'react';\nimport { Avatar } from '@momentum-ui/react';\n\nconst Header = ({tab}) => {\n    const hideGrid = {\n        marginTop: 20\n    };\n    const tabBar = {marginTop: 20,\n                    height: 40,\n                    textAlign: 'center',\n                    border: '1px solid #e5e5e5',\n    };\n    const active = {marginTop: 20,\n                    height: 40,\n                    textAlign: 'center',\n                    border: '1px solid #e5e5e5',\n                    backgroundColor: '#e6f9fc'\n    };\n\n    return(\n        <div className=\"grid\">\n            <div className=\"row large-offset-1\">\n                <div className=\"columns large-11\" style={hideGrid}>\n                    <h1>Classroom Set Up</h1>\n                </div>\n                <div className=\"columns large-1 columns_new\" style={hideGrid}>\n                    <Avatar title=\"Barbara\" src=\"http://react.collab-ui.com/barbara.png\"/>\n                </div>\n            </div>\n            <div className=\"row large-offset-1\" style={tab === undefined ? {display: \"none\"} : {}}>\n                <div className=\"columns large-3\" style={tab === 'general' ? active : tabBar}>\n                        <h3>General Info</h3>\n                </div>\n                <div className=\"columns large-3\" style={tab === 'file' ? active : tabBar}>\n                    <h3>Add Students(Upload)</h3>\n                </div>\n                <div className=\"columns large-3\" style={tab === 'manual' ? active : tabBar}>\n                    <h3>Add Students(Manual)</h3>\n                </div>\n                <div className=\"columns large-3\" style={tab === 'review' ? active : tabBar}>\n                    <h3>Review</h3>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Header;\n","import React from 'react';\nimport {\n     Button,\n} from '@momentum-ui/react';\nimport {\n    Redirect,\n} from 'react-router-dom';\nimport Header from './Header.js';\n\nclass Home extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n\n        };\n        this.addClasses = this.addClasses.bind(this);\n    }\n\n    componentDidMount() {\n    }\n\n    addClasses = (event) => {\n        this.props.history.push('/classroomSetup');\n    }\n\n    render() {\n        const token = sessionStorage.getItem('access_token');\n        if (token === null) {\n            return <Redirect to='/'/>;\n        }\n\n        const classList = JSON.parse(localStorage.getItem('classList'));\n\n        const hideGrid = {\n            marginTop: 20\n        };\n\n        return (\n            <div className=\"grid\" style={{paddingTop:20}}>\n                <Header />\n                <div className=\"row large-offset-1\">\n                    <div className=\"columns large-6\" style={hideGrid}>\n                        For each class, we'll walk you through the set-up process. Youll need names and email addresses of students for the set-up process.\n                    </div>\n                </div>\n                <div className=\"row large-offset-1\">\n                    <div className=\"large-3 columns\" style={hideGrid}>\n                        <Button\n                            children='Add Class'\n                            color='blue'\n                            onClick={this.addClasses}\n                            ariaPressed={false}\n                          />\n                    </div>\n                </div>\n                <div className=\"row large-offset-1\" style={classList === null ? {hideGrid} : {display: \"none\"}}>\n                    <div className=\"large-8 large-centered columns\">\n                        <img  alt=\"addClass\" src=\"addClass.png\"/>\n                    </div>\n                </div>\n                <div className=\"row large-offset-1\" style={classList === null ? {display: \"none\"} : {paddingTop: 40, paddingBottom: 20}}>\n                    <h1>Classes</h1>\n                </div>\n                {classList !== null ? classList.map(item => (\n                    <div className=\"row\"  key={item.spaceId} style={{paddingLeft: '1%', width: '95%'}}>\n                        <div className=\"large-10 columns\">\n                            {item.name}\n                            <p>{item.time}</p>\n                        </div>\n                        <div className=\"large-2 columns\">\n                            <Button\n                                children='Open in Teams'\n                                color='blue'\n                                onClick={() => window.open(`https://teams.webex.com/spaces/${item.spaceId}/chat`,'_blank')}\n                                ariaPressed={false}\n                              />\n                        </div>\n                        <hr style={{height: 1, width: '95%', border: 'none', color: 'grey', backgroundColor: 'grey'}}></hr>\n                    </div>\n                )) : <div></div>}\n            </div>\n        );\n    }\n}\n\nexport default Home;\n\n/*\nwindow.open('https://teams.webex.com/spaces/spaceID/chat','_blank');\n*/\n","import React from 'react';\nimport {\n    Input,\n    Button,\n    Select,\n    SelectOption,\n    DatePicker,\n    TimePicker,\n    ToggleSwitch,\n} from '@momentum-ui/react';\nimport {\n    Redirect,\n} from 'react-router-dom';\nimport Header from './Header.js';\n\nclass GeneralForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            className: null,\n            courseNumber: null,\n            period: '1',\n            startTime: '12:00PM',\n            endTime: '1:00PM',\n            recurrence: 'Daily (M-F)',\n            date: new Date(),\n            classNameError: {},\n            courseNumberError: {},\n        }\n        this.onTextChange = this.onTextChange.bind(this);\n        this.startTimeSelected = this.startTimeSelected.bind(this);\n        this.endTimeSelected = this.endTimeSelected.bind(this);\n        this.toggleSwitch = this.toggleSwitch.bind(this);\n        this.saveClick = this.saveClick.bind(this);\n        this.cancelClick = this.cancelClick.bind(this);\n\n    }\n\n     componentDidMount(props) {\n         const obj = JSON.parse(sessionStorage.getItem('classObj'));\n         if (obj !== null) {\n             this.setState({\n                 className: obj.className,\n                 courseNumber: obj.courseNumber,\n                 period: obj.period,\n                 startTime: obj.startTime,\n                 endTime: obj.endTime,\n                 recurrence: obj.recurrence,\n                 date: obj.date,\n             });\n         }\n     }\n\n     simulateClick(e) {\n         if (e !== null) {\n             e.handleInputClick();\n         }\n     }\n\n     onTextChange(e) {\n         const target = e.target;\n         const value = target.value;\n         const name = target.name;\n\n         let errorMsg = {};\n         if (value === '') {\n             errorMsg = { message: 'Please enter Class information', type: 'error' };\n         }\n         this.setState({\n           [name]: value,\n           [`${name}Error`]: errorMsg,\n         });\n\n     }\n\n     startTimeSelected = (h,m,z) => {\n         let day = 'AM';\n         let hour = h-12 > 0 ? h-12 : h;\n         if (h-12 >= 0) {\n             day = 'PM';\n         }\n         if (hour === 0) {\n             hour = 12;\n         }\n         this.setState({\n            startTime: `${hour}:${m}${day}`,\n         });\n     }\n\n     endTimeSelected = (h,m,z) => {\n         let day = 'AM';\n         let hour = h-12 > 0 ? h-12 : h;\n         if (h-12 >= 0) {\n             day = 'PM';\n         }\n         if (hour === 0) {\n             hour = 12;\n         }\n         this.setState({\n            endTime: `${hour}:${m}${day}`,\n         });\n     }\n\n     toggleSwitch(e) {\n\n     }\n\n     cancelClick(e) {\n         sessionStorage.removeItem('classObj');\n         sessionStorage.removeItem('studentList');\n         sessionStorage.removeItem('uploadedFile');\n         this.props.history.push('/addClasses');\n     }\n\n     saveClick(e) {\n         e.preventDefault();\n         if (this.state.className === null) {\n             this.setState({\n                 classNameError: { message: 'Please enter Class Name.', type: 'error' },\n             });\n         } else if (this.state.courseNumber === null) {\n             this.setState({\n                 courseNumberError: { message: 'Please enter student Course Number.', type: 'error' },\n             });\n         } else {\n             let newClass = {\n                 className: this.state.className,\n                 courseNumber: this.state.courseNumber,\n                 period: this.state.period,\n                 startTime: this.state.startTime,\n                 endTime: this.state.endTime,\n                 recurrence: this.state.recurrence,\n                 lastDay: this.state.date,\n             };\n\n             this.setState({\n                 classObj: newClass,\n             });\n\n             sessionStorage.setItem('classObj',JSON.stringify(newClass));\n\n              this.props.history.push('/fileUpload');\n         }\n     }\n\n    render() {\n        const token = sessionStorage.getItem('access_token');\n        if (token === null) {\n            return <Redirect to='/'/>;\n        }\n\n        const hideGrid = {\n            // background:'white',\n            // borderColor:'white'\n            marginTop: 20\n        };\n\n        let className = this.state.className;\n        let courseNumber = this.state.courseNumber;\n        let period = this.state.period;\n        let recurrence = this.state.recurrence;\n        let startTime = this.state.startTime;\n        let endTime = this.state.endTime;\n        let date = this.state.date;\n\n        return (\n            <div className=\"grid\" style={{paddingTop:20}}>\n                <Header tab='general'/>\n                <div className=\"row large-offset-1\">\n                    <div className=\"columns large-11\" style={hideGrid}>\n                        <p style={{fontSize:16}}>Enter Class Name, Course Number, and select the Period. This information will be used to create the title of the space that will be\n                            generated in Webex Teams. If you need to change anything, you’ll be able to edit this information later.</p>\n                    </div>\n                </div>\n                <div className=\"row large-offset-1\">\n                    <div className=\"columns large-4\" style={hideGrid}>\n                        <Input\n                            name='className'\n                            label='Class Name*'\n                            type='text'\n                            inputSize='large-15'\n                            placeholder='e.g. Algebra'\n                            value={className}\n                            onChange={this.onTextChange}\n                            messageArr={[ this.state.classNameError ]}\n                            htmlId='className'\n                          />\n                    </div>\n                    <div className=\"columns large-4\" style={hideGrid}>\n                        <Input\n                            name='courseNumber'\n                            label='Course Number*'\n                            type='text'\n                            inputSize='large-15'\n                            placeholder='123456'\n                            value={courseNumber}\n                            onChange={this.onTextChange}\n                            messageArr={[ this.state.courseNumberError ]}\n                            htmlId='courseNumber'\n                          />\n                    </div>\n                    <div className=\"columns large-4\" style={hideGrid}>\n                        Period\n                        <Select className='hide-grid' defaultValue={period} color='white' onSelect={(e, opts) => {this.setState({period: e[0].value})}}>\n                          <SelectOption value='1' label='1' />\n                          <SelectOption value='3' label='3' />\n                          <SelectOption value='6' label='6' />\n                        </Select>\n                    </div>\n                </div>\n                <div className=\"row large-offset-1\" >\n                    <div className=\"columns large-11\" style={hideGrid}>\n                        <p style={{fontSize:16}}>Enter the scheduling information for this class. Using this infomartion, a series of meeting from now until the end of the year will be created. Don’t worry, you can make changes later.</p>\n                    </div>\n                </div>\n                <div className=\"row large-offset-1\">\n                    <div className=\"columns large-2\" style={hideGrid}>\n                        Start Time*\n                        <TimePicker\n                            selectedTime={new Date()}\n                            inputId='startTime'\n                            onChange={this.startTimeSelected}\n                        />\n                        End Time*\n                        <TimePicker\n                            selectedTime={new Date()}\n                            inputId='endTime'\n                            onChange={this.endTimeSelected}\n                        />\n                        Recurrence\n                        <Select defaultValue={recurrence} onSelect={(e, opts) => {this.setState({recurrence: e[0].value})}}>\n                          <SelectOption value='Monday' label='Monday' />\n                          <SelectOption value='Tuesday' label='Tuesday' />\n                          <SelectOption value='Wednesday' label='Wednesday' />\n                          <SelectOption value='Thursday' label='Thursday' />\n                          <SelectOption value='Friday' label='Friday' />\n                          <SelectOption value='Daily (M-F)' label='Daily (M-F)' />\n                        </Select>\n                    </div>\n                    <div className=\"columns large-8\" style={{marginTop:10}}>\n                        <DatePicker direction='bottom-left' shouldCloseOnSelect={false} onSelect={(e, date) => this.setState({ date: date })} ref={this.simulateClick}>\n                            <Input style={{background:'transparent'}}\n                                inputSize='large-10'\n                                value='Last Day*'\n                                readOnly\n                              />\n                        </DatePicker>\n                    </div>\n                </div>\n                <div className=\"row large-offset-1\">\n                    <div className=\"columns large-11\" style={{marginTop:35}}>\n                        <p style={{fontSize:16}}>The Attendance Log tracks attendance of students for the class meeting you set up with this tool.</p>\n                    </div>\n                </div>\n                <div className=\"row large-offset-1\">\n                    <div className=\"columns large-2\" style={hideGrid}>\n                        <h3>Attendance Log</h3>\n                    </div>\n                    <div className=\"columns large-10\" style={{marginTop:25}}>\n                        <ToggleSwitch\n                                checked={true}\n                                onChange={this.toggleSwitch}\n                                htmlId='testToggleSwitch1'\n                          />\n                    </div>\n                </div>\n                <div className=\"row large-offset-1\" style={{marginTop:40}}>\n                    <div className=\"large-2 columns\">\n                        <Button\n                            children='Cancel'\n                            color='blue-outline'\n                            onClick={this.cancelClick}\n                            style={{color:'blue',borderRadius:5}}\n                            ariaPressed={false}\n                          />\n                    </div>\n                    <div className=\"large-1 columns\">\n                        <Button\n                            children='Continue'\n                            color='blue'\n                            onClick={this.saveClick}\n                            ariaPressed={false}\n                          />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default GeneralForm;\n\n/*\n<t>Last Day*</t>\n*/\n\n/*\n<Input\nname='startTime'\nlabel='Start Time*'\ntype='text'\ninputSize='large-15'\nplaceholder='8:40 AM'\nvalue={this.startTime}\nhtmlId='startTime'\n/>\n<Input\nname='endTime'\nlabel='End Time*'\ntype='text'\ninputSize='large-15'\nplaceholder='9:30 AM'\nvalue={this.endTime}\nhtmlId='endTime'\n/>\n*/\n","import React from 'react';\nimport readXlsxFile from 'read-excel-file'\nimport {\n    Button,\n} from '@momentum-ui/react';\nimport {\n    Redirect,\n} from 'react-router-dom';\nimport Header from './Header.js';\n\nclass FileUpload extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            uploadedFile: null,\n            studentList: null,\n            lastIndex: 1,\n        }\n        this.fileRef = React.createRef();\n        this.uploadClicked = this.uploadClicked.bind(this);\n        this.onSelectFile = this.onSelectFile.bind(this);\n        this.saveClick = this.saveClick.bind(this);\n        this.cancelClick = this.cancelClick.bind(this);\n    }\n\n     componentDidMount(props) {\n         const fileObj = JSON.parse(sessionStorage.getItem('uploadedFile'));\n         const studentObj = JSON.parse(sessionStorage.getItem('studentList'));\n         if (fileObj !== null) {\n             this.setState({ uploadedFile: fileObj });\n         }\n         if (studentObj !== null) {\n             this.setState({ studentList: studentObj });\n         }\n     }\n\n    uploadClicked(e) {\n        if (this.state.uploadedFile === null ) {\n            this.fileRef.current.click();\n        } else {\n            this.setState({\n                uploadedFile: null,\n                studentList: null,\n            });\n        }\n    }\n\n    onSelectFile(e) {\n        e.stopPropagation();\n        e.preventDefault();\n        var file = e.target.files[0];\n        this.setState({\n            uploadedFile: file.name,\n        });\n        const schema = {\n                        'First Name': {\n                            prop: 'firstName',\n                            type: String,\n                            required: true\n                        },\n                        'Last Name': {\n                            prop: 'lastName',\n                            type: String,\n                            required: true\n                        },\n                        'Email': {\n                            prop: 'email',\n                            type: String,\n                            required: true\n                        },\n                    }\n        readXlsxFile(file, { schema })\n        .then(({ rows, errors }) => {\n            if (errors.length === 0) {\n                const students = rows.map(item => {\n                    item.studentId = this.state.lastIndex;\n                    this.setState({ lastIndex: this.state.lastIndex + 1 });\n                    return item;\n                });\n\n                this.setState({\n                  studentList: students\n                });\n            } else {\n                alert('Invalid file. Kindly follow file Template!')\n            }\n        });\n    }\n\n    downloadClicked(e) {\n        window.location.href=`${process.env.PUBLIC_URL}/studentList.xlsx`;\n    }\n\n    cancelClick(e) {\n        this.props.history.push('/classroomSetup');\n    }\n\n    saveClick(e) {\n        sessionStorage.setItem('studentList',JSON.stringify(this.state.studentList));\n        sessionStorage.setItem('uploadedFile',JSON.stringify(this.state.uploadedFile));\n\n        this.props.history.push('/addStudents');\n    }\n\n    render() {\n        const token = sessionStorage.getItem('access_token');\n        if (token === null) {\n            return <Redirect to='/'/>;\n        }\n\n        const hideGrid = {\n            marginTop: 20\n        };\n\n        let uploadedFile = this.state.uploadedFile;\n\n        return (\n            <div className=\"grid\" style={{paddingTop:20}}>\n                <Header tab='file'/>\n                <div className=\"row large-offset-1\">\n                    <div className=\"columns large-6\" style={hideGrid}>\n                        <div className=\"row\">\n                            <p style={{fontSize:16}}>Upload Students information from an excel file (.XLS or .XLSX). Files\n                            must adhere to the format shown to the right.</p>\n                        </div>\n                        <div className=\"row\" style={hideGrid}>\n                            <t style={uploadedFile === null ? {display: \"none\"} : {marginRight: 20}}>{uploadedFile}</t>\n                            <input type=\"file\" ref={this.fileRef} style={{display: \"none\"}} onChange={this.onSelectFile}/>\n                            <Button\n                                children={uploadedFile === null ? 'Upload from file' : 'Delete'}\n                                color='blue'\n                                onClick={this.uploadClicked}\n                                ariaPressed={false}\n                              />\n                              <Button\n                                  children='Download Template'\n                                  color='blue-outline'\n                                  onClick={this.downloadClicked}\n                                  ariaPressed={false}\n                                />\n                         </div>\n                    </div>\n                    <div className=\"columns large-6\" style={hideGrid}>\n                        <img  alt=\"fileImageHolder\" src=\"fileImageHolder.png\"/>\n                    </div>\n                </div>\n                <div className=\"row large-offset-1\" style={{marginTop:40, marginLeft:10}}>\n                    <div className=\"large-2 columns\">\n                        <Button\n                            children='Back'\n                            color='blue-outline'\n                            onClick={this.cancelClick}\n                            style={{color:'blue',borderRadius:5}}\n                            ariaPressed={false}\n                          />\n                    </div>\n                    <div className=\"large-1 columns\">\n                        <Button\n                            children='Continue'\n                            color='blue'\n                            onClick={this.saveClick}\n                            ariaPressed={false}\n                          />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default FileUpload;\n","import React from 'react';\nimport {\n    Input,\n    Button,\n    EditableTextfield,\n} from '@momentum-ui/react';\nimport {\n    Redirect,\n} from 'react-router-dom';\nimport {\n    findIndex,\n    without\n} from 'lodash';\nimport Header from './Header.js';\n\nclass ManualEntry extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            studentList: [],\n            firstName: null,\n            lastName: null,\n            email: null,\n            lastIndex: 1,\n            firstNameError: {},\n            lastNameError: {},\n            emailError: {},\n        };\n        this.addInfo = this.addInfo.bind(this);\n        this.updateInfo = this.updateInfo.bind(this);\n        this.deleteInfo = this.deleteInfo.bind(this);\n        this.onTextChange = this.onTextChange.bind(this);\n        this.saveClick = this.saveClick.bind(this);\n        this.cancelClick = this.cancelClick.bind(this);\n    }\n\n    componentDidMount(props) {\n        const studentObj = JSON.parse(sessionStorage.getItem('studentList'));\n        if (studentObj !== null) {\n            this.setState({\n              lastIndex: studentObj.length + 1,\n              studentList: studentObj\n            });\n        }\n    }\n\n    validateEmail() {\n        this.setState({error: false});\n        let email = this.state.mail;\n        if (email === null) {\n            this.setState({error: true});\n            return;\n        }\n        let lastAtPos = email.lastIndexOf('@');\n        let lastDotPos = email.lastIndexOf('.');\n        if (!(lastAtPos < lastDotPos &&\n              lastAtPos > 0 &&\n              email.indexOf('@@') === -1 &&\n              lastDotPos > 2 &&\n             (email.length - lastDotPos) > 2)) {\n                 this.setState({error: true});\n        }\n    }\n\n    addInfo(e) {\n        e.preventDefault();\n        if (this.state.firstName === null) {\n            this.setState({\n                firstNameError: { message: 'Please enter student first name.', type: 'error' },\n            });\n        } else if (this.state.lastName === null) {\n            this.setState({\n                lastNameError: { message: 'Please enter student last name.', type: 'error' },\n            });\n        } else if (this.state.email === null) {\n            this.setState({\n                emailError: { message: 'Please enter student email.', type: 'error' },\n            });\n        } else {\n            let newStudent = {\n                firstName: this.state.firstName,\n                lastName: this.state.lastName,\n                email: this.state.email,\n                studentId: this.state.lastIndex,\n            };\n            let temp = this.state.studentList;\n            temp.push(newStudent);\n            this.setState({\n                studentList: temp,\n                lastIndex: this.state.lastIndex + 1,\n            });\n            this.setState({\n              firstName: null,\n              lastName: null,\n              email: null,\n            });\n\n        }\n    }\n\n    cancelClick(e) {\n        this.props.history.push('/fileUpload');\n    }\n\n    saveClick(e) {\n        sessionStorage.setItem('studentList',JSON.stringify(this.state.studentList));\n\n        this.props.history.push('/review');\n    }\n\n    onTextChange(e) {\n        const target = e.target;\n        const value = target.value;\n        const name = target.name;\n\n        let errorMsg = {};\n        if (value === '') {\n            errorMsg = { message: 'Please enter student information', type: 'error' };\n        }\n        this.setState({\n          [name]: value,\n          [`${name}Error`]: errorMsg,\n        });\n    }\n\n    updateInfo(name, value, id) {\n        let temp = this.state.studentList;\n        let stdIndex = findIndex(this.state.studentList, {\n          studentId: id\n        });\n        temp[stdIndex][name] = value;\n        this.setState({\n          studentList: temp\n        });\n    }\n\n    deleteInfo(item) {\n        let temp = this.state.studentList;\n        temp = without(temp, item);\n        this.setState({\n          studentList: temp\n        });\n    }\n\n    render() {\n        const token = sessionStorage.getItem('access_token');\n        if (token === null) {\n            return <Redirect to='/'/>;\n        }\n\n        const hideGrid = {\n            marginTop: 20\n        };\n\n        let students = this.state.studentList;\n\n        return (\n            <div className=\"grid\" style={{paddingTop:20}}>\n                <Header tab='manual'/>\n                <div className=\"row large-offset-1\">\n                    <div className=\"columns large-10\" style={hideGrid}>\n                        <p style={{fontSize:16}}>Enter Students’ information manually.</p>\n                    </div>\n                </div>\n                {students.map(item => (\n                    <div className=\"row large-offset-1\" key={item.studentId}>\n                        <div className=\"row\"  key={item.studentId}>\n                            <div className=\"columns large-2\" style={hideGrid}>\n                                <EditableTextfield\n                                        handleDoneEditing={(e, data) => this.updateInfo('firstName',data.value,item.studentId)}\n                                        inputText={item.firstName}\n                                      />\n                            </div>\n                            <div className=\"columns large-2\" style={hideGrid}>\n                                <EditableTextfield\n                                        handleDoneEditing={(e, data) => this.updateInfo('lastName',data.value,item.studentId)}\n                                        inputText={item.lastName}\n                                      />\n                            </div>\n                            <div className=\"columns large-2\" style={hideGrid}>\n                                <EditableTextfield\n                                        handleDoneEditing={(e, data) => this.updateInfo('email',data.value,item.studentId)}\n                                        inputText={item.email}\n                                      />\n                            </div>\n                            <div className=\"columns large-5\" style={hideGrid}>\n                                <Button\n                                    children='Delete'\n                                    color='blue-outline'\n                                    onClick={(e) => this.deleteInfo(item)}\n                                    style={{color:'blue',borderRadius:5}}\n                                  />\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <hr style={{marginLeft: 20, height: 1, width: '95%', border: 'none', color: 'grey', backgroundColor: 'grey'}}></hr>\n                        </div>\n                    </div>\n                ))}\n                <div className=\"row large-offset-1\">\n                    <div className=\"columns large-4\" style={hideGrid}>\n                        <Input\n                            name='firstName'\n                            label='First Name'\n                            type='text'\n                            inputSize='large-15'\n                            placeholder='Emily'\n                            onChange={this.onTextChange}\n                            messageArr={[ this.state.firstNameError ]}\n                            htmlId='firstName'\n                          />\n                    </div>\n                    <div className=\"columns large-4\" style={hideGrid}>\n                        <Input\n                            name='lastName'\n                            label='Last Name'\n                            type='text'\n                            inputSize='large-15'\n                            placeholder='Henning'\n                            onChange={this.onTextChange}\n                            messageArr={[ this.state.lastNameError ]}\n                            htmlId='lastName'\n                          />\n                    </div>\n                    <div className=\"columns large-4\" style={hideGrid}>\n                        <Input\n                            name='email'\n                            label='Email'\n                            type='email'\n                            inputSize='large-15'\n                            placeholder='emilyhenning@gmail.com'\n                            onChange={this.onTextChange}\n                            messageArr={[ this.state.emailError ]}\n                            htmlId='email'\n                          />\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"columns large-offset-11 large-1\" style={hideGrid}>\n                        <Button\n                            children='Add'\n                            color='blue'\n                            onClick={this.addInfo}\n                            style={{color:'blue',borderRadius:5}}\n                            ariaPressed={false}\n                          />\n                    </div>\n                </div>\n                <div className=\"row large-offset-1\" style={{marginTop:40, marginLeft:10}}>\n                    <div className=\"large-10 columns\">\n                        <Button\n                            children='Back'\n                            color='blue-outline'\n                            onClick={this.cancelClick}\n                            style={{color:'blue',borderRadius:5}}\n                            ariaPressed={false}\n                          />\n                    </div>\n                    <div className=\"large-1 columns\">\n                        <Button\n                            children='Continue'\n                            color='blue'\n                            onClick={this.saveClick}\n                            ariaPressed={false}\n                          />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default ManualEntry;\n","import React from 'react';\nimport {\n    Button,\n    Modal,\n    ModalBody,\n    ModalFooter,\n    ModalHeader,\n    Icon\n} from '@momentum-ui/react';\nimport {\n    Redirect,\n} from 'react-router-dom';\nimport {requestCreateSpace} from './Orchestrator.js';\nimport Header from './Header.js';\n\nclass Review extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            showDialog: false,\n            showActivity: false,\n        };\n        this.modalDialogRef = React.createRef();\n        this.activityDialogRef = React.createRef();\n        this.saveClick = this.saveClick.bind(this);\n        this.editClass = this.editClass.bind(this);\n        this.editStudents = this.editStudents.bind(this);\n    }\n\n    componentDidMount(){\n        this.setState({\n            showActivity: false,\n        });\n    }\n\n    editClass(e) {\n        this.props.history.push('/classroomSetup');\n    }\n\n    editStudents(e) {\n        this.props.history.push('/addStudents');\n    }\n\n    saveClick(e) {\n        this.modalDialogRef.current.closeModal();\n\n        const studentObj = JSON.parse(sessionStorage.getItem('studentList'));\n        let participants =  studentObj.map( function(student) {\n            return ({email: student.email, privilege: 'member'});\n        });\n\n        const teacher = sessionStorage.getItem('userInfo');\n        participants.push({email: teacher, privilege: 'owner'});\n\n        const classObj = JSON.parse(sessionStorage.getItem('classObj'));\n        let spaceInfo = {\n            caseNumber: classObj.courseNumber,\n            event: 'classroomSetup',\n            teamId: '',\n            title: classObj.className,\n            type: 'internal',\n            participants: participants\n        };\n        // console.log(spaceInfo);\n\n        let classList = JSON.parse(localStorage.getItem('classList'));\n        if (classList === null) {\n            classList = [];\n        }\n\n        this.setState({\n            showActivity: true,\n        });\n\n        (async () => {\n            const spaceId = await requestCreateSpace(JSON.stringify(spaceInfo));\n\n            this.setState({\n                showActivity: false,\n            });\n            this.activityDialogRef.current.closeModal();\n\n            let classroom = {\n                name: `${classObj.period} Period: ${classObj.className}`,\n                time: `${classObj.startTime} - ${classObj.endTime}, ${classObj.recurrence}`,\n                spaceId: spaceId,\n            };\n            classList.push(classroom);\n\n            localStorage.setItem('classList', JSON.stringify(classList));\n            this.props.history.push('/addClasses');\n        })();\n\n    }\n\n    render() {\n        const token = sessionStorage.getItem('access_token');\n        if (token === null) {\n            return <Redirect to='/'/>;\n        }\n\n        const hideGrid = {\n            marginTop: 20\n        };\n\n        const activity = {\n            display: 'block',\n            position: 'fixed',\n            width: '100%',\n            height: '100%',\n            top: 0,\n            left: 0,\n            background: 'gray',\n        };\n        let className = '';\n        let courseNumber = '';\n        let period = '';\n        let time = '';\n        let recurrence = '';\n        let date = '';\n\n        const obj = JSON.parse(sessionStorage.getItem('classObj'));\n        if (obj !== null) {\n            className = obj.className;\n            courseNumber = obj.courseNumber;\n            period = obj.period;\n            time= `${obj.startTime} - ${obj.endTime}`;\n            recurrence = obj.recurrence;\n            date = obj.date;\n        }\n        let students = [];\n        const studentObj = JSON.parse(sessionStorage.getItem('studentList'));\n        if (studentObj !== null) {\n            students = studentObj;\n        }\n\n        return (\n            <div className=\"grid\" style={{paddingTop:20}}>\n                <Header tab='review'/>\n                <div className=\"row large-offset-1\"  style={hideGrid}>\n                        <p style={{fontSize:16}}>Please review the information for the class to finish the set-up process.</p>\n                </div>\n                <div className=\"row large-offset-1\" style={hideGrid}>\n                    <b>General Info:</b>\n                </div>\n                <div className=\"row large-offset-1\">\n                    Class Name: {className}\n                </div>\n                <div className=\"row large-offset-1\">\n                    Course Number: {courseNumber}\n                </div>\n                <div className=\"row large-offset-1\">\n                    Period: {period}\n                </div>\n                <div className=\"row large-offset-1\">\n                    Time: {time}\n                </div>\n                <div className=\"row large-offset-1\">\n                    Recurrence: {recurrence}\n                </div>\n                <div className=\"row large-offset-1\">\n                    Last Day of Class: {date}\n                </div>\n                <div className=\"row large-offset-1\">\n                    <Button\n                        children='Edit'\n                        color='blue-outline'\n                        onClick={this.editClass}\n                        style={{color:'blue',borderRadius:5}}\n                        ariaPressed={false}\n                      />\n                </div>\n                <div className=\"row large-offset-1\" style={hideGrid}>\n                    <b>Students ({students.length} Added):</b>\n                </div>\n                {students.map(item => (\n                    <div className=\"row large-offset-1\"  key={item.studentId}>\n                        <div className=\"large-3 columns\">\n                            {item.studentId}. {item.firstName} {item.lastName}\n                        </div>\n                        <div className=\"large-9 columns\">\n                             {item.email}\n                        </div>\n                    </div>\n                ))}\n                <div className=\"row large-offset-1\">\n                    <Button\n                        children='Edit'\n                        color='blue-outline'\n                        onClick={this.editStudents}\n                        style={{color:'blue',borderRadius:5}}\n                        ariaPressed={false}\n                      />\n                </div>\n                <div className=\"row large-offset-1\" style={{marginTop:40}}>\n                    <div className=\"large-2 columns\">\n                        <Button\n                            children='Back'\n                            color='blue-outline'\n                            onClick={this.editStudents}\n                            style={{color:'blue',borderRadius:5}}\n                            ariaPressed={false}\n                          />\n                    </div>\n                    <div className=\"large-1 columns\">\n                        <Button\n                            children='Finish'\n                            color='blue'\n                            onClick={() => this.setState({showDialog: true})}\n                            ariaPressed={false}\n                          />\n                    </div>\n                </div>\n                <Modal\n                    icon={<Icon name=\"warning_72\" color=\"$md-yellow-50\"/>}\n                    applicationId='app'\n                    onHide={() => this.setState({showDialog: false})}\n                    show={this.state.showDialog}\n                    ref={this.modalDialogRef}\n                    size='dialog'\n                    htmlId='modalDialog'\n                    >\n                <ModalHeader\n                    headerLabel='Confirm'\n                />\n                <ModalBody>\n                    <span>Once you click “Finish & Create,” a Webex Teams space will be created with all of the students you added. Any changes can be made through the Webex Teams application.</span>\n                </ModalBody>\n                <ModalFooter>\n                    <Button\n                        children='Back to Set Up'\n                        onClick={() => this.modalDialogRef.current.closeModal()}\n                        ariaLabel='Close Modal'\n                        color='default'\n                    />\n                    <Button\n                        children='Finish & Create'\n                        onClick={this.saveClick}\n                        ariaLabel='Submit Form'\n                        color='blue'\n                    />\n                </ModalFooter>\n                </Modal>\n                <Modal\n                    onHide={() => this.setState({showDialog: false})}\n                    show={this.state.showActivity}\n                    ref={this.activityDialogRef}\n                    size='dialog'\n                    htmlId='activityDialog'\n                    >\n                <ModalHeader\n                    headerLabel='Classroom Setup in progress...'\n                />\n                </Modal>\n            </div>\n        );\n    }\n}\n\nexport default Review;\n","import React from 'react';\n\nconst NotFound = () => {\n    return (\n        <h1>404: Page Not Found</h1>\n    );\n}\n\nexport default NotFound;\n","import React from 'react';\nimport './App.css';\nimport Landing from './pages/Landing.js';\nimport Login from './pages/Login.js';\nimport Home from './pages/Home.js';\nimport GeneralForm from './pages/GeneralForm.js';\nimport FileUpload from './pages/FileUpload.js';\nimport ManualEntry from './pages/ManualEntry.js';\nimport Review from './pages/Review.js';\nimport NotFound from './pages/NotFound.js'\nimport {\n    BrowserRouter as Router,\n    Route,\n    Switch\n} from 'react-router-dom';\n\nclass App extends React.Component {\n    render() {\n        return (\n            <Router>\n                <div className=\"App\">\n                  <div id=\"page-id\">\n                  <Switch>\n                        <Route path=\"/\" component={Landing} exact/>\n                        <Route path=\"/auth\" component={Login} />\n                        <Route path=\"/addClasses\" component={Home} />\n                        <Route path=\"/classroomSetup\" component={GeneralForm} />\n                        <Route path=\"/fileUpload\" component={FileUpload} />\n                        <Route path=\"/addStudents\" component={ManualEntry} />\n                        <Route path=\"/review\" component={Review} />\n                        <Route component={NotFound} />\n                    </Switch>\n                  </div>\n                </div>\n            </Router>\n        );\n    }\n}\n\nexport default App;\n\n/*\n<Route path=\"/classroomReady\" component={Complete} />\n\nfunction PrivateRoute({ children, ...rest }) {\n    const token = sessionStorage.getItem('access_token');\n\n    return (\n        <Route\n          {...rest}\n          render={({ location }) =>\n            token ? (\n              children\n            ) : (\n              <Redirect\n                to={{\n                  pathname: \"/\",\n                  state: { from: location }\n                }}\n              />\n            )\n          }\n        />\n    );\n}\n\n<PrivateRoute path=\"/addClasses\">\n  <Home />\n</PrivateRoute>\n<PrivateRoute path=\"/classroomSetup\">\n  <GeneralForm />\n</PrivateRoute>\n<PrivateRoute path=\"/fileUpload\">\n  <FileUpload />\n</PrivateRoute>\n<PrivateRoute path=\"/addStudents\">\n  <ManualEntry />\n</PrivateRoute>\n<PrivateRoute path=\"/review\">\n  <Review />\n</PrivateRoute>\n*/\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}